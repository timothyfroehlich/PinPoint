
> pinpoint@0.1.0 test
> vitest run


 RUN  v3.2.4 /var/home/froeht/Code/PinPoint

stdout | src/server/api/routers/__tests__/issue.timeline.test.ts
[MSW] Server started

stdout | src/server/api/__tests__/trpc.permission.test.ts
[MSW] Server started

stdout | src/server/api/routers/__tests__/issue.comment.test.ts
[MSW] Server started

stdout | src/server/api/routers/__tests__/collection.test.ts
[MSW] Server started

stdout | src/server/api/routers/__tests__/collection.test.ts > Collection Router Integration Tests > Public Procedures > should get collections for location without authentication
[Worker 1] Creating shared PGlite instance with seeded data

stdout | src/server/api/routers/__tests__/issue.test.ts
[MSW] Server started

stdout | src/server/api/routers/__tests__/issue.test.ts > Issue Router Integration Tests > getById procedure > should retrieve issue by ID with full details
[Worker 3] Creating shared PGlite instance with seeded data

stdout | src/integration-tests/issue.timeline.integration.test.ts
[MSW] Server started

stdout | src/integration-tests/comment.integration.test.ts
[MSW] Server started

stdout | src/integration-tests/comment.integration.test.ts > Comment Router Integration (PGlite) > getForIssue > should get comments for an issue with author info
[Worker 6] Creating shared PGlite instance with seeded data

stdout | src/integration-tests/issue.timeline.integration.test.ts > Issue Timeline Router Integration (PGlite) > getTimeline > should get timeline with comments and activities for valid issue
[Worker 7] Creating shared PGlite instance with seeded data

 ❯ |integration| src/integration-tests/issue.timeline.integration.test.ts (10 tests | 5 failed) 3330ms
   × Issue Timeline Router Integration (PGlite) > getTimeline > should get timeline with comments and activities for valid issue 1063ms
     → expected { id: 'test-comment-1', …(5) } to match object { itemType: 'comment', …(4) }
(1 matching property omitted from actual)
   ✓ Issue Timeline Router Integration (PGlite) > getTimeline > should handle issue with no timeline data 171ms
   ✓ Issue Timeline Router Integration (PGlite) > getTimeline > should throw NOT_FOUND for non-existent issue  463ms
   × Issue Timeline Router Integration (PGlite) > getTimeline > should enforce organizational scoping 229ms
     → promise resolved "[ { id: 'other-org-comment', …(5) } ]" instead of rejecting
   ✓ Issue Timeline Router Integration (PGlite) > getTimeline > should handle timeline with only comments  445ms
   ✓ Issue Timeline Router Integration (PGlite) > getTimeline > should handle timeline with only activities  449ms
   ✓ Issue Timeline Router Integration (PGlite) > getTimeline > should handle mixed timeline with complex chronological ordering  482ms
   × Issue Timeline Router Integration (PGlite) > getTimeline > should validate issue exists before calling service 2ms
     → vi.mocked(...).mockReturnValue is not a function
   × Issue Timeline Router Integration (PGlite) > Service Integration > should properly integrate with IssueActivityService 2ms
     → vi.mocked(...).mockReturnValue is not a function
   × Issue Timeline Router Integration (PGlite) > Service Integration > should handle service errors gracefully 2ms
     → vi.mocked(...).mockReturnValue is not a function
stdout | __vite_ssr_import_0__.test.extend.workerDb.scope (/var/home/froeht/Code/PinPoint/src/test/helpers/worker-scoped-db.ts:59:15)
[Worker 7] Cleaning up PGlite instance

stdout | src/server/api/routers/__tests__/issue.timeline.router.integration.test.ts
[MSW] Server started

stdout | src/server/api/routers/__tests__/issue.timeline.router.integration.test.ts > Issue Timeline Router Integration Tests (PGlite) > Timeline Retrieval > should retrieve issue timeline with proper organizational scoping
[Worker 8] Creating shared PGlite instance with seeded data

 ❯ |node| src/server/api/__tests__/trpc.permission.test.ts (10 tests | 10 failed) 4073ms
   × tRPC Permission Middleware - ENHANCED WITH ORGANIZATIONAL BOUNDARY SECURITY > requirePermissionForSession - Core Functionality > should allow access when user has required permission 168ms
     → Cannot read properties of undefined (reading 'map')
   × tRPC Permission Middleware - ENHANCED WITH ORGANIZATIONAL BOUNDARY SECURITY > requirePermissionForSession - Core Functionality > should deny access when user lacks required permission 292ms
     → expected [Function] to throw error including 'Missing required permission: test:per…' but got 'Cannot read properties of undefined (…'
   × tRPC Permission Middleware - ENHANCED WITH ORGANIZATIONAL BOUNDARY SECURITY > requirePermissionForSession - Core Functionality > should deny access when user has no permissions 370ms
     → expected 'INTERNAL_SERVER_ERROR' to be 'FORBIDDEN' // Object.is equality
   × tRPC Permission Middleware - ENHANCED WITH ORGANIZATIONAL BOUNDARY SECURITY > CRITICAL - Cross-Organizational Permission Isolation > CRITICAL - Should prevent cross-organizational permission escalation 648ms
     → expected [Function] to throw error including 'Missing required permission: test:per…' but got 'Cannot read properties of undefined (…'
   × tRPC Permission Middleware - ENHANCED WITH ORGANIZATIONAL BOUNDARY SECURITY > CRITICAL - Cross-Organizational Permission Isolation > CRITICAL - Should validate organizational context in permission checks 189ms
     → promise rejected "TRPCError: Cannot read properties of unde… { code: '…' }" instead of resolving
   × tRPC Permission Middleware - ENHANCED WITH ORGANIZATIONAL BOUNDARY SECURITY > CRITICAL - Cross-Organizational Permission Isolation > CRITICAL - Should prevent role-based attacks across organizations 252ms
     → expected [Function] to throw error including 'Role access denied: organizational bo…' but got 'Cannot read properties of undefined (…'
   × tRPC Permission Middleware - ENHANCED WITH ORGANIZATIONAL BOUNDARY SECURITY > CRITICAL - Cross-Organizational Permission Isolation > CRITICAL - Should enforce permission matrix boundaries across organizations 426ms
     → promise rejected "TRPCError: Cannot read properties of unde… { code: '…' }" instead of resolving
   × tRPC Permission Middleware - ENHANCED WITH ORGANIZATIONAL BOUNDARY SECURITY > Security Edge Cases and Attack Vectors > should handle invalid organizational context gracefully 395ms
     → expected [Function] to throw error including 'Invalid organizational context' but got 'Cannot read properties of undefined (…'
   × tRPC Permission Middleware - ENHANCED WITH ORGANIZATIONAL BOUNDARY SECURITY > Security Edge Cases and Attack Vectors > should prevent session hijacking with org context validation 761ms
     → expected [Function] to throw error including 'Organization context mismatch' but got 'Cannot read properties of undefined (…'
   × tRPC Permission Middleware - ENHANCED WITH ORGANIZATIONAL BOUNDARY SECURITY > Security Edge Cases and Attack Vectors > should handle null/undefined organizational context securely 551ms
     → expected [Function] to throw error including 'Missing organizational context' but got 'Cannot read properties of undefined (…'
stdout | src/server/api/routers/__tests__/issue.confirmation.test.ts
[MSW] Server started

 ❯ |integration| src/integration-tests/comment.integration.test.ts (13 tests | 12 failed) 5096ms
   × Comment Router Integration (PGlite) > getForIssue > should get comments for an issue with author info 1475ms
     → expected [] to have a length of 2 but got +0
   ✓ Comment Router Integration (PGlite) > getForIssue > should handle empty results  500ms
   × Comment Router Integration (PGlite) > getForIssue > should order comments by creation date 471ms
     → expected [] to have a length of 2 but got +0
   × Comment Router Integration (PGlite) > getForIssue > should maintain organizational scoping 441ms
     → expected [] to have a length of 1 but got +0
   × Comment Router Integration (PGlite) > delete (soft delete) > should soft delete a comment successfully 108ms
     → You don't have permission to access this organization
   × Comment Router Integration (PGlite) > delete (soft delete) > should throw NOT_FOUND for non-existent comment 258ms
     → expected [Function] to throw error including 'Comment not found' but got 'You don\'t have permission to access …'
   × Comment Router Integration (PGlite) > delete (soft delete) > should throw FORBIDDEN for comment not in user's organization 228ms
     → expected [Function] to throw error including 'Comment not in organization' but got 'You don\'t have permission to access …'
   × Comment Router Integration (PGlite) > getDeleted (admin) > should get deleted comments for organization managers 294ms
     → You don't have permission to access this organization
   × Comment Router Integration (PGlite) > getDeleted (admin) > should maintain organizational scoping 302ms
     → You don't have permission to access this organization
   × Comment Router Integration (PGlite) > restore (admin) > should restore a deleted comment 108ms
     → You don't have permission to access this organization
   × Comment Router Integration (PGlite) > getCleanupStats (admin) > should get cleanup statistics 224ms
     → You don't have permission to access this organization
   × Comment Router Integration (PGlite) > Complex Integration Scenarios > should handle concurrent soft delete operations correctly 435ms
     → You don't have permission to access this organization
   × Comment Router Integration (PGlite) > Complex Integration Scenarios > should maintain referential integrity across service operations 226ms
     → You don't have permission to access this organization
stdout | __vite_ssr_import_0__.test.extend.workerDb.scope (/var/home/froeht/Code/PinPoint/src/test/helpers/worker-scoped-db.ts:59:15)
[Worker 6] Cleaning up PGlite instance

 ❯ |node| src/server/api/routers/__tests__/issue.timeline.test.ts (13 tests | 7 failed) 5336ms
   × Issue Timeline Router (Unit Tests) > getTimeline > Success Cases > should return timeline data for valid issue 481ms
     → expected "spy" to be called with arguments: [ ObjectContaining{…} ][90m

Number of calls: [1m0[22m
[39m
   ✓ Issue Timeline Router (Unit Tests) > getTimeline > Success Cases > should handle empty timeline data 205ms
   ✓ Issue Timeline Router (Unit Tests) > getTimeline > Success Cases > should work with complex timeline containing multiple item types  448ms
   × Issue Timeline Router (Unit Tests) > getTimeline > Error Cases > should throw NOT_FOUND when issue does not exist 416ms
     → promise resolved "undefined" instead of rejecting
   × Issue Timeline Router (Unit Tests) > getTimeline > Error Cases > should throw NOT_FOUND when issue belongs to different organization 249ms
     → promise resolved "undefined" instead of rejecting
   × Issue Timeline Router (Unit Tests) > getTimeline > Error Cases > should handle service method failures gracefully 243ms
     → expected "spy" to be called 1 times, but got 0 times
   × Issue Timeline Router (Unit Tests) > getTimeline > Error Cases > should handle database lookup failures 122ms
     → promise resolved "undefined" instead of rejecting
   × Issue Timeline Router (Unit Tests) > getTimeline > Input Validation > should validate required issueId parameter 637ms
     → promise resolved "undefined" instead of rejecting
   ✓ Issue Timeline Router (Unit Tests) > getTimeline > Input Validation > should accept valid issueId strings  1275ms
   ✓ Issue Timeline Router (Unit Tests) > getTimeline > Organizational Scoping > should enforce organizational isolation in issue lookup  314ms
   ✓ Issue Timeline Router (Unit Tests) > getTimeline > Organizational Scoping > should use organizationProcedure for authentication and org scoping 208ms
   ✓ Issue Timeline Router (Unit Tests) > getTimeline > Service Integration > should create activity service and call getIssueTimeline with correct parameters  342ms
   × Issue Timeline Router (Unit Tests) > getTimeline > Service Integration > should handle service creation failures 368ms
     → expected "spy" to be called 1 times, but got 0 times
stdout | src/integration-tests/schema-migration-validation.integration.test.ts
[MSW] Server started

stdout | src/integration-tests/schema-migration-validation.integration.test.ts > Schema Migration Validation > Schema Structure Validation > should have all expected tables defined
[Worker 11] Creating shared PGlite instance with seeded data

stdout | src/integration-tests/model.core.integration.test.ts
[MSW] Server started

stdout | src/integration-tests/model.core.integration.test.ts > Model Router Integration Tests (Consolidated from Router + Integration Duplicates) > getAll > returns models with machine counts using real exists() subqueries
[Worker 10] Creating shared PGlite instance with seeded data

 ❯ |node| src/server/api/routers/__tests__/issue.timeline.router.integration.test.ts (5 tests | 3 failed) 1969ms
   × Issue Timeline Router Integration Tests (PGlite) > Timeline Retrieval > should retrieve issue timeline with proper organizational scoping 689ms
     → expected 0 to be greater than 0
   ✓ Issue Timeline Router Integration Tests (PGlite) > Timeline Retrieval > should return NOT_FOUND for non-existent issues  386ms
   × Issue Timeline Router Integration Tests (PGlite) > Timeline Retrieval > should enforce cross-organizational issue access 188ms
     → promise resolved "[]" instead of rejecting
   × Issue Timeline Router Integration Tests (PGlite) > Timeline Retrieval > should handle timeline service integration 364ms
     → expected "spy" to be called with arguments: [ Array(1) ][90m

Number of calls: [1m0[22m
[39m
   ✓ Issue Timeline Router Integration Tests (PGlite) > Timeline Access Control > should respect organizational boundaries in timeline access  321ms
stdout | __vite_ssr_import_0__.test.extend.workerDb.scope (/var/home/froeht/Code/PinPoint/src/test/helpers/worker-scoped-db.ts:59:15)
[Worker 8] Cleaning up PGlite instance

 ❯ |node| src/server/api/routers/__tests__/issue.confirmation.test.ts (18 tests | 18 failed) 1640ms
   × Issue Confirmation Workflow (RLS-Enhanced) > Basic vs Full Form Creation (RLS-Enhanced) > should create unconfirmed issues with basic form and organizational scoping 3ms
     → Cannot read properties of undefined (reading 'create')
   × Issue Confirmation Workflow (RLS-Enhanced) > Basic vs Full Form Creation (RLS-Enhanced) > should create confirmed issues with full form by default 1ms
     → Cannot read properties of undefined (reading 'create')
   × Issue Confirmation Workflow (RLS-Enhanced) > Basic vs Full Form Creation (RLS-Enhanced) > should allow explicit override of confirmation status in full form 0ms
     → Cannot read properties of undefined (reading 'create')
   × Issue Confirmation Workflow (RLS-Enhanced) > Basic vs Full Form Creation (RLS-Enhanced) > should require issue:create permission for issue creation 452ms
     → expected [Function] to throw error including 'Missing required permission: issue:cr…' but got 'Cannot read properties of undefined (…'
   × Issue Confirmation Workflow (RLS-Enhanced) > Confirmation Status Toggle > should toggle confirmation status with issue:confirm permission 1ms
     → Cannot read properties of undefined (reading 'update')
   × Issue Confirmation Workflow (RLS-Enhanced) > Confirmation Status Toggle > should deny confirmation toggle without issue:confirm permission 323ms
     → expected [Function] to throw error including 'Missing required permission: issue:co…' but got 'Cannot read properties of undefined (…'
   × Issue Confirmation Workflow (RLS-Enhanced) > Confirmation Status Toggle > should return NOT_FOUND for non-existent issue 388ms
     → expected [Function] to throw error including 'Issue not found' but got 'Cannot read properties of undefined (…'
   × Issue Confirmation Workflow (RLS-Enhanced) > Confirmation Status Toggle > should toggle confirmation status from true to false 1ms
     → Cannot read properties of undefined (reading 'update')
   × Issue Confirmation Workflow (RLS-Enhanced) > Issue Listing with Confirmation Status > should list issues with confirmation status 1ms
     → Cannot read properties of undefined (reading 'findMany')
   × Issue Confirmation Workflow (RLS-Enhanced) > Issue Listing with Confirmation Status > should filter by location when locationId provided 0ms
     → Cannot read properties of undefined (reading 'findMany')
   × Issue Confirmation Workflow (RLS-Enhanced) > Issue Listing with Confirmation Status > should filter by machine when machineId provided 0ms
     → Cannot read properties of undefined (reading 'findMany')
   × Issue Confirmation Workflow (RLS-Enhanced) > Confirmation Statistics > should return confirmation statistics 0ms
     → Cannot read properties of undefined (reading 'count')
   × Issue Confirmation Workflow (RLS-Enhanced) > Confirmation Statistics > should handle zero issues gracefully 0ms
     → Cannot read properties of undefined (reading 'count')
   × Issue Confirmation Workflow (RLS-Enhanced) > Confirmation Statistics > should filter by date range when provided 0ms
     → Cannot read properties of undefined (reading 'count')
   × Issue Confirmation Workflow (RLS-Enhanced) > Confirmation Statistics > should filter by location when locationId provided 0ms
     → Cannot read properties of undefined (reading 'count')
   × Issue Confirmation Workflow (RLS-Enhanced) > Permission Requirements > should require issue:create permission for basic form 253ms
     → expected [Function] to throw error including 'Missing required permission: issue:cr…' but got 'Cannot read properties of undefined (…'
   × Issue Confirmation Workflow (RLS-Enhanced) > Permission Requirements > should require issue:create permission for full form 192ms
     → expected [Function] to throw error including 'Missing required permission: issue:cr…' but got 'Cannot read properties of undefined (…'
   × Issue Confirmation Workflow (RLS-Enhanced) > Permission Requirements > should not require additional permissions for basic form beyond issue:create 1ms
     → Cannot read properties of undefined (reading 'create')
stdout | src/integration-tests/notification.schema.test.ts
[MSW] Server started

 ❯ |integration| src/integration-tests/schema-migration-validation.integration.test.ts (9 tests | 4 failed) 705ms
   ✓ Schema Migration Validation > Schema Structure Validation > should have all expected tables defined  669ms
   × Schema Migration Validation > Schema Structure Validation > should support essential database operations 3ms
     → SEED_TEST_IDS is not defined
   × Schema Migration Validation > Index Performance Validation > should have efficient organizationId indexes for multi-tenancy 1ms
     → SEED_TEST_IDS is not defined
   × Schema Migration Validation > Index Performance Validation > should efficiently query multi-tenant data 1ms
     → SEED_TEST_IDS is not defined
   × Schema Migration Validation > Foreign Key Relationship Validation > should handle foreign key relationships correctly 1ms
     → SEED_TEST_IDS is not defined
   ✓ Schema Migration Validation > Foreign Key Relationship Validation > should validate business logic constraints 2ms
   ✓ Schema Migration Validation > Default Values and Constraints > should apply correct default values for users 1ms
   ✓ Schema Migration Validation > Default Values and Constraints > should apply correct default values for organizations 1ms
   ✓ Schema Migration Validation > Default Values and Constraints > should enforce required fields 1ms
stdout | src/integration-tests/notification.schema.test.ts > Notification schema integration > enforces required fields and foreign keys
[Worker 12] Creating shared PGlite instance with seeded data

stdout | __vite_ssr_import_0__.test.extend.workerDb.scope (/var/home/froeht/Code/PinPoint/src/test/helpers/worker-scoped-db.ts:59:15)
[Worker 11] Cleaning up PGlite instance

 ❯ |node| src/server/api/routers/__tests__/issue.test.ts (27 tests | 23 failed) 6179ms
   × Issue Router Integration Tests > getById procedure > should retrieve issue by ID with full details 1278ms
     → You don't have permission to access this organization
   × Issue Router Integration Tests > getById procedure > should enforce organization isolation 311ms
     → expected [Function] to throw error including 'Issue not found' but got 'You don\'t have permission to access …'
   × Issue Router Integration Tests > getById procedure > should throw error for non-existent issue 329ms
     → expected [Function] to throw error including 'Issue not found' but got 'You don\'t have permission to access …'
   × Issue Router Integration Tests > update procedure > should update issue fields successfully 399ms
     → You don't have permission to access this organization
   × Issue Router Integration Tests > update procedure > should enforce organization isolation on updates 290ms
     → expected [Function] to throw error including 'Issue not found' but got 'You don\'t have permission to access …'
   × Issue Router Integration Tests > updateStatus procedure > should update issue status successfully 415ms
     → You don't have permission to access this organization
   × Issue Router Integration Tests > updateStatus procedure > should validate status belongs to same organization 170ms
     → expected [Function] to throw error including 'Invalid status' but got 'You don\'t have permission to access …'
   ✓ Issue Router Integration Tests > Authentication and Authorization > should require authentication for protected procedures  1057ms
   × Public Issue Procedures > publicCreate - Anonymous Issue Creation > should allow anonymous users to create issues via QR codes 406ms
     → Machine not found
   ✓ Public Issue Procedures > publicCreate - Anonymous Issue Creation > should validate required fields for anonymous issue creation  312ms
   ✓ Public Issue Procedures > publicCreate - Anonymous Issue Creation > should validate email format for reporterEmail 139ms
   ✓ Public Issue Procedures > publicCreate - Anonymous Issue Creation > should handle machine not found error 164ms
   × Public Issue Procedures > publicCreate - Anonymous Issue Creation > should handle missing default status error 434ms
     → expected [Function] to throw error including 'Default issue status not found. Pleas…' but got 'Machine not found'
   × Public Issue Procedures > publicCreate - Anonymous Issue Creation > should handle missing default priority error 1ms
     → seededData is not defined
   × Public Issue Procedures > publicCreate - Anonymous Issue Creation > should create minimal issue with only required fields 4ms
     → seededData is not defined
   × Public Issue Procedures > publicGetAll - Anonymous Issue Viewing > should allow anonymous users to view issues 439ms
     → expected [ { …(11) }, { …(11) }, …(10) ] to have a length of 2 but got 12
   × Public Issue Procedures > publicGetAll - Anonymous Issue Viewing > should filter issues by location 1ms
     → setupPublicTestData is not defined
   × Public Issue Procedures > publicGetAll - Anonymous Issue Viewing > should filter issues by machine 1ms
     → setupPublicTestData is not defined
   × Public Issue Procedures > publicGetAll - Anonymous Issue Viewing > should filter issues by status 1ms
     → setupPublicTestData is not defined
   × Public Issue Procedures > publicGetAll - Anonymous Issue Viewing > should filter issues by status category 1ms
     → setupPublicTestData is not defined
   × Public Issue Procedures > publicGetAll - Anonymous Issue Viewing > should filter issues by model 1ms
     → setupPublicTestData is not defined
   × Public Issue Procedures > publicGetAll - Anonymous Issue Viewing > should handle custom limit parameter 1ms
     → setupPublicTestData is not defined
   × Public Issue Procedures > publicGetAll - Anonymous Issue Viewing > should enforce maximum limit of 100 0ms
     → setupPublicTestData is not defined
   × Public Issue Procedures > publicGetAll - Anonymous Issue Viewing > should enforce minimum limit of 1 0ms
     → setupPublicTestData is not defined
   × Public Issue Procedures > publicGetAll - Anonymous Issue Viewing > should sort issues by different criteria 1ms
     → setupPublicTestData is not defined
   × Public Issue Procedures > publicGetAll - Anonymous Issue Viewing > should handle organization not found error 0ms
     → setupPublicTestData is not defined
   × Public Issue Procedures > publicGetAll - Anonymous Issue Viewing > should combine multiple filters 1ms
     → setupPublicTestData is not defined
stdout | __vite_ssr_import_0__.test.extend.workerDb.scope (/var/home/froeht/Code/PinPoint/src/test/helpers/worker-scoped-db.ts:59:15)
[Worker 3] Cleaning up PGlite instance

stdout | src/integration-tests/multi-tenant-isolation.integration.test.ts
[MSW] Server started

stdout | src/integration-tests/multi-tenant-isolation.integration.test.ts > Multi-Tenant Isolation > Organization Boundary Enforcement > should enforce organizationId on all tenant-scoped tables
[Worker 13] Creating shared PGlite instance with seeded data

 ❯ |integration| src/integration-tests/model.core.integration.test.ts (16 tests | 15 failed) 986ms
   × Model Router Integration Tests (Consolidated from Router + Integration Duplicates) > getAll > returns models with machine counts using real exists() subqueries 625ms
     → Seeded admin user not found
   × Model Router Integration Tests (Consolidated from Router + Integration Duplicates) > getAll > should return global OPDB models when organization has no machines 2ms
     → Seeded admin user not found
   × Model Router Integration Tests (Consolidated from Router + Integration Duplicates) > getAll > excludes models from other organizations 2ms
     → Seeded admin user not found
   × Model Router Integration Tests (Consolidated from Router + Integration Duplicates) > getAll > returns models sorted by name 1ms
     → Seeded admin user not found
   × Model Router Integration Tests (Consolidated from Router + Integration Duplicates) > getById > returns model with machine count for valid ID 1ms
     → Seeded admin user not found
   ✓ Model Router Integration Tests (Consolidated from Router + Integration Duplicates) > getById > throws NOT_FOUND for non-existent model  310ms
   × Model Router Integration Tests (Consolidated from Router + Integration Duplicates) > getById > throws NOT_FOUND for model not in organization 3ms
     → Seeded admin user not found
   × Model Router Integration Tests (Consolidated from Router + Integration Duplicates) > getById > throws NOT_FOUND for model with no machines in organization 3ms
     → Seeded admin user not found
   × Model Router Integration Tests (Consolidated from Router + Integration Duplicates) > organizational boundaries > enforces strict organizational scoping with real data 3ms
     → Seeded admin user not found
   × Model Router Integration Tests (Consolidated from Router + Integration Duplicates) > organizational boundaries > validates organizational access with exists() subqueries 5ms
     → Seeded admin user not found
   × Model Router Integration Tests (Consolidated from Router + Integration Duplicates) > machine counting accuracy > counts machines accurately with SQL extras 1ms
     → Seeded admin user not found
   × Model Router Integration Tests (Consolidated from Router + Integration Duplicates) > machine counting accuracy > excludes inactive machines from count 2ms
     → Seeded admin user not found
   × Model Router Integration Tests (Consolidated from Router + Integration Duplicates) > complex relational queries > handles models with complex machine relationships 1ms
     → Seeded admin user not found
   × Model Router Integration Tests (Consolidated from Router + Integration Duplicates) > Cross-Organizational Security Testing (from Router Version) > should enforce organizational boundaries across all operations 4ms
     → Seeded admin user not found
   × Model Router Integration Tests (Consolidated from Router + Integration Duplicates) > Real Database Operations & Performance (from Router Version) > should perform accurate machine counting with complex relationships 1ms
     → Seeded admin user not found
   × Model Router Integration Tests (Consolidated from Router + Integration Duplicates) > Real Database Operations & Performance (from Router Version) > should handle database errors gracefully with real operations 1ms
     → Seeded admin user not found
stdout | __vite_ssr_import_0__.test.extend.workerDb.scope (/var/home/froeht/Code/PinPoint/src/test/helpers/worker-scoped-db.ts:59:15)
[Worker 10] Cleaning up PGlite instance

stdout | src/integration-tests/location.crud.integration.test.ts
[MSW] Server started

stdout | src/integration-tests/location.crud.integration.test.ts > Location Router CRUD Operations (PGlite) > create > should create location with real database operations
[Worker 14] Creating shared PGlite instance with seeded data

stdout | src/integration-tests/location.integration.test.ts
[MSW] Server started

stdout | src/integration-tests/location.integration.test.ts > Location Router - Schema & Performance Tests (PGlite) > Database Schema Validation > should maintain referential integrity
[Worker 15] Creating shared PGlite instance with seeded data

 ❯ |integration| src/integration-tests/notification.schema.test.ts (5 tests | 3 failed) 799ms
   × Notification schema integration > enforces required fields and foreign keys 761ms
     → Failed query: insert into "notifications" ("id", "message", "read", "createdAt", "userId", "type", "entityType", "entityId", "actionUrl", "organizationId") values ($1, $2, default, default, $3, $4, default, default, default, default) returning "id", "message", "read", "createdAt", "userId", "type", "entityType", "entityId", "actionUrl", "organizationId"
params: notification-12-d804999f,Valid notification,test-user-12-10e558e7,ISSUE_CREATED
   ✓ Notification schema integration > validates enums 3ms
   × Notification schema integration > cascades on user delete 3ms
     → Failed query: insert into "notifications" ("id", "message", "read", "createdAt", "userId", "type", "entityType", "entityId", "actionUrl", "organizationId") values ($1, $2, default, default, $3, $4, default, default, default, default) returning "id", "message", "read", "createdAt", "userId", "type", "entityType", "entityId", "actionUrl", "organizationId"
params: notification-12-77ab3218,Cascade delete test,cascade-user-12-956d6275,ISSUE_CREATED
   × Notification schema integration > sets default values 2ms
     → Failed query: insert into "notifications" ("id", "message", "read", "createdAt", "userId", "type", "entityType", "entityId", "actionUrl", "organizationId") values ($1, $2, default, default, $3, $4, default, default, default, default) returning "id", "message", "read", "createdAt", "userId", "type", "entityType", "entityId", "actionUrl", "organizationId"
params: notification-12-f80b8550,Default value test,default-test-user-12-b5c656a4,ISSUE_CREATED
   ✓ Notification schema integration > creates indexes for performance 3ms
stdout | __vite_ssr_import_0__.test.extend.workerDb.scope (/var/home/froeht/Code/PinPoint/src/test/helpers/worker-scoped-db.ts:59:15)
[Worker 12] Cleaning up PGlite instance

stdout | src/integration-tests/location.aggregation.integration.test.ts
[MSW] Server started

 ❯ |integration| src/integration-tests/multi-tenant-isolation.integration.test.ts (15 tests | 2 failed | 9 skipped) 899ms
   × Multi-Tenant Isolation > Organization Boundary Enforcement > should enforce organizationId on all tenant-scoped tables 849ms
     → SEED_TEST_IDS is not defined
   × Multi-Tenant Isolation > Organization Boundary Enforcement > should prevent querying data across organization boundaries 1ms
     → SEED_TEST_IDS is not defined
   ✓ Multi-Tenant Isolation > Organization Boundary Enforcement > should prevent updating data across organization boundaries 6ms
   ✓ Multi-Tenant Isolation > Organization Boundary Enforcement > should prevent deleting data across organization boundaries 5ms
   ✓ Multi-Tenant Isolation > Global vs Tenant-Scoped Entities > should handle null organizationId for global entities 1ms
   ✓ Multi-Tenant Isolation > Global vs Tenant-Scoped Entities > should allow multi-organization access for global data 10ms
   ↓ Multi-Tenant Isolation > Critical RLS Policy Enforcement > CRITICAL - Database-level cross-organizational access blocking
   ↓ Multi-Tenant Isolation > Critical RLS Policy Enforcement > CRITICAL - Zero tolerance for cross-organizational data leakage
   ↓ Multi-Tenant Isolation > Critical RLS Policy Enforcement > CRITICAL - Complex JOIN queries respect RLS boundaries
   ↓ Multi-Tenant Isolation > Critical RLS Policy Enforcement > CRITICAL - Anonymous access blocked by RLS
   ↓ Multi-Tenant Isolation > Critical RLS Policy Enforcement > CRITICAL - Invalid organization context blocks all access
   ↓ Multi-Tenant Isolation > Edge Case Security Validation > SQL injection attempts cannot bypass RLS
   ↓ Multi-Tenant Isolation > Edge Case Security Validation > Complex WHERE conditions cannot bypass organizational boundaries
   ↓ Multi-Tenant Isolation > Edge Case Security Validation > Subquery attempts cannot access cross-organizational data
   ↓ Multi-Tenant Isolation > Performance Security Validation > RLS enforcement maintains performance boundaries
stdout | __vite_ssr_import_0__.test.extend.workerDb.scope (/var/home/froeht/Code/PinPoint/src/test/helpers/worker-scoped-db.ts:59:15)
[Worker 13] Cleaning up PGlite instance

stdout | src/integration-tests/cross-org-isolation.test.ts
[MSW] Server started

stdout | src/integration-tests/cross-org-isolation.test.ts > Cross-Organization Isolation > Basic Organizational Isolation > users can only see data from their own organization
[Worker 17] Creating shared PGlite instance with seeded data

 ❯ |integration| src/integration-tests/location.crud.integration.test.ts (14 tests | 14 failed) 871ms
   × Location Router CRUD Operations (PGlite) > create > should create location with real database operations 775ms
     → User not found in seeded data: test-user-tim
   × Location Router CRUD Operations (PGlite) > create > should enforce organizational isolation on create 3ms
     → User not found in seeded data: test-user-tim
   × Location Router CRUD Operations (PGlite) > getAll > should get locations with machine relationships 2ms
     → User not found in seeded data: test-user-tim
   × Location Router CRUD Operations (PGlite) > getAll > should order locations by name 1ms
     → User not found in seeded data: test-user-tim
   × Location Router CRUD Operations (PGlite) > getAll > should maintain organizational scoping with multiple orgs 2ms
     → User not found in seeded data: test-user-tim
   × Location Router CRUD Operations (PGlite) > update > should update location with real database persistence 1ms
     → User not found in seeded data: test-user-tim
   × Location Router CRUD Operations (PGlite) > update > should prevent cross-organizational updates 2ms
     → User not found in seeded data: test-user-tim
   × Location Router CRUD Operations (PGlite) > update > should handle partial updates correctly 1ms
     → User not found in seeded data: test-user-tim
   × Location Router CRUD Operations (PGlite) > getById > should get location with complete relationship data 2ms
     → User not found in seeded data: test-user-tim
   × Location Router CRUD Operations (PGlite) > getById > should enforce organizational scoping 21ms
     → User not found in seeded data: test-user-tim
   × Location Router CRUD Operations (PGlite) > delete > should delete location after proper dependency cleanup 3ms
     → User not found in seeded data: test-user-tim
   × Location Router CRUD Operations (PGlite) > delete > should prevent cross-organizational deletion 4ms
     → User not found in seeded data: test-user-tim
   × Location Router CRUD Operations (PGlite) > setPinballMapId > should set PinballMap ID with database persistence 3ms
     → User not found in seeded data: test-user-tim
   × Location Router CRUD Operations (PGlite) > setPinballMapId > should prevent cross-organizational PinballMap ID updates 2ms
     → User not found in seeded data: test-user-tim
stdout | __vite_ssr_import_0__.test.extend.workerDb.scope (/var/home/froeht/Code/PinPoint/src/test/helpers/worker-scoped-db.ts:59:15)
[Worker 14] Cleaning up PGlite instance

 ❯ |integration| src/integration-tests/location.integration.test.ts (6 tests | 5 failed) 798ms
   × Location Router - Schema & Performance Tests (PGlite) > Database Schema Validation > should maintain referential integrity 763ms
     → User not found in seeded data: test-user-tim
   × Location Router - Schema & Performance Tests (PGlite) > Database Schema Validation > should handle timestamps correctly 3ms
     → User not found in seeded data: test-user-tim
   ✓ Location Router - Schema & Performance Tests (PGlite) > Database Schema Validation > should enforce organizational scoping constraints 3ms
   × Location Router - Schema & Performance Tests (PGlite) > Performance & Query Optimization > should handle large datasets efficiently 2ms
     → User not found in seeded data: test-user-tim
   × Location Router - Schema & Performance Tests (PGlite) > Performance & Query Optimization > should optimize getPublic aggregation queries 2ms
     → User not found in seeded data: test-user-tim
   × Location Router - Schema & Performance Tests (PGlite) > Performance & Query Optimization > should handle concurrent operations efficiently 1ms
     → User not found in seeded data: test-user-tim
stdout | __vite_ssr_import_0__.test.extend.workerDb.scope (/var/home/froeht/Code/PinPoint/src/test/helpers/worker-scoped-db.ts:59:15)
[Worker 15] Cleaning up PGlite instance

stdout | src/integration-tests/location.services.integration.test.ts
[MSW] Server started

stdout | src/integration-tests/location.services.integration.test.ts > Location Router Services Integration (PGlite) > syncWithPinballMap > should handle successful sync with service integration
[Worker 18] Creating shared PGlite instance with seeded data

 ❯ |integration| src/integration-tests/location.aggregation.integration.test.ts (2 tests | 2 skipped) 788ms
   ↓ Location Router Aggregation Operations (PGlite) > Complex Aggregation Queries > should handle getPublic with machine and issue counts
   ↓ Location Router Aggregation Operations (PGlite) > Complex Aggregation Queries > should maintain organizational isolation in aggregation
stdout | src/integration-tests/pinballMap.integration.test.ts
[MSW] Server started

stdout | src/integration-tests/pinballMap.integration.test.ts > PinballMap Integration Tests > enableIntegration > should create new config and enable integration
[Worker 19] Creating shared PGlite instance with seeded data

stdout | src/server/api/routers/__tests__/issue.comment.router.integration.test.ts
[MSW] Server started

stdout | src/server/api/routers/__tests__/issue.comment.router.integration.test.ts > Issue Comment Router Integration Tests (PGlite) > Comment Creation > should create comment with proper organizational scoping
[Worker 20] Creating shared PGlite instance with seeded data

 ❯ |integration| src/integration-tests/location.services.integration.test.ts (5 tests | 5 failed) 782ms
   × Location Router Services Integration (PGlite) > syncWithPinballMap > should handle successful sync with service integration 738ms
     → User not found in seeded data: test-user-tim
   × Location Router Services Integration (PGlite) > syncWithPinballMap > should handle service failures appropriately 2ms
     → User not found in seeded data: test-user-tim
   × Location Router Services Integration (PGlite) > syncWithPinballMap > should prevent cross-organizational sync attempts 2ms
     → User not found in seeded data: test-user-tim
   × Location Router Services Integration (PGlite) > Service Integration Patterns > should maintain service isolation between organizations 1ms
     → User not found in seeded data: test-user-tim
   × Location Router Services Integration (PGlite) > Service Integration Patterns > should handle service dependency injection correctly 4ms
     → User not found in seeded data: test-user-tim
stdout | __vite_ssr_import_0__.test.extend.workerDb.scope (/var/home/froeht/Code/PinPoint/src/test/helpers/worker-scoped-db.ts:59:15)
[Worker 18] Cleaning up PGlite instance

 ❯ |node| src/server/api/routers/__tests__/issue.comment.test.ts (22 tests | 14 failed) 8549ms
   × Issue Comment Router (RLS-Enhanced) > addComment (RLS-Enhanced) > should add a comment with organizational scoping 247ms
     → You don't have permission to access this organization
   ✓ Issue Comment Router (RLS-Enhanced) > addComment (RLS-Enhanced) > should validate content length with consistent IDs  821ms
   × Issue Comment Router (RLS-Enhanced) > addComment (RLS-Enhanced) > should reject comment on non-existent issue 234ms
     → expected [Function] to throw error including 'Issue not found' but got 'You don\'t have permission to access …'
   × Issue Comment Router (RLS-Enhanced) > addComment (RLS-Enhanced) > should reject comment from non-member (RLS boundary) 414ms
     → expected [Function] to throw error including 'User is not a member of this organiza…' but got 'You don\'t have permission to access …'
   ✓ Issue Comment Router (RLS-Enhanced) > addComment (RLS-Enhanced) > should enforce organizational boundaries (RLS context)  488ms
   × Issue Comment Router (RLS-Enhanced) > create (alias, RLS-Enhanced) > should work identically to addComment with organizational scoping 495ms
     → You don't have permission to access this organization
   × Issue Comment Router (RLS-Enhanced) > editComment (RLS-Enhanced) > should allow author to edit their own comment with organizational validation 307ms
     → You don't have permission to access this organization
   × Issue Comment Router (RLS-Enhanced) > editComment (RLS-Enhanced) > should reject edit by non-author (ownership validation) 468ms
     → expected [Function] to throw error including 'You can only edit your own comments' but got 'You don\'t have permission to access …'
   × Issue Comment Router (RLS-Enhanced) > editComment (RLS-Enhanced) > should reject edit of deleted comment 199ms
     → expected [Function] to throw error including 'Cannot edit deleted comment' but got 'You don\'t have permission to access …'
   ✓ Issue Comment Router (RLS-Enhanced) > editComment (RLS-Enhanced) > should enforce organizational boundaries in edit operations (RLS)  458ms
   × Issue Comment Router (RLS-Enhanced) > deleteComment (RLS-Enhanced) > should allow user to delete their own comment with organizational validation 367ms
     → You don't have permission to access this organization
   × Issue Comment Router (RLS-Enhanced) > deleteComment (RLS-Enhanced) > should reject deletion of non-existent comment 111ms
     → expected [Function] to throw error including 'Comment not found' but got 'You don\'t have permission to access …'
   ✓ Issue Comment Router (RLS-Enhanced) > deleteComment (RLS-Enhanced) > should enforce organizational boundaries in delete operations (RLS) 300ms
   × Issue Comment Router (RLS-Enhanced) > restoreComment (RLS-Enhanced) > should allow admin to restore deleted comment with organizational validation 285ms
     → You don't have permission to access this organization
   × Issue Comment Router (RLS-Enhanced) > restoreComment (RLS-Enhanced) > should reject restore of non-deleted comment 472ms
     → expected [Function] to throw error including 'Comment is not deleted' but got 'You don\'t have permission to access …'
   ✓ Issue Comment Router (RLS-Enhanced) > restoreComment (RLS-Enhanced) > should enforce organizational boundaries in restore operations (RLS) 125ms
   × Issue Comment Router (RLS-Enhanced) > getDeletedComments (RLS-Enhanced) > should return deleted comments for organization with boundary enforcement 132ms
     → You don't have permission to access this organization
   ✓ Issue Comment Router (RLS-Enhanced) > getDeletedComments (RLS-Enhanced) > should reject member access to deleted comments (permission boundary) 138ms
   × Issue Comment Router (RLS-Enhanced) > getDeletedComments (RLS-Enhanced) > should enforce organizational boundaries in deleted comments list (RLS) 449ms
     → You don't have permission to access this organization
   ✓ Issue Comment Router (RLS-Enhanced) > Authentication and Authorization (RLS-Enhanced) > should require authentication for all procedures  1188ms
   ✓ Issue Comment Router (RLS-Enhanced) > Authentication and Authorization (RLS-Enhanced) > should require organization context for all procedures (RLS boundary)  489ms
   × Issue Comment Router (RLS-Enhanced) > Authentication and Authorization (RLS-Enhanced) > should establish RLS context for authenticated operations 334ms
     → You don't have permission to access this organization
stdout | src/server/api/routers/__tests__/model.core.test.ts
[MSW] Server started

stdout | src/server/api/routers/__tests__/model.core.test.ts > Model Router Integration Tests (Simplified Single-Table Architecture) > Model Retrieval Operations > should return models with machine counts using real database operations
[Worker 21] Creating shared PGlite instance with seeded data

 ❯ |integration| src/integration-tests/cross-org-isolation.test.ts (20 tests | 19 failed) 1741ms
   × Cross-Organization Isolation > Basic Organizational Isolation > users can only see data from their own organization 856ms
     → expected false to be true // Object.is equality
   × Cross-Organization Isolation > Basic Organizational Isolation > cross-organization data queries return empty results 29ms
     → expected [ { …(16) }, { …(16) }, { …(16) } ] to have a length of +0 but got 3
   × Cross-Organization Isolation > Basic Organizational Isolation > organizational isolation verification utility works correctly 31ms
     → expected false to be true // Object.is equality
   × Cross-Organization Isolation > Complex Relational Queries > joins across related tables maintain organizational isolation 37ms
     → expected false to be true // Object.is equality
   × Cross-Organization Isolation > Complex Relational Queries > aggregation queries respect organizational boundaries 29ms
     → expected [ { …(16) }, { …(16) }, …(19) ] to have a length of 7 but got 21
   × Cross-Organization Isolation > Permission Boundary Enforcement > different user roles see appropriate data within organization 44ms
     → expected false to be true // Object.is equality
   × Cross-Organization Isolation > Permission Boundary Enforcement > cross-organization access attempts are blocked 32ms
     → expected false to be true // Object.is equality
   × Cross-Organization Isolation > Supabase Authentication Integration > Supabase auth context properly sets organizational boundaries 44ms
     → expected [ { …(16) }, { …(16) }, …(15) ] to have a length of 4 but got 17
   × Cross-Organization Isolation > Supabase Authentication Integration > authentication helpers create proper test contexts 20ms
     → expected [ { …(16) }, { …(16) }, …(10) ] to have a length of 2 but got 12
   × Cross-Organization Isolation > Performance and Security Auditing > RLS queries perform within acceptable thresholds 262ms
     → expected 366.7592307955503 to be less than 100
   × Cross-Organization Isolation > Performance and Security Auditing > comprehensive security audit passes 30ms
     → Failed query: insert into "machines" ("id", "name", "organizationId", "locationId", "modelId", "ownerId", "ownerNotificationsEnabled", "notifyOnNewIssues", "notifyOnStatusChanges", "notifyOnComments", "qrCodeId", "qrCodeUrl", "qrCodeGeneratedAt", "createdAt", "updatedAt") values ($1, $2, $3, $4, default, default, default, default, default, default, $5, default, default, $6, $7)
params: audit-machine-test-org-audit1-1,Audit Machine 1,test-org-audit1,audit-location-test-org-audit1-1,audit-qr-test-org-audit1-1,2025-08-22T23:38:59.453Z,2025-08-22T23:38:59.453Z
   × Cross-Organization Isolation > Performance and Security Auditing > RLS policies are properly configured 5ms
     → expected false to be true // Object.is equality
   × Cross-Organization Isolation > Test Pattern Validation > predefined test patterns work correctly 70ms
     → expected 420.7389888292841 to be less than 100
   × Cross-Organization Isolation > Test Pattern Validation > organization test scenarios create proper isolation 39ms
     → expected false to be true // Object.is equality
   ✓ Cross-Organization Isolation > Edge Cases and Error Handling > handles missing session context gracefully 10ms
   × Cross-Organization Isolation > Edge Cases and Error Handling > handles invalid organization context 10ms
     → expected [ { …(16) }, { …(16) }, …(10) ] to have a length of +0 but got 12
   × Cross-Organization Isolation > Edge Cases and Error Handling > handles concurrent multi-organization access 29ms
     → expected [ …(3) ] to deeply equal [ …(3) ]
   × Integration with Existing Test Infrastructure > RLS helpers integrate with worker-scoped database pattern 27ms
     → expected [ { …(16) }, { …(16) }, …(9) ] to have a length of 1 but got 11
   × Integration with Existing Test Infrastructure > memory usage remains stable across multiple RLS tests 82ms
     → expected [ { …(16) }, { …(16) }, …(10) ] to have a length of 2 but got 12
   × Integration with Existing Test Infrastructure > RLS tests work with existing factory patterns 15ms
     → expected [ { …(16) }, { …(16) }, …(9) ] to have a length of 1 but got 11
stdout | __vite_ssr_import_0__.test.extend.workerDb.scope (/var/home/froeht/Code/PinPoint/src/test/helpers/worker-scoped-db.ts:59:15)
[Worker 17] Cleaning up PGlite instance

stdout | src/integration-tests/admin.integration.test.ts
[MSW] Server started

 ❯ |integration| src/integration-tests/pinballMap.integration.test.ts (12 tests | 12 failed) 984ms
   × PinballMap Integration Tests > enableIntegration > should create new config and enable integration 948ms
     → Seeded data not found - worker database not properly initialized
   × PinballMap Integration Tests > enableIntegration > should update existing disabled config to enabled 2ms
     → Seeded data not found - worker database not properly initialized
   × PinballMap Integration Tests > enableIntegration > should require organization:manage permission 2ms
     → Seeded data not found - worker database not properly initialized
   × PinballMap Integration Tests > configureLocation > should configure location when integration enabled 4ms
     → Seeded data not found - worker database not properly initialized
   × PinballMap Integration Tests > configureLocation > should throw error when integration not enabled 2ms
     → Seeded data not found - worker database not properly initialized
   × PinballMap Integration Tests > configureLocation > should enforce organizational boundaries 3ms
     → Seeded data not found - worker database not properly initialized
   × PinballMap Integration Tests > syncLocation > should sync machines from PinballMap API 7ms
     → Seeded data not found - worker database not properly initialized
   × PinballMap Integration Tests > syncLocation > should remove machines not in PinballMap but preserve machines with issues 3ms
     → Seeded data not found - worker database not properly initialized
   × PinballMap Integration Tests > syncLocation > should handle PinballMap API errors gracefully 2ms
     → Seeded data not found - worker database not properly initialized
   × PinballMap Integration Tests > getSyncStatus > should return enabled status with configured locations 3ms
     → Seeded data not found - worker database not properly initialized
   × PinballMap Integration Tests > getSyncStatus > should return disabled status when integration not enabled 3ms
     → Seeded data not found - worker database not properly initialized
   × PinballMap Integration Tests > getSyncStatus > should enforce organizational boundaries 2ms
     → Seeded data not found - worker database not properly initialized
stdout | __vite_ssr_import_0__.test.extend.workerDb.scope (/var/home/froeht/Code/PinPoint/src/test/helpers/worker-scoped-db.ts:59:15)
[Worker 19] Cleaning up PGlite instance

stdout | src/server/api/routers/utils/__tests__/commentService.integration.test.ts
[MSW] Server started

 ❯ |node| src/server/api/routers/__tests__/issue.comment.router.integration.test.ts (8 tests | 8 failed) 1021ms
   × Issue Comment Router Integration Tests (PGlite) > Comment Creation > should create comment with proper organizational scoping 980ms
     → Failed query: SET app.current_organization_id = $1
params: test-org-pinpoint
   × Issue Comment Router Integration Tests (PGlite) > Comment Creation > should enforce issue accessibility for comment creation 1ms
     → Failed query: SET app.current_organization_id = $1
params: test-org-pinpoint
   × Issue Comment Router Integration Tests (PGlite) > Comment Editing > should allow users to edit their own comments 1ms
     → Failed query: SET app.current_organization_id = $1
params: test-org-pinpoint
   × Issue Comment Router Integration Tests (PGlite) > Comment Editing > should prevent users from editing others' comments 1ms
     → Failed query: SET app.current_organization_id = $1
params: test-org-pinpoint
   × Issue Comment Router Integration Tests (PGlite) > Comment Deletion > should allow users to delete their own comments 3ms
     → Failed query: SET app.current_organization_id = $1
params: test-org-pinpoint
   × Issue Comment Router Integration Tests (PGlite) > Comment Restoration > should allow admins to restore deleted comments 1ms
     → Failed query: SET app.current_organization_id = $1
params: test-org-pinpoint
   × Issue Comment Router Integration Tests (PGlite) > Deleted Comments Admin View > should allow admins to view deleted comments 2ms
     → Failed query: SET app.current_organization_id = $1
params: test-org-pinpoint
   × Issue Comment Router Integration Tests (PGlite) > Organizational Boundaries > should enforce cross-organizational comment access 6ms
     → Failed query: SET app.current_organization_id = $1
params: test-org-competitor
stdout | src/server/api/routers/utils/__tests__/commentService.integration.test.ts > Comment Service Integration (tRPC) > Comment CRUD Operations > should create comment through tRPC
[Worker 23] Creating shared PGlite instance with seeded data

stdout | __vite_ssr_import_0__.test.extend.workerDb.scope (/var/home/froeht/Code/PinPoint/src/test/helpers/worker-scoped-db.ts:59:15)
[Worker 20] Cleaning up PGlite instance

 ❯ |node| src/server/api/routers/__tests__/collection.test.ts (16 tests | 2 failed) 9274ms
   ✓ Collection Router Integration Tests > Public Procedures > should get collections for location without authentication  1397ms
   ✓ Collection Router Integration Tests > Public Procedures > should validate input parameters for getForLocation  407ms
   ✓ Collection Router Integration Tests > Public Procedures > should get machines in collection without authentication 141ms
   ✓ Collection Router Integration Tests > Protected Procedures > should create manual collection with real database operations  504ms
   ✓ Collection Router Integration Tests > Protected Procedures > should validate input parameters for createManual  1010ms
   ✓ Collection Router Integration Tests > Protected Procedures > should require authentication for createManual  379ms
   ✓ Collection Router Integration Tests > Protected Procedures > should add machines to collection with real database operations  401ms
   ✓ Collection Router Integration Tests > Protected Procedures > should validate machine IDs array for addMachines  791ms
   ✓ Collection Router Integration Tests > Protected Procedures > should get organization collection types with real database operations 208ms
   ✓ Collection Router Integration Tests > Admin Procedures > should generate auto-collections for organization with real database operations 284ms
   × Collection Router Integration Tests > Admin Procedures > should require admin permissions for generateAuto 407ms
     → expected [Function] to throw error including 'Missing required permission: organiza…' but got 'You don\'t have permission to access …'
   ✓ Collection Router Integration Tests > Admin Procedures > should toggle collection type enabled status with real database operations 246ms
   ✓ Collection Router Integration Tests > Admin Procedures > should validate boolean enabled parameter for toggleType  904ms
   × Collection Router Integration Tests > Admin Procedures > should require admin permissions for toggleType 307ms
     → expected [Function] to throw error including 'Missing required permission: organiza…' but got 'You don\'t have permission to access …'
   ✓ Collection Router Integration Tests > Multi-tenant Integration Testing > should enforce cross-organizational boundaries  1072ms
   ✓ Collection Router Integration Tests > Multi-tenant Integration Testing > should maintain data integrity across router operations  792ms
stdout | __vite_ssr_import_0__.test.extend.workerDb.scope (/var/home/froeht/Code/PinPoint/src/test/helpers/worker-scoped-db.ts:59:15)
[Worker 1] Cleaning up PGlite instance

stdout | src/server/api/routers/__tests__/routers.integration.test.ts
[MSW] Server started

stdout | src/integration-tests/machine.owner.integration.test.ts
[MSW] Server started

stdout | src/integration-tests/machine.owner.integration.test.ts > machine.owner router integration tests > assignOwner mutation > success scenarios > should assign owner to machine successfully
[Worker 25] Creating shared PGlite instance with seeded data

stdout | src/integration-tests/schema-data-integrity.integration.test.ts
[MSW] Server started

stdout | src/integration-tests/schema-data-integrity.integration.test.ts > Schema Data Integrity > Organization Relations > should cascade delete memberships when organization is deleted
[Worker 26] Creating shared PGlite instance with seeded data

 ❯ |node| src/server/api/routers/__tests__/model.core.test.ts (11 tests | 11 failed) 1308ms
   × Model Router Integration Tests (Simplified Single-Table Architecture) > Model Retrieval Operations > should return models with machine counts using real database operations 1201ms
     → getSeededTestData is not a function
   × Model Router Integration Tests (Simplified Single-Table Architecture) > Model Retrieval Operations > should return empty array when no models exist in organization 22ms
     → Failed query: insert into "organizations" ("id", "name", "subdomain", "logoUrl", "createdAt", "updatedAt") values ($1, $2, $3, default, $4, $5) returning "id", "name", "subdomain", "logoUrl", "createdAt", "updatedAt"
params: test-org-competitor,Empty Organization,empty,2025-08-22T23:39:00.597Z,2025-08-22T23:39:00.597Z
   × Model Router Integration Tests (Simplified Single-Table Architecture) > Model Retrieval Operations > should enforce organizational scoping and isolation 5ms
     → getSeededTestData is not a function
   × Model Router Integration Tests (Simplified Single-Table Architecture) > Model Individual Retrieval > should return model by ID with real machine count 1ms
     → getSeededTestData is not a function
   × Model Router Integration Tests (Simplified Single-Table Architecture) > Model Individual Retrieval > should throw NOT_FOUND when model doesn't exist 1ms
     → getSeededTestData is not a function
   × Model Router Integration Tests (Simplified Single-Table Architecture) > Model Individual Retrieval > should throw NOT_FOUND when model exists but not in organization 3ms
     → getSeededTestData is not a function
   × Model Router Integration Tests (Simplified Single-Table Architecture) > Model Individual Retrieval > should include accurate machine count in response 1ms
     → getSeededTestData is not a function
   × Model Router Integration Tests (Simplified Single-Table Architecture) > Cross-Organizational Security Testing > should enforce organizational boundaries across all operations 1ms
     → getSeededTestData is not a function
   × Model Router Integration Tests (Simplified Single-Table Architecture) > Cross-Organizational Security Testing > should maintain data integrity across organizations 1ms
     → getSeededTestData is not a function
   × Model Router Integration Tests (Simplified Single-Table Architecture) > Real Database Operations & Performance > should perform accurate machine counting with complex relationships 9ms
     → getSeededTestData is not a function
   × Model Router Integration Tests (Simplified Single-Table Architecture) > Real Database Operations & Performance > should handle database errors gracefully with real operations 3ms
     → getSeededTestData is not a function
stdout | __vite_ssr_import_0__.test.extend.workerDb.scope (/var/home/froeht/Code/PinPoint/src/test/helpers/worker-scoped-db.ts:59:15)
[Worker 21] Cleaning up PGlite instance

 ❯ |node| src/server/api/routers/utils/__tests__/commentService.integration.test.ts (10 tests | 10 failed) 898ms
   × Comment Service Integration (tRPC) > Comment CRUD Operations > should create comment through tRPC 864ms
     → getSeededTestData is not a function
   × Comment Service Integration (tRPC) > Comment CRUD Operations > should get comments for issue 1ms
     → getSeededTestData is not a function
   × Comment Service Integration (tRPC) > Soft Delete Functionality > should soft delete comment successfully 1ms
     → getSeededTestData is not a function
   × Comment Service Integration (tRPC) > Soft Delete Functionality > should handle non-existent comment gracefully 1ms
     → getSeededTestData is not a function
   × Comment Service Integration (tRPC) > Soft Delete Functionality > should enforce organizational boundaries 1ms
     → getSeededTestData is not a function
   × Comment Service Integration (tRPC) > Admin Functions > should get deleted comments (admin) 1ms
     → getSeededTestData is not a function
   × Comment Service Integration (tRPC) > Admin Functions > should restore deleted comment (admin) 1ms
     → getSeededTestData is not a function
   × Comment Service Integration (tRPC) > Admin Functions > should get cleanup statistics 1ms
     → getSeededTestData is not a function
   × Comment Service Integration (tRPC) > Complex Integration Scenarios > should handle full comment lifecycle 1ms
     → getSeededTestData is not a function
   × Comment Service Integration (tRPC) > Complex Integration Scenarios > should maintain organizational scoping across operations 1ms
     → getSeededTestData is not a function
stdout | __vite_ssr_import_0__.test.extend.workerDb.scope (/var/home/froeht/Code/PinPoint/src/test/helpers/worker-scoped-db.ts:59:15)
[Worker 23] Cleaning up PGlite instance

 ❯ |integration| src/integration-tests/admin.integration.test.ts (11 tests | 11 failed) 1022ms
   × Admin Router Integration (PGlite) > getUsers > should retrieve all organization members with real database operations 5ms
     → Cannot read properties of undefined (reading 'referencedTable')
   × Admin Router Integration (PGlite) > getUsers > should enforce organizational isolation 1ms
     → Cannot read properties of undefined (reading 'referencedTable')
   × Admin Router Integration (PGlite) > updateUserRole > should update user role with real database operations 1ms
     → Cannot read properties of undefined (reading 'referencedTable')
   × Admin Router Integration (PGlite) > updateUserRole > should enforce role exists in organization constraint 1ms
     → Cannot read properties of undefined (reading 'referencedTable')
   × Admin Router Integration (PGlite) > inviteUser > should create invitation with real database operations 1ms
     → Cannot read properties of undefined (reading 'referencedTable')
   × Admin Router Integration (PGlite) > inviteUser > should handle duplicate email invitations 1ms
     → Cannot read properties of undefined (reading 'referencedTable')
   × Admin Router Integration (PGlite) > inviteUser > should enforce organizational isolation for invitations 1ms
     → Cannot read properties of undefined (reading 'referencedTable')
   × Admin Router Integration (PGlite) > removeUser > should remove user successfully with cascading data handling 1ms
     → Cannot read properties of undefined (reading 'referencedTable')
   × Admin Router Integration (PGlite) > getInvitations > should retrieve pending invitations with real database operations 1ms
     → Cannot read properties of undefined (reading 'referencedTable')
   × Admin Router Integration (PGlite) > getInvitations > should enforce organizational isolation for invitations 1ms
     → Cannot read properties of undefined (reading 'referencedTable')
   × Admin Router Integration (PGlite) > cancelInvitation > should cancel invitation with real database operations 1ms
     → Cannot read properties of undefined (reading 'referencedTable')
stdout | src/server/api/routers/__tests__/issue.integration.test.ts
[MSW] Server started

 ❯ |node| src/server/api/routers/__tests__/routers.integration.test.ts (8 tests | 8 skipped) 1050ms
   ↓ tRPC Router Integration Tests > Issue Router Integration > should create issue with real database operations
   ↓ tRPC Router Integration Tests > Issue Router Integration > should update issue with real database operations
   ↓ tRPC Router Integration Tests > Issue Router Integration > should enforce organizational isolation in issue operations
   ↓ tRPC Router Integration Tests > Machine Router Integration > should update machine with real database operations
   ↓ tRPC Router Integration Tests > Machine Router Integration > should enforce organizational isolation in machine operations
   ↓ tRPC Router Integration Tests > Location Router Integration > should update location with real database operations
   ↓ tRPC Router Integration Tests > Multi-tenant Integration Testing > should enforce cross-organizational boundaries across all routers
   ↓ tRPC Router Integration Tests > should maintain data integrity across router operations
stdout | src/integration-tests/machine.location.integration.test.ts
[MSW] Server started

stdout | src/integration-tests/machine.location.integration.test.ts > Machine Location Router Integration (PGlite) > moveToLocation > should successfully move machine to a different location
[Worker 28] Creating shared PGlite instance with seeded data

stdout | src/server/db/__tests__/drizzle-singleton.test.ts
[MSW] Server started

stdout | src/server/db/__tests__/drizzle-singleton.test.ts > Drizzle Client Singleton Pattern > Worker-Scoped Pattern Integration > Singleton Compatibility with Worker-Scoped Databases > should work correctly with worker-scoped PGlite databases
[Worker 29] Creating shared PGlite instance with seeded data

 ❯ |integration| src/integration-tests/machine.owner.integration.test.ts (19 tests | 19 failed) 1047ms
   × machine.owner router integration tests > assignOwner mutation > success scenarios > should assign owner to machine successfully 951ms
     → Missing seeded test users
   × machine.owner router integration tests > assignOwner mutation > success scenarios > should remove owner from machine successfully 2ms
     → Missing seeded test users
   × machine.owner router integration tests > assignOwner mutation > success scenarios > should handle reassigning owner to different user 2ms
     → Missing seeded test users
   × machine.owner router integration tests > assignOwner mutation > error scenarios > should throw NOT_FOUND when machine does not exist 1ms
     → Missing seeded test users
   × machine.owner router integration tests > assignOwner mutation > error scenarios > should throw NOT_FOUND when machine belongs to different organization 1ms
     → withIsolatedTest(...).returning is not a function
   × machine.owner router integration tests > assignOwner mutation > should throw FORBIDDEN when user is not a member of organization 2ms
     → Missing seeded test users
   × machine.owner router integration tests > input validation > should accept valid machineId 1ms
     → Missing seeded test users
   × machine.owner router integration tests > input validation > should accept optional ownerId 3ms
     → Missing seeded test users
   × machine.owner router integration tests > input validation > should handle empty string ownerId as removal 1ms
     → Missing seeded test users
   × machine.owner router integration tests > organizational scoping and security > should only find machines within user's organization 8ms
     → Missing seeded test users
   × machine.owner router integration tests > organizational scoping and security > should only validate membership within user's organization 5ms
     → Missing seeded test users
   × machine.owner router integration tests > organizational scoping and security > should use correct organization context 6ms
     → Missing seeded test users
   × machine.owner router integration tests > organizational scoping and security > should enforce organizational boundaries 2ms
     → Missing seeded test users
   × machine.owner router integration tests > organizational scoping and security > should return only safe user data in owner relationship 1ms
     → Missing seeded test users
   × machine.owner router integration tests > relationship loading > should load machine model relationship 1ms
     → Missing seeded test users
   × machine.owner router integration tests > relationship loading > should load machine location relationship 1ms
     → Missing seeded test users
   × machine.owner router integration tests > relationship loading > should handle null owner relationship 1ms
     → Missing seeded test users
   × machine.owner router integration tests > data integrity and relationships > should maintain referential integrity 1ms
     → Missing seeded test users
   × machine.owner router integration tests > data integrity and relationships > should preserve other machine fields during owner assignment 3ms
     → Missing seeded test users
stdout | __vite_ssr_import_0__.test.extend.workerDb.scope (/var/home/froeht/Code/PinPoint/src/test/helpers/worker-scoped-db.ts:59:15)
[Worker 25] Cleaning up PGlite instance

stdout | src/integration-tests/role.integration.test.ts
[MSW] Server started

stdout | src/integration-tests/role.integration.test.ts > Role Router Integration Tests (PGlite) > list - Get all roles > should return roles with member count and permissions
[Worker 30] Creating shared PGlite instance with seeded data

stdout | src/server/db/__tests__/drizzle-test-helpers.test.ts
[MSW] Server started

 ❯ |node| src/server/db/__tests__/drizzle-test-helpers.test.ts (40 tests | 1 failed) 108ms
   ✓ Drizzle Mock Helpers > Environment Configuration > configureDevelopmentMocks > should set up development environment correctly 1ms
   ✓ Drizzle Mock Helpers > Environment Configuration > configureDevelopmentMocks > should clear previous mocks 0ms
   ✓ Drizzle Mock Helpers > Environment Configuration > configureProductionMocks > should set up production environment correctly 0ms
   ✓ Drizzle Mock Helpers > Environment Configuration > configureCIMocks > should set up CI environment correctly 0ms
   ✓ Drizzle Mock Helpers > Environment Configuration > configureCustomEnvironment > should apply custom configuration 0ms
   ✓ Drizzle Mock Helpers > Environment Configuration > configureCustomEnvironment > should handle partial configuration 0ms
   ✓ Drizzle Mock Helpers > Connection String Builders > createLocalhost5432URL > should create localhost URL with default database 0ms
   ✓ Drizzle Mock Helpers > Connection String Builders > createLocalhost5432URL > should create localhost URL with custom database 0ms
   ✓ Drizzle Mock Helpers > Connection String Builders > createRemoteURL > should create remote URL with default database 0ms
   ✓ Drizzle Mock Helpers > Connection String Builders > createRemoteURL > should create remote URL with custom database 0ms
   ✓ Drizzle Mock Helpers > Connection String Builders > create127001URL > should create 127.0.0.1 URL with default database 0ms
   ✓ Drizzle Mock Helpers > Connection String Builders > create127001URL > should create 127.0.0.1 URL with custom database 0ms
   ✓ Drizzle Mock Helpers > Mock Validation Helpers > expectSSLConfiguration > should validate SSL false configuration 1ms
   ✓ Drizzle Mock Helpers > Mock Validation Helpers > expectSSLConfiguration > should validate SSL require configuration 0ms
   ✓ Drizzle Mock Helpers > Mock Validation Helpers > expectSSLConfiguration > should fail validation with wrong SSL configuration 2ms
   ✓ Drizzle Mock Helpers > Mock Validation Helpers > expectPoolConfiguration > should validate pool configuration 0ms
   ✓ Drizzle Mock Helpers > Mock Validation Helpers > expectPoolConfiguration > should fail validation with wrong pool size 1ms
   ✓ Drizzle Mock Helpers > Mock Validation Helpers > expectTimeoutConfiguration > should validate timeout configuration 0ms
   ✓ Drizzle Mock Helpers > Mock Validation Helpers > expectTimeoutConfiguration > should fail validation with wrong timeouts 0ms
   ✓ Drizzle Mock Helpers > Mock Validation Helpers > expectLoggingConfiguration > should validate logging enabled 0ms
   ✓ Drizzle Mock Helpers > Mock Validation Helpers > expectLoggingConfiguration > should validate logging disabled 0ms
   ✓ Drizzle Mock Helpers > Mock Validation Helpers > expectLoggingConfiguration > should fail validation with wrong logging config 0ms
   ✓ Drizzle Mock Helpers > Test Setup Utilities > setupDrizzleTestEnvironment > should perform standard setup 0ms
   ✓ Drizzle Mock Helpers > Test Setup Utilities > setupDrizzleTestEnvironment > should apply custom environment setup 0ms
   ✓ Drizzle Mock Helpers > Test Setup Utilities > validateDrizzleConfiguration > should validate complete configuration 0ms
   ✓ Drizzle Mock Helpers > Test Setup Utilities > validateDrizzleConfiguration > should fail validation with mismatched configuration 0ms
   ✓ Drizzle Mock Helpers > Test Setup Utilities > testSingletonBehavior > should execute without throwing errors 1ms
   ✓ Drizzle Mock Helpers > Test Setup Utilities > testSingletonBehavior > should handle production environment 2ms
   ✓ Drizzle Mock Helpers > Mock Objects > mockPostgres > should be a mock function 0ms
   ✓ Drizzle Mock Helpers > Mock Objects > mockPostgres > should be callable and return instances 0ms
   ✓ Drizzle Mock Helpers > Mock Objects > mockDrizzle > should be a mock function 0ms
   ✓ Drizzle Mock Helpers > Mock Objects > mockDrizzle > should be callable and return instances 0ms
   ✓ Drizzle Mock Helpers > Mock Objects > mockDrizzle > should support creating multiple instances 0ms
   × Drizzle Mock Helpers > Mock Objects > mockSchema > should contain expected table definitions 10ms
     → expected { organizations: {}, users: {}, …(14) } to have property "issue_statuses"
   ✓ Drizzle Mock Helpers > Mock Objects > mockIsDevelopment > should be a mock function 0ms
   ✓ Drizzle Mock Helpers > Mock Objects > mockIsDevelopment > should return configured value 0ms
   ✓ Drizzle Mock Helpers > Mock Objects > mockEnv > should have expected environment properties 0ms
   ✓ Drizzle Mock Helpers > Mock Objects > mockEnv > should allow modification of environment variables 0ms
   ✓ Drizzle Mock Helpers > Integration with Drizzle Testing Patterns > should support full Drizzle test setup workflow 0ms
   ✓ Drizzle Mock Helpers > Integration with Drizzle Testing Patterns > should provide comprehensive mocking for different environments 0ms
 ❯ |integration| src/integration-tests/schema-data-integrity.integration.test.ts (8 tests | 1 failed) 1365ms
   ✓ Schema Data Integrity > Organization Relations > should cascade delete memberships when organization is deleted  1150ms
   ✓ Schema Data Integrity > Organization Relations > should cascade delete all tenant data when organization is deleted 14ms
   ✓ Schema Data Integrity > Issue Relations > should handle foreign key relationships correctly 8ms
   ✓ Schema Data Integrity > Issue Relations > should allow null assignedToId for unassigned issues 13ms
   × Schema Data Integrity > Issue Relations > should cascade delete comments when issue is deleted 30ms
     → organizationId is not defined
   ✓ Schema Data Integrity > Machine Relations > should enforce locationId belongs to same organization 15ms
   ✓ Schema Data Integrity > Machine Relations > should cascade delete issues when machine is deleted 10ms
   ✓ Schema Data Integrity > User & Membership Relations > should allow users to have memberships in multiple organizations 5ms
stdout | __vite_ssr_import_0__.test.extend.workerDb.scope (/var/home/froeht/Code/PinPoint/src/test/helpers/worker-scoped-db.ts:59:15)
[Worker 26] Cleaning up PGlite instance

stdout | src/lib/common/__tests__/organizationValidation.test.ts
[MSW] Server started

 ❯ |node| src/lib/common/__tests__/organizationValidation.test.ts (81 tests | 13 failed) 67ms
   ✓ organizationValidation > validateResourceOrganizationBoundary > should allow resource access within same organization 1ms
   ✓ organizationValidation > validateResourceOrganizationBoundary > should reject resource from different organization 0ms
   ✓ organizationValidation > validateResourceOrganizationBoundary > should reject resource with missing organization ID 0ms
   ✓ organizationValidation > validateOrganizationMembership > should validate correct membership 0ms
   ✓ organizationValidation > validateOrganizationMembership > should reject null membership 0ms
   ✓ organizationValidation > validateOrganizationMembership > should reject membership with wrong user ID 0ms
   ✓ organizationValidation > validateOrganizationMembership > should reject membership with wrong organization ID 0ms
   ✓ organizationValidation > validateCrossOrganizationAccess > should allow access within same organization 0ms
   ✓ organizationValidation > validateCrossOrganizationAccess > should reject cross-organization access 0ms
   ✓ organizationValidation > validateCrossOrganizationAccess > should provide specific action in error message 0ms
   ✓ organizationValidation > validateOrganizationId > should validate proper organization ID 0ms
   ✓ organizationValidation > validateOrganizationId > should reject empty organization ID 0ms
   ✓ organizationValidation > validateOrganizationId > should reject whitespace-only organization ID 0ms
   ✓ organizationValidation > validateOrganizationId > should reject organization ID that's too short 0ms
   ✓ organizationValidation > validateOrganizationId > should reject organization ID that's too long 0ms
   ✓ organizationValidation > validateOrganizationId > should accept organization ID exactly 50 characters 0ms
   ✓ organizationValidation > validateOrganizationId > should accept organization ID exactly 3 characters 0ms
   ✓ organizationValidation > validateOrganizationId > should reject organization ID with invalid characters 3ms
   ✓ organizationValidation > validateOrganizationId > should accept organization ID with valid characters 0ms
   ✓ organizationValidation > validateUserId > should validate proper user ID 0ms
   ✓ organizationValidation > validateUserId > should reject empty user ID 0ms
   ✓ organizationValidation > validateUserId > should reject whitespace-only user ID 0ms
   ✓ organizationValidation > validateUserId > should reject user ID that's too short 0ms
   ✓ organizationValidation > validateUserId > should reject user ID that's too long 0ms
   ✓ organizationValidation > validateUserId > should accept user ID exactly 50 characters 0ms
   ✓ organizationValidation > validateUserId > should accept user ID exactly 3 characters 0ms
   ✓ organizationValidation > validateCompleteOrganizationBoundary > should validate complete organization boundary workflow 0ms
   ✓ organizationValidation > validateCompleteOrganizationBoundary > should fail on invalid organization ID 0ms
   ✓ organizationValidation > validateCompleteOrganizationBoundary > should fail on invalid user ID 0ms
   ✓ organizationValidation > validateCompleteOrganizationBoundary > should fail on resource organization boundary 0ms
   ✓ organizationValidation > validateCompleteOrganizationBoundary > should fail on invalid membership 0ms
   ✓ organizationValidation > validateCompleteOrganizationBoundary > should detect cross-organization access attempt 0ms
   ✓ organizationValidation > Resource-specific validators > validateIssueOrganizationBoundary > should validate issue boundary 0ms
   ✓ organizationValidation > Resource-specific validators > validateIssueOrganizationBoundary > should reject cross-org issue access 0ms
   ✓ organizationValidation > Resource-specific validators > validateMachineOrganizationBoundary > should validate machine boundary 0ms
   ✓ organizationValidation > Resource-specific validators > validateMachineOrganizationBoundary > should reject cross-org machine access 0ms
   ✓ organizationValidation > Resource-specific validators > validateLocationOrganizationBoundary > should validate location boundary 0ms
   ✓ organizationValidation > Resource-specific validators > validateLocationOrganizationBoundary > should reject cross-org location access 0ms
   ✓ organizationValidation > Resource-specific validators > validateCommentOrganizationBoundary > should validate comment boundary via parent issue 0ms
   ✓ organizationValidation > Resource-specific validators > validateCommentOrganizationBoundary > should reject cross-org comment access 0ms
   ✓ organizationValidation > Utility functions > isSameOrganization > should return true for same organization 0ms
   ✓ organizationValidation > Utility functions > isSameOrganization > should return false for different organizations 0ms
   × organizationValidation > Utility functions > extractOrganizationId > should extract organization ID from direct property 8ms
     → expected 'mock-org-1' to be 'org-1' // Object.is equality
   × organizationValidation > Utility functions > extractOrganizationId > should extract organization ID from location property 0ms
     → expected 'mock-org-1' to be 'org-1' // Object.is equality
   × organizationValidation > Utility functions > extractOrganizationId > should extract organization ID from issue property 0ms
     → expected 'mock-org-1' to be 'org-1' // Object.is equality
   ✓ organizationValidation > Utility functions > extractOrganizationId > should return null for null resource 0ms
   ✓ organizationValidation > Utility functions > extractOrganizationId > should return null for resource without organization ID 0ms
   ✓ organizationValidation > Utility functions > createOrganizationBoundaryError > should create basic error message 0ms
   ✓ organizationValidation > Utility functions > createOrganizationBoundaryError > should create error message with security context 0ms
   ✓ organizationValidation > Utility functions > createOrganizationBoundaryError > should create error message without security context by default 0ms
   ✓ organizationValidation > Edge Cases and Error Conditions > should handle very long organization IDs 0ms
   ✓ organizationValidation > Edge Cases and Error Conditions > should handle special characters in resource type 0ms
   ✓ organizationValidation > Edge Cases and Error Conditions > should handle null membership with specific user ID 0ms
   ✓ organizationValidation > Edge Cases and Error Conditions > should handle empty resource organization ID 0ms
   ✓ organizationValidation > Business Rule Coverage > should test all validation steps in complete workflow 0ms
   ✓ organizationValidation > Business Rule Coverage > should test all resource type validators 0ms
   ✓ organizationValidation > Business Rule Coverage > should test cross-organization access patterns 2ms
   ✓ organizationValidation > Router Pattern Functions > validatePublicOrganizationContext > should validate existing organization context 0ms
   ✓ organizationValidation > Router Pattern Functions > validatePublicOrganizationContext > should reject null organization context 0ms
   ✓ organizationValidation > Router Pattern Functions > validatePublicOrganizationContext > should reject undefined organization context 0ms
   × organizationValidation > Router Pattern Functions > createOrganizationScope > should create organization scope where clause 2ms
     → expected { organizationId: 'mock-org-1' } to deeply equal { organizationId: 'org-1' }
   × organizationValidation > Router Pattern Functions > createOrganizationScopeWith > should create organization scope with additional conditions 1ms
     → expected { name: 'Test', active: true, …(1) } to deeply equal { name: 'Test', active: true, …(1) }
   × organizationValidation > Router Pattern Functions > validateRouterEntityOwnership > should validate entity ownership 0ms
     → expected false to be true // Object.is equality
   ✓ organizationValidation > Router Pattern Functions > validateRouterEntityOwnership > should reject null entity 0ms
   ✓ organizationValidation > Router Pattern Functions > validateRouterEntityOwnership > should reject entity from different organization 0ms
   ✓ organizationValidation > Router Pattern Functions > validateRouterEntityOwnership > should use custom error message 0ms
   ✓ organizationValidation > Router Pattern Functions > createEntityQuery > should create entity query with organization scoping 0ms
   ✓ organizationValidation > Router Pattern Functions > createEntityUpdateQuery > should create entity update query with organization scoping 0ms
   ✓ organizationValidation > Router Pattern Functions > createEntityDeleteQuery > should create entity delete query with organization scoping 0ms
   × organizationValidation > Router Pattern Functions > validateEntityExistsAndOwned > should return entity when validation passes 1ms
     → Access denied: Test Entity belongs to different organization
   ✓ organizationValidation > Router Pattern Functions > validateEntityExistsAndOwned > should throw error when entity is null 0ms
   ✓ organizationValidation > Router Pattern Functions > validateEntityExistsAndOwned > should throw error when entity belongs to different organization 0ms
   ✓ organizationValidation > Router Pattern Functions > validatePublicOrganizationContextRequired > should return organization when validation passes 0ms
   ✓ organizationValidation > Router Pattern Functions > validatePublicOrganizationContextRequired > should throw error when organization is null 0ms
   ✓ organizationValidation > Router Pattern Functions > validatePublicOrganizationContextRequired > should throw error when organization is undefined 0ms
   × organizationValidation > Router Pattern Functions > validateRelatedEntitiesOwnership > should validate all entities belong to same organization 1ms
     → expected false to be true // Object.is equality
   × organizationValidation > Router Pattern Functions > validateRelatedEntitiesOwnership > should skip global entities (no organizationId) 0ms
     → expected false to be true // Object.is equality
   × organizationValidation > Router Pattern Functions > validateRelatedEntitiesOwnership > should reject entity from different organization 1ms
     → expected 'Access denied: Location belongs to di…' to be 'Access denied: Machine belongs to dif…' // Object.is equality
   × organizationValidation > Router Pattern Functions > validateMultipleEntityOwnership > should validate all entities belong to organization 0ms
     → expected false to be true // Object.is equality
   × organizationValidation > Router Pattern Functions > validateMultipleEntityOwnership > should reject when any entity is null 0ms
     → expected 'Access denied: Test Entity at index 0…' to be 'Test Entity at index 1 not found' // Object.is equality
   × organizationValidation > Router Pattern Functions > validateMultipleEntityOwnership > should reject when any entity belongs to different organization 0ms
     → expected 'Access denied: Test Entity at index 0…' to be 'Access denied: Test Entity at index 1…' // Object.is equality
stdout | src/server/auth/__tests__/permissions.test.ts
[MSW] Server started

stdout | src/server/services/__tests__/roleService.test.ts
[MSW] Server started

 ❯ |node| src/server/services/__tests__/roleService.test.ts (14 tests | 3 failed) 69ms
   ✓ RoleService > deleteRole > should throw NOT_FOUND when role does not exist 3ms
   ✓ RoleService > deleteRole > should throw FORBIDDEN when trying to delete system role 0ms
   ✓ RoleService > deleteRole > should throw PRECONDITION_FAILED when no default role available for reassignment 0ms
   × RoleService > createTemplateRole > should create new role when template role does not exist 11ms
     → [vitest] No "rolePermissions" export is defined on the "~/server/db/schema" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

   × RoleService > createTemplateRole > should update existing role when template role already exists 1ms
     → [vitest] No "rolePermissions" export is defined on the "~/server/db/schema" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

   × RoleService > createTemplateRole > should apply name override when provided 0ms
     → [vitest] No "rolePermissions" export is defined on the "~/server/db/schema" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

   ✓ RoleService > ensureAtLeastOneAdmin > should throw error when no admin users exist 0ms
   ✓ RoleService > ensureAtLeastOneAdmin > should pass when admin users exist 9ms
   ✓ RoleService > getDefaultRole > should return null when no default role exists 1ms
   ✓ RoleService > getDefaultRole > should return default role when it exists 0ms
   ✓ RoleService > getAdminRole > should return null when admin role does not exist 0ms
   ✓ RoleService > getAdminRole > should return admin role when it exists 0ms
   ✓ RoleService > updateRole > should throw NOT_FOUND when role does not exist 0ms
   ✓ RoleService > updateRole > should throw FORBIDDEN when trying to update system role 0ms
 ❯ |node| src/server/auth/__tests__/permissions.test.ts (21 tests | 15 failed) 125ms
   × Permission System Core Functions - ENHANCED WITH ORGANIZATIONAL SCOPING > hasPermission > should return true when user has the required permission 5ms
     → Cannot read properties of undefined (reading 'map')
   × Permission System Core Functions - ENHANCED WITH ORGANIZATIONAL SCOPING > hasPermission > should return false when user does not have the required permission 0ms
     → Cannot read properties of undefined (reading 'map')
   ✓ Permission System Core Functions - ENHANCED WITH ORGANIZATIONAL SCOPING > hasPermission > should return false when role does not exist 5ms
   × Permission System Core Functions - ENHANCED WITH ORGANIZATIONAL SCOPING > hasPermission > should handle system roles with admin permissions 2ms
     → expected false to be true // Object.is equality
   × Permission System Core Functions - ENHANCED WITH ORGANIZATIONAL SCOPING > requirePermission > should not throw when user has required permission 12ms
     → promise rejected "TypeError: Cannot read properties of unde…" instead of resolving
   × Permission System Core Functions - ENHANCED WITH ORGANIZATIONAL SCOPING > requirePermission > should throw FORBIDDEN error when user lacks required permission 1ms
     → expected error to be instance of TRPCError
   × Permission System Core Functions - ENHANCED WITH ORGANIZATIONAL SCOPING > requirePermission > should throw FORBIDDEN error with correct error code 1ms
     → expected TypeError: Cannot read properties of unde… to be an instance of TRPCError
   × Permission System Core Functions - ENHANCED WITH ORGANIZATIONAL SCOPING > getUserPermissions > should return all permissions for a user's role 3ms
     → Cannot read properties of undefined (reading 'map')
   × Permission System Core Functions - ENHANCED WITH ORGANIZATIONAL SCOPING > getUserPermissions > should return empty array when role has no permissions 1ms
     → Cannot read properties of undefined (reading 'map')
   ✓ Permission System Core Functions - ENHANCED WITH ORGANIZATIONAL SCOPING > getUserPermissions > should return empty array when role does not exist 0ms
   × Permission System Core Functions - ENHANCED WITH ORGANIZATIONAL SCOPING > getUserPermissions > should handle admin role with multiple permissions 0ms
     → Cannot read properties of undefined (reading 'findMany')
   × Permission System Core Functions - ENHANCED WITH ORGANIZATIONAL SCOPING > CRITICAL - Cross-Organizational Permission Boundaries > CRITICAL - Should prevent accessing roles from other organizations 42ms
     → expected "spy" to be called with arguments: [ { where: Any<Function>, …(1) } ][90m

Received: 

[1m  1st spy call:

[22m[2m  [[22m
[2m    {[22m
[32m-     "where": Any<Function>,[90m
[31m+     "columns": {[90m
[31m+       "name": true,[90m
[31m+     },[90m
[31m+     "where": SQL {[90m
[31m+       "decoder": {[90m
[31m+         "mapFromDriverValue": [Function mapFromDriverValue],[90m
[31m+       },[90m
[31m+       "queryChunks": [[90m
[31m+         StringChunk {[90m
[31m+           "value": [[90m
[31m+             "",[90m
[31m+           ],[90m
[31m+         },[90m
[31m+         PgText {[90m
[31m+           "columnType": "PgText",[90m
[31m+           "config": {[90m
[31m+             "columnType": "PgText",[90m
[31m+             "dataType": "string",[90m
[31m+             "default": undefined,[90m
[31m+             "enumValues": undefined,[90m
[31m+             "generated": undefined,[90m
[31m+             "hasDefault": false,[90m
[31m+             "isUnique": false,[90m
[31m+             "keyAsName": false,[90m
[31m+             "name": "id",[90m
[31m+             "notNull": true,[90m
[31m+             "primaryKey": true,[90m
[31m+             "uniqueName": "roles_id_unique",[90m
[31m+             "uniqueType": undefined,[90m
[31m+           },[90m
[31m+           "dataType": "string",[90m
[31m+           "default": undefined,[90m
[31m+           "defaultFn": undefined,[90m
[31m+           "enumValues": undefined,[90m
[31m+           "generated": undefined,[90m
[31m+           "generatedIdentity": undefined,[90m
[31m+           "hasDefault": false,[90m
[31m+           "isUnique": false,[90m
[31m+           "keyAsName": false,[90m
[31m+           "name": "id",[90m
[31m+           "notNull": true,[90m
[31m+           "onUpdateFn": undefined,[90m
[31m+           "primary": true,[90m
[31m+           "table": PgTable {[90m
[31m+             "createdAt": PgTimestamp {[90m
[31m+               "columnType": "PgTimestamp",[90m
[31m+               "config": {[90m
[31m+                 "columnType": "PgTimestamp",[90m
[31m+                 "dataType": "date",[90m
[31m+                 "default": SQL {[90m
[31m+                   "decoder": {[90m
[31m+                     "mapFromDriverValue": [Function mapFromDriverValue],[90m
[31m+                   },[90m
[31m+                   "queryChunks": [[90m
[31m+                     StringChunk {[90m
[31m+                       "value": [[90m
[31m+                         "now()",[90m
[31m+                       ],[90m
[31m+                     },[90m
[31m+                   ],[90m
[31m+                   "shouldInlineParams": false,[90m
[31m+                   "usedTables": [],[90m
[31m+                 },[90m
[31m+                 "generated": undefined,[90m
[31m+                 "hasDefault": true,[90m
[31m+                 "isUnique": false,[90m
[31m+                 "keyAsName": false,[90m
[31m+                 "name": "createdAt",[90m
[31m+                 "notNull": true,[90m
[31m+                 "precision": undefined,[90m
[31m+                 "primaryKey": false,[90m
[31m+                 "uniqueName": "roles_createdAt_unique",[90m
[31m+                 "uniqueType": undefined,[90m
[31m+                 "withTimezone": false,[90m
[31m+               },[90m
[31m+               "dataType": "date",[90m
[31m+               "default": SQL {[90m
[31m+                 "decoder": {[90m
[31m+                   "mapFromDriverValue": [Function mapFromDriverValue],[90m
[31m+                 },[90m
[31m+                 "queryChunks": [[90m
[31m+                   StringChunk {[90m
[31m+                     "value": [[90m
[31m+                       "now()",[90m
[31m+                     ],[90m
[31m+                   },[90m
[31m+                 ],[90m
[31m+                 "shouldInlineParams": false,[90m
[31m+                 "usedTables": [],[90m
[31m+               },[90m
[31m+               "defaultFn": undefined,[90m
[31m+               "enumValues": undefined,[90m
[31m+               "generated": undefined,[90m
[31m+               "generatedIdentity": undefined,[90m
[31m+               "hasDefault": true,[90m
[31m+               "isUnique": false,[90m
[31m+               "keyAsName": false,[90m
[31m+               "mapFromDriverValue": [Function mapFromDriverValue],[90m
[31m+               "mapToDriverValue": [Function mapToDriverValue],[90m
[31m+               "name": "createdAt",[90m
[31m+               "notNull": true,[90m
[31m+               "onUpdateFn": undefined,[90m
[31m+               "precision": undefined,[90m
[31m+               "primary": false,[90m
[31m+               "table": [Circular],[90m
[31m+               "uniqueName": "roles_createdAt_unique",[90m
[31m+               "uniqueType": undefined,[90m
[31m+               "withTimezone": false,[90m
[31m+             },[90m
[31m+             "enableRLS": [Function enableRLS],[90m
[31m+             "id": [Circular],[90m
[31m+             "isDefault": PgBoolean {[90m
[31m+               "columnType": "PgBoolean",[90m
[31m+               "config": {[90m
[31m+                 "columnType": "PgBoolean",[90m
[31m+                 "dataType": "boolean",[90m
[31m+                 "default": false,[90m
[31m+                 "generated": undefined,[90m
[31m+                 "hasDefault": true,[90m
[31m+                 "isUnique": false,[90m
[31m+                 "keyAsName": false,[90m
[31m+                 "name": "isDefault",[90m
[31m+                 "notNull": true,[90m
[31m+                 "primaryKey": false,[90m
[31m+                 "uniqueName": "roles_isDefault_unique",[90m
[31m+                 "uniqueType": undefined,[90m
[31m+               },[90m
[31m+               "dataType": "boolean",[90m
[31m+               "default": false,[90m
[31m+               "defaultFn": undefined,[90m
[31m+               "enumValues": undefined,[90m
[31m+               "generated": undefined,[90m
[31m+               "generatedIdentity": undefined,[90m
[31m+               "hasDefault": true,[90m
[31m+               "isUnique": false,[90m
[31m+               "keyAsName": false,[90m
[31m+               "name": "isDefault",[90m
[31m+               "notNull": true,[90m
[31m+               "onUpdateFn": undefined,[90m
[31m+               "primary": false,[90m
[31m+               "table": [Circular],[90m
[31m+               "uniqueName": "roles_isDefault_unique",[90m
[31m+               "uniqueType": undefined,[90m
[31m+             },[90m
[31m+             "isSystem": PgBoolean {[90m
[31m+               "columnType": "PgBoolean",[90m
[31m+               "config": {[90m
[31m+                 "columnType": "PgBoolean",[90m
[31m+                 "dataType": "boolean",[90m
[31m+                 "default": false,[90m
[31m+                 "generated": undefined,[90m
[31m+                 "hasDefault": true,[90m
[31m+                 "isUnique": false,[90m
[31m+                 "keyAsName": false,[90m
[31m+                 "name": "isSystem",[90m
[31m+                 "notNull": true,[90m
[31m+                 "primaryKey": false,[90m
[31m+                 "uniqueName": "roles_isSystem_unique",[90m
[31m+                 "uniqueType": undefined,[90m
[31m+               },[90m
[31m+               "dataType": "boolean",[90m
[31m+               "default": false,[90m
[31m+               "defaultFn": undefined,[90m
[31m+               "enumValues": undefined,[90m
[31m+               "generated": undefined,[90m
[31m+               "generatedIdentity": undefined,[90m
[31m+               "hasDefault": true,[90m
[31m+               "isUnique": false,[90m
[31m+               "keyAsName": false,[90m
[31m+               "name": "isSystem",[90m
[31m+               "notNull": true,[90m
[31m+               "onUpdateFn": undefined,[90m
[31m+               "primary": false,[90m
[31m+               "table": [Circular],[90m
[31m+               "uniqueName": "roles_isSystem_unique",[90m
[31m+               "uniqueType": undefined,[90m
[31m+             },[90m
[31m+             "name": PgText {[90m
[31m+               "columnType": "PgText",[90m
[31m+               "config": {[90m
[31m+                 "columnType": "PgText",[90m
[31m+                 "dataType": "string",[90m
[31m+                 "default": undefined,[90m
[31m+                 "enumValues": undefined,[90m
[31m+                 "generated": undefined,[90m
[31m+                 "hasDefault": false,[90m
[31m+                 "isUnique": false,[90m
[31m+                 "keyAsName": false,[90m
[31m+                 "name": "name",[90m
[31m+                 "notNull": true,[90m
[31m+                 "primaryKey": false,[90m
[31m+                 "uniqueName": "roles_name_unique",[90m
[31m+                 "uniqueType": undefined,[90m
[31m+               },[90m
[31m+               "dataType": "string",[90m
[31m+               "default": undefined,[90m
[31m+               "defaultFn": undefined,[90m
[31m+               "enumValues": undefined,[90m
[31m+               "generated": undefined,[90m
[31m+               "generatedIdentity": undefined,[90m
[31m+               "hasDefault": false,[90m
[31m+               "isUnique": false,[90m
[31m+               "keyAsName": false,[90m
[31m+               "name": "name",[90m
[31m+               "notNull": true,[90m
[31m+               "onUpdateFn": undefined,[90m
[31m+               "primary": false,[90m
[31m+               "table": [Circular],[90m
[31m+               "uniqueName": "roles_name_unique",[90m
[31m+               "uniqueType": undefined,[90m
[31m+             },[90m
[31m+             "organizationId": PgText {[90m
[31m+               "columnType": "PgText",[90m
[31m+               "config": {[90m
[31m+                 "columnType": "PgText",[90m
[31m+                 "dataType": "string",[90m
[31m+                 "default": undefined,[90m
[31m+                 "enumValues": undefined,[90m
[31m+                 "generated": undefined,[90m
[31m+                 "hasDefault": false,[90m
[31m+                 "isUnique": false,[90m
[31m+                 "keyAsName": false,[90m
[31m+                 "name": "organizationId",[90m
[31m+                 "notNull": true,[90m
[31m+                 "primaryKey": false,[90m
[31m+                 "uniqueName": "roles_organizationId_unique",[90m
[31m+                 "uniqueType": undefined,[90m
[31m+               },[90m
[31m+               "dataType": "string",[90m
[31m+               "default": undefined,[90m
[31m+               "defaultFn": undefined,[90m
[31m+               "enumValues": undefined,[90m
[31m+               "generated": undefined,[90m
[31m+               "generatedIdentity": undefined,[90m
[31m+               "hasDefault": false,[90m
[31m+               "isUnique": false,[90m
[31m+               "keyAsName": false,[90m
[31m+               "name": "organizationId",[90m
[31m+               "notNull": true,[90m
[31m+               "onUpdateFn": undefined,[90m
[31m+               "primary": false,[90m
[31m+               "table": [Circular],[90m
[31m+               "uniqueName": "roles_organizationId_unique",[90m
[31m+               "uniqueType": undefined,[90m
[31m+             },[90m
[31m+             "updatedAt": PgTimestamp {[90m
[31m+               "columnType": "PgTimestamp",[90m
[31m+               "config": {[90m
[31m+                 "columnType": "PgTimestamp",[90m
[31m+                 "dataType": "date",[90m
[31m+                 "default": SQL {[90m
[31m+                   "decoder": {[90m
[31m+                     "mapFromDriverValue": [Function mapFromDriverValue],[90m
[31m+                   },[90m
[31m+                   "queryChunks": [[90m
[31m+                     StringChunk {[90m
[31m+                       "value": [[90m
[31m+                         "now()",[90m
[31m+                       ],[90m
[31m+                     },[90m
[31m+                   ],[90m
[31m+                   "shouldInlineParams": false,[90m
[31m+                   "usedTables": [],[90m
[31m+                 },[90m
[31m+                 "generated": undefined,[90m
[31m+                 "hasDefault": true,[90m
[31m+                 "isUnique": false,[90m
[31m+                 "keyAsName": false,[90m
[31m+                 "name": "updatedAt",[90m
[31m+                 "notNull": true,[90m
[31m+                 "precision": undefined,[90m
[31m+                 "primaryKey": false,[90m
[31m+                 "uniqueName": "roles_updatedAt_unique",[90m
[31m+                 "uniqueType": undefined,[90m
[31m+                 "withTimezone": false,[90m
[31m+               },[90m
[31m+               "dataType": "date",[90m
[31m+               "default": SQL {[90m
[31m+                 "decoder": {[90m
[31m+                   "mapFromDriverValue": [Function mapFromDriverValue],[90m
[31m+                 },[90m
[31m+                 "queryChunks": [[90m
[31m+                   StringChunk {[90m
[31m+                     "value": [[90m
[31m+                       "now()",[90m
[31m+                     ],[90m
[31m+                   },[90m
[31m+                 ],[90m
[31m+                 "shouldInlineParams": false,[90m
[31m+                 "usedTables": [],[90m
[31m+               },[90m
[31m+               "defaultFn": undefined,[90m
[31m+               "enumValues": undefined,[90m
[31m+               "generated": undefined,[90m
[31m+               "generatedIdentity": undefined,[90m
[31m+               "hasDefault": true,[90m
[31m+               "isUnique": false,[90m
[31m+               "keyAsName": false,[90m
[31m+               "mapFromDriverValue": [Function mapFromDriverValue],[90m
[31m+               "mapToDriverValue": [Function mapToDriverValue],[90m
[31m+               "name": "updatedAt",[90m
[31m+               "notNull": true,[90m
[31m+               "onUpdateFn": undefined,[90m
[31m+               "precision": undefined,[90m
[31m+               "primary": false,[90m
[31m+               "table": [Circular],[90m
[31m+               "uniqueName": "roles_updatedAt_unique",[90m
[31m+               "uniqueType": undefined,[90m
[31m+               "withTimezone": false,[90m
[31m+             },[90m
[31m+             Symbol(drizzle:Name): "roles",[90m
[31m+             Symbol(drizzle:OriginalName): "roles",[90m
[31m+             Symbol(drizzle:Schema): undefined,[90m
[31m+             Symbol(drizzle:Columns): {[90m
[31m+               "createdAt": PgTimestamp {[90m
[31m+                 "columnType": "PgTimestamp",[90m
[31m+                 "config": {[90m
[31m+                   "columnType": "PgTimestamp",[90m
[31m+                   "dataType": "date",[90m
[31m+                   "default": SQL {[90m
[31m+                     "decoder": {[90m
[31m+                       "mapFromDriverValue": [Function mapFromDriverValue],[90m
[31m+                     },[90m
[31m+                     "queryChunks": [[90m
[31m+                       StringChunk {[90m
[31m+                         "value": [[90m
[31m+                           "now()",[90m
[31m+                         ],[90m
[31m+                       },[90m
[31m+                     ],[90m
[31m+                     "shouldInlineParams": false,[90m
[31m+                     "usedTables": [],[90m
[31m+                   },[90m
[31m+                   "generated": undefined,[90m
[31m+                   "hasDefault": true,[90m
[31m+                   "isUnique": false,[90m
[31m+                   "keyAsName": false,[90m
[31m+                   "name": "createdAt",[90m
[31m+                   "notNull": true,[90m
[31m+                   "precision": undefined,[90m
[31m+                   "primaryKey": false,[90m
[31m+                   "uniqueName": "roles_createdAt_unique",[90m
[31m+                   "uniqueType": undefined,[90m
[31m+                   "withTimezone": false,[90m
[31m+                 },[90m
[31m+                 "dataType": "date",[90m
[31m+                 "default": SQL {[90m
[31m+                   "decoder": {[90m
[31m+                     "mapFromDriverValue": [Function mapFromDriverValue],[90m
[31m+                   },[90m
[31m+                   "queryChunks": [[90m
[31m+                     StringChunk {[90m
[31m+                       "value": [[90m
[31m+                         "now()",[90m
[31m+                       ],[90m
[31m+                     },[90m
[31m+                   ],[90m
[31m+                   "shouldInlineParams": false,[90m
[31m+                   "usedTables": [],[90m
[31m+                 },[90m
[31m+                 "defaultFn": undefined,[90m
[31m+                 "enumValues": undefined,[90m
[31m+                 "generated": undefined,[90m
[31m+                 "generatedIdentity": undefined,[90m
[31m+                 "hasDefault": true,[90m
[31m+                 "isUnique": false,[90m
[31m+                 "keyAsName": false,[90m
[31m+                 "mapFromDriverValue": [Function mapFromDriverValue],[90m
[31m+                 "mapToDriverValue": [Function mapToDriverValue],[90m
[31m+                 "name": "createdAt",[90m
[31m+                 "notNull": true,[90m
[31m+                 "onUpdateFn": undefined,[90m
[31m+                 "precision": undefined,[90m
[31m+                 "primary": false,[90m
[31m+                 "table": [Circular],[90m
[31m+                 "uniqueName": "roles_createdAt_unique",[90m
[31m+                 "uniqueType": undefined,[90m
[31m+                 "withTimezone": false,[90m
[31m+               },[90m
[31m+               "id": [Circular],[90m
[31m+               "isDefault": PgBoolean {[90m
[31m+                 "columnType": "PgBoolean",[90m
[31m+                 "config": {[90m
[31m+                   "columnType": "PgBoolean",[90m
[31m+                   "dataType": "boolean",[90m
[31m+                   "default": false,[90m
[31m+                   "generated": undefined,[90m
[31m+                   "hasDefault": true,[90m
[31m+                   "isUnique": false,[90m
[31m+                   "keyAsName": false,[90m
[31m+                   "name": "isDefault",[90m
[31m+                   "notNull": true,[90m
[31m+                   "primaryKey": false,[90m
[31m+                   "uniqueName": "roles_isDefault_unique",[90m
[31m+                   "uniqueType": undefined,[90m
[31m+                 },[90m
[31m+                 "dataType": "boolean",[90m
[31m+                 "default": false,[90m
[31m+                 "defaultFn": undefined,[90m
[31m+                 "enumValues": undefined,[90m
[31m+                 "generated": undefined,[90m
[31m+                 "generatedIdentity": undefined,[90m
[31m+                 "hasDefault": true,[90m
[31m+                 "isUnique": false,[90m
[31m+                 "keyAsName": false,[90m
[31m+                 "name": "isDefault",[90m
[31m+                 "notNull": true,[90m
[31m+                 "onUpdateFn": undefined,[90m
[31m+                 "primary": false,[90m
[31m+                 "table": [Circular],[90m
[31m+                 "uniqueName": "roles_isDefault_unique",[90m
[31m+                 "uniqueType": undefined,[90m
[31m+               },[90m
[31m+               "isSystem": PgBoolean {[90m
[31m+                 "columnType": "PgBoolean",[90m
[31m+                 "config": {[90m
[31m+                   "columnType": "PgBoolean",[90m
[31m+                   "dataType": "boolean",[90m
[31m+                   "default": false,[90m
[31m+                   "generated": undefined,[90m
[31m+                   "hasDefault": true,[90m
[31m+                   "isUnique": false,[90m
[31m+                   "keyAsName": false,[90m
[31m+                   "name": "isSystem",[90m
[31m+                   "notNull": true,[90m
[31m+                   "primaryKey": false,[90m
[31m+                   "uniqueName": "roles_isSystem_unique",[90m
[31m+                   "uniqueType": undefined,[90m
[31m+                 },[90m
[31m+                 "dataType": "boolean",[90m
[31m+                 "default": false,[90m
[31m+                 "defaultFn": undefined,[90m
[31m+                 "enumValues": undefined,[90m
[31m+                 "generated": undefined,[90m
[31m+                 "generatedIdentity": undefined,[90m
[31m+                 "hasDefault": true,[90m
[31m+                 "isUnique": false,[90m
[31m+                 "keyAsName": false,[90m
[31m+                 "name": "isSystem",[90m
[31m+                 "notNull": true,[90m
[31m+                 "onUpdateFn": undefined,[90m
[31m+                 "primary": false,[90m
[31m+                 "table": [Circular],[90m
[31m+                 "uniqueName": "roles_isSystem_unique",[90m
[31m+                 "uniqueType": undefined,[90m
[31m+               },[90m
[31m+               "name": PgText {[90m
[31m+                 "columnType": "PgText",[90m
[31m+                 "config": {[90m
[31m+                   "columnType": "PgText",[90m
[31m+                   "dataType": "string",[90m
[31m+                   "default": undefined,[90m
[31m+                   "enumValues": undefined,[90m
[31m+                   "generated": undefined,[90m
[31m+                   "hasDefault": false,[90m
[31m+                   "isUnique": false,[90m
[31m+                   "keyAsName": false,[90m
[31m+                   "name": "name",[90m
[31m+                   "notNull": true,[90m
[31m+                   "primaryKey": false,[90m
[31m+                   "uniqueName": "roles_name_unique",[90m
[31m+                   "uniqueType": undefined,[90m
[31m+                 },[90m
[31m+                 "dataType": "string",[90m
[31m+                 "default": undefined,[90m
[31m+                 "defaultFn": undefined,[90m
[31m+                 "enumValues": undefined,[90m
[31m+                 "generated": undefined,[90m
[31m+                 "generatedIdentity": undefined,[90m
[31m+                 "hasDefault": false,[90m
[31m+                 "isUnique": false,[90m
[31m+                 "keyAsName": false,[90m
[31m+                 "name": "name",[90m
[31m+                 "notNull": true,[90m
[31m+                 "onUpdateFn": undefined,[90m
[31m+                 "primary": false,[90m
[31m+                 "table": [Circular],[90m
[31m+                 "uniqueName": "roles_name_unique",[90m
[31m+                 "uniqueType": undefined,[90m
[31m+               },[90m
[31m+               "organizationId": PgText {[90m
[31m+                 "columnType": "PgText",[90m
[31m+                 "config": {[90m
[31m+                   "columnType": "PgText",[90m
[31m+                   "dataType": "string",[90m
[31m+                   "default": undefined,[90m
[31m+                   "enumValues": undefined,[90m
[31m+                   "generated": undefined,[90m
[31m+                   "hasDefault": false,[90m
[31m+                   "isUnique": false,[90m
[31m+                   "keyAsName": false,[90m
[31m+                   "name": "organizationId",[90m
[31m+                   "notNull": true,[90m
[31m+                   "primaryKey": false,[90m
[31m+                   "uniqueName": "roles_organizationId_unique",[90m
[31m+                   "uniqueType": undefined,[90m
[31m+                 },[90m
[31m+                 "dataType": "string",[90m
[31m+                 "default": undefined,[90m
[31m+                 "defaultFn": undefined,[90m
[31m+                 "enumValues": undefined,[90m
[31m+                 "generated": undefined,[90m
[31m+                 "generatedIdentity": undefined,[90m
[31m+                 "hasDefault": false,[90m
[31m+                 "isUnique": false,[90m
[31m+                 "keyAsName": false,[90m
[31m+                 "name": "organizationId",[90m
[31m+                 "notNull": true,[90m
[31m+                 "onUpdateFn": undefined,[90m
[31m+                 "primary": false,[90m
[31m+                 "table": [Circular],[90m
[31m+                 "uniqueName": "roles_organizationId_unique",[90m
[31m+                 "uniqueType": undefined,[90m
[31m+               },[90m
[31m+               "updatedAt": PgTimestamp {[90m
[31m+                 "columnType": "PgTimestamp",[90m
[31m+                 "config": {[90m
[31m+                   "columnType": "PgTimestamp",[90m
[31m+                   "dataType": "date",[90m
[31m+                   "default": SQL {[90m
[31m+                     "decoder": {[90m
[31m+                       "mapFromDriverValue": [Function mapFromDriverValue],[90m
[31m+                     },[90m
[31m+                     "queryChunks": [[90m
[31m+                       StringChunk {[90m
[31m+                         "value": [[90m
[31m+                           "now()",[90m
[31m+                         ],[90m
[31m+                       },[90m
[31m+                     ],[90m
[31m+                     "shouldInlineParams": false,[90m
[31m+                     "usedTables": [],[90m
[31m+                   },[90m
[31m+                   "generated": undefined,[90m
[31m+                   "hasDefault": true,[90m
[31m+                   "isUnique": false,[90m
[31m+                   "keyAsName": false,[90m
[31m+                   "name": "updatedAt",[90m
[31m+                   "notNull": true,[90m
[31m+                   "precision": undefined,[90m
[31m+                   "primaryKey": false,[90m
[31m+                   "uniqueName": "roles_updatedAt_unique",[90m
[31m+                   "uniqueType": undefined,[90m
[31m+                   "withTimezone": false,[90m
[31m+                 },[90m
[31m+                 "dataType": "date",[90m
[31m+                 "default": SQL {[90m
[31m+                   "decoder": {[90m
[31m+                     "mapFromDriverValue": [Function mapFromDriverValue],[90m
[31m+                   },[90m
[31m+                   "queryChunks": [[90m
[31m+                     StringChunk {[90m
[31m+                       "value": [[90m
[31m+                         "now()",[90m
[31m+                       ],[90m
[31m+                     },[90m
[31m+                   ],[90m
[31m+                   "shouldInlineParams": false,[90m
[31m+                   "usedTables": [],[90m
[31m+                 },[90m
[31m+                 "defaultFn": undefined,[90m
[31m+                 "enumValues": undefined,[90m
[31m+                 "generated": undefined,[90m
[31m+                 "generatedIdentity": undefined,[90m
[31m+                 "hasDefault": true,[90m
[31m+                 "isUnique": false,[90m
[31m+                 "keyAsName": false,[90m
[31m+                 "mapFromDriverValue": [Function mapFromDriverValue],[90m
[31m+                 "mapToDriverValue": [Function mapToDriverValue],[90m
[31m+                 "name": "updatedAt",[90m
[31m+                 "notNull": true,[90m
[31m+                 "onUpdateFn": undefined,[90m
[31m+                 "precision": undefined,[90m
[31m+                 "primary": false,[90m
[31m+                 "table": [Circular],[90m
[31m+                 "uniqueName": "roles_updatedAt_unique",[90m
[31m+                 "uniqueType": undefined,[90m
[31m+                 "withTimezone": false,[90m
[31m+               },[90m
[31m+             },[90m
[31m+             Symbol(drizzle:ExtraConfigColumns): {[90m
[31m+               "createdAt": ExtraConfigColumn {[90m
[31m+                 "columnType": "PgTimestamp",[90m
[31m+                 "config": {[90m
[31m+                   "columnType": "PgTimestamp",[90m
[31m+                   "dataType": "date",[90m
[31m+                   "default": SQL {[90m
[31m+                     "decoder": {[90m
[31m+                       "mapFromDriverValue": [Function mapFromDriverValue],[90m
[31m+                     },[90m
[31m+                     "queryChunks": [[90m
[31m+                       StringChunk {[90m
[31m+                         "value": [[90m
[31m+                           "now()",[90m
[31m+                         ],[90m
[31m+                       },[90m
[31m+                     ],[90m
[31m+                     "shouldInlineParams": false,[90m
[31m+                     "usedTables": [],[90m
[31m+                   },[90m
[31m+                   "generated": undefined,[90m
[31m+                   "hasDefault": true,[90m
[31m+                   "isUnique": false,[90m
[31m+                   "keyAsName": false,[90m
[31m+                   "name": "createdAt",[90m
[31m+                   "notNull": true,[90m
[31m+                   "precision": undefined,[90m
[31m+                   "primaryKey": false,[90m
[31m+                   "uniqueName": "roles_createdAt_unique",[90m
[31m+                   "uniqueType": undefined,[90m
[31m+                   "withTimezone": false,[90m
[31m+                 },[90m
[31m+                 "dataType": "date",[90m
[31m+                 "default": SQL {[90m
[31m+                   "decoder": {[90m
[31m+                     "mapFromDriverValue": [Function mapFromDriverValue],[90m
[31m+                   },[90m
[31m+                   "queryChunks": [[90m
[31m+                     StringChunk {[90m
[31m+                       "value": [[90m
[31m+                         "now()",[90m
[31m+                       ],[90m
[31m+                     },[90m
[31m+                   ],[90m
[31m+                   "shouldInlineParams": false,[90m
[31m+                   "usedTables": [],[90m
[31m+                 },[90m
[31m+                 "defaultConfig": {[90m
[31m+                   "nulls": "last",[90m
[31m+                   "opClass": undefined,[90m
[31m+                   "order": "asc",[90m
[31m+                 },[90m
[31m+                 "defaultFn": undefined,[90m
[31m+                 "enumValues": undefined,[90m
[31m+                 "generated": undefined,[90m
[31m+                 "generatedIdentity": undefined,[90m
[31m+                 "hasDefault": true,[90m
[31m+                 "indexConfig": {[90m
[31m+                   "nulls": "last",[90m
[31m+                   "opClass": undefined,[90m
[31m+                   "order": "asc",[90m
[31m+                 },[90m
[31m+                 "isUnique": false,[90m
[31m+                 "keyAsName": false,[90m
[31m+                 "name": "createdAt",[90m
[31m+                 "notNull": true,[90m
[31m+                 "onUpdateFn": undefined,[90m
[31m+                 "primary": false,[90m
[31m+                 "table": [Circular],[90m
[31m+                 "uniqueName": "roles_createdAt_unique",[90m
[31m+                 "uniqueType": undefined,[90m
[31m+               },[90m
[31m+               "id": ExtraConfigColumn {[90m
[31m+                 "columnType": "PgText",[90m
[31m+                 "config": {[90m
[31m+                   "columnType": "PgText",[90m
[31m+                   "dataType": "string",[90m
[31m+                   "default": undefined,[90m
[31m+                   "enumValues": undefined,[90m
[31m+                   "generated": undefined,[90m
[31m+                   "hasDefault": false,[90m
[31m+                   "isUnique": false,[90m
[31m+                   "keyAsName": false,[90m
[31m+                   "name": "id",[90m
[31m+                   "notNull": true,[90m
[31m+                   "primaryKey": true,[90m
[31m+                   "uniqueName": "roles_id_unique",[90m
[31m+                   "uniqueType": undefined,[90m
[31m+                 },[90m
[31m+                 "dataType": "string",[90m
[31m+                 "default": undefined,[90m
[31m+                 "defaultConfig": {[90m
[31m+                   "nulls": "last",[90m
[31m+                   "opClass": undefined,[90m
[31m+                   "order": "asc",[90m
[31m+                 },[90m
[31m+                 "defaultFn": undefined,[90m
[31m+                 "enumValues": undefined,[90m
[31m+                 "generated": undefined,[90m
[31m+                 "generatedIdentity": undefined,[90m
[31m+                 "hasDefault": false,[90m
[31m+                 "indexConfig": {[90m
[31m+                   "nulls": "last",[90m
[31m+                   "opClass": undefined,[90m
[31m+                   "order": "asc",[90m
[31m+                 },[90m
[31m+                 "isUnique": false,[90m
[31m+                 "keyAsName": false,[90m
[31m+                 "name": "id",[90m
[31m+                 "notNull": true,[90m
[31m+                 "onUpdateFn": undefined,[90m
[31m+                 "primary": true,[90m
[31m+                 "table": [Circular],[90m
[31m+                 "uniqueName": "roles_id_unique",[90m
[31m+                 "uniqueType": undefined,[90m
[31m+               },[90m
[31m+               "isDefault": ExtraConfigColumn {[90m
[31m+                 "columnType": "PgBoolean",[90m
[31m+                 "config": {[90m
[31m+                   "columnType": "PgBoolean",[90m
[31m+                   "dataType": "boolean",[90m
[31m+                   "default": false,[90m
[31m+                   "generated": undefined,[90m
[31m+                   "hasDefault": true,[90m
[31m+                   "isUnique": false,[90m
[31m+                   "keyAsName": false,[90m
[31m+                   "name": "isDefault",[90m
[31m+                   "notNull": true,[90m
[31m+                   "primaryKey": false,[90m
[31m+                   "uniqueName": "roles_isDefault_unique",[90m
[31m+                   "uniqueType": undefined,[90m
[31m+                 },[90m
[31m+                 "dataType": "boolean",[90m
[31m+                 "default": false,[90m
[31m+                 "defaultConfig": {[90m
[31m+                   "nulls": "last",[90m
[31m+                   "opClass": undefined,[90m
[31m+                   "order": "asc",[90m
[31m+                 },[90m
[31m+                 "defaultFn": undefined,[90m
[31m+                 "enumValues": undefined,[90m
[31m+                 "generated": undefined,[90m
[31m+                 "generatedIdentity": undefined,[90m
[31m+                 "hasDefault": true,[90m
[31m+                 "indexConfig": {[90m
[31m+                   "nulls": "last",[90m
[31m+                   "opClass": undefined,[90m
[31m+                   "order": "asc",[90m
[31m+                 },[90m
[31m+                 "isUnique": false,[90m
[31m+                 "keyAsName": false,[90m
[31m+                 "name": "isDefault",[90m
[31m+                 "notNull": true,[90m
[31m+                 "onUpdateFn": undefined,[90m
[31m+                 "primary": false,[90m
[31m+                 "table": [Circular],[90m
[31m+                 "uniqueName": "roles_isDefault_unique",[90m
[31m+                 "uniqueType": undefined,[90m
[31m+               },[90m
[31m+               "isSystem": ExtraConfigColumn {[90m
[31m+                 "columnType": "PgBoolean",[90m
[31m+                 "config": {[90m
[31m+                   "columnType": "PgBoolean",[90m
[31m+                   "dataType": "boolean",[90m
[31m+                   "default": false,[90m
[31m+                   "generated": undefined,[90m
[31m+                   "hasDefault": true,[90m
[31m+                   "isUnique": false,[90m
[31m+                   "keyAsName": false,[90m
[31m+                   "name": "isSystem",[90m
[31m+                   "notNull": true,[90m
[31m+                   "primaryKey": false,[90m
[31m+                   "uniqueName": "roles_isSystem_unique",[90m
[31m+                   "uniqueType": undefined,[90m
[31m+                 },[90m
[31m+                 "dataType": "boolean",[90m
[31m+                 "default": false,[90m
[31m+                 "defaultConfig": {[90m
[31m+                   "nulls": "last",[90m
[31m+                   "opClass": undefined,[90m
[31m+                   "order": "asc",[90m
[31m+                 },[90m
[31m+                 "defaultFn": undefined,[90m
[31m+                 "enumValues": undefined,[90m
[31m+                 "generated": undefined,[90m
[31m+                 "generatedIdentity": undefined,[90m
[31m+                 "hasDefault": true,[90m
[31m+                 "indexConfig": {[90m
[31m+                   "nulls": "last",[90m
[31m+                   "opClass": undefined,[90m
[31m+                   "order": "asc",[90m
[31m+                 },[90m
[31m+                 "isUnique": false,[90m
[31m+                 "keyAsName": false,[90m
[31m+                 "name": "isSystem",[90m
[31m+                 "notNull": true,[90m
[31m+                 "onUpdateFn": undefined,[90m
[31m+                 "primary": false,[90m
[31m+                 "table": [Circular],[90m
[31m+                 "uniqueName": "roles_isSystem_unique",[90m
[31m+                 "uniqueType": undefined,[90m
[31m+               },[90m
[31m+               "name": ExtraConfigColumn {[90m
[31m+                 "columnType": "PgText",[90m
[31m+                 "config": {[90m
[31m+                   "columnType": "PgText",[90m
[31m+                   "dataType": "string",[90m
[31m+                   "default": undefined,[90m
[31m+                   "enumValues": undefined,[90m
[31m+                   "generated": undefined,[90m
[31m+                   "hasDefault": false,[90m
[31m+                   "isUnique": false,[90m
[31m+                   "keyAsName": false,[90m
[31m+                   "name": "name",[90m
[31m+                   "notNull": true,[90m
[31m+                   "primaryKey": false,[90m
[31m+                   "uniqueName": "roles_name_unique",[90m
[31m+                   "uniqueType": undefined,[90m
[31m+                 },[90m
[31m+                 "dataType": "string",[90m
[31m+                 "default": undefined,[90m
[31m+                 "defaultConfig": {[90m
[31m+                   "nulls": "last",[90m
[31m+                   "opClass": undefined,[90m
[31m+                   "order": "asc",[90m
[31m+                 },[90m
[31m+                 "defaultFn": undefined,[90m
[31m+                 "enumValues": undefined,[90m
[31m+                 "generated": undefined,[90m
[31m+                 "generatedIdentity": undefined,[90m
[31m+                 "hasDefault": false,[90m
[31m+                 "indexConfig": {[90m
[31m+                   "nulls": "last",[90m
[31m+                   "opClass": undefined,[90m
[31m+                   "order": "asc",[90m
[31m+                 },[90m
[31m+                 "isUnique": false,[90m
[31m+                 "keyAsName": false,[90m
[31m+                 "name": "name",[90m
[31m+                 "notNull": true,[90m
[31m+                 "onUpdateFn": undefined,[90m
[31m+                 "primary": false,[90m
[31m+                 "table": [Circular],[90m
[31m+                 "uniqueName": "roles_name_unique",[90m
[31m+                 "uniqueType": undefined,[90m
[31m+               },[90m
[31m+               "organizationId": ExtraConfigColumn {[90m
[31m+                 "columnType": "PgText",[90m
[31m+                 "config": {[90m
[31m+                   "columnType": "PgText",[90m
[31m+                   "dataType": "string",[90m
[31m+                   "default": undefined,[90m
[31m+                   "enumValues": undefined,[90m
[31m+                   "generated": undefined,[90m
[31m+                   "hasDefault": false,[90m
[31m+                   "isUnique": false,[90m
[31m+                   "keyAsName": false,[90m
[31m+                   "name": "organizationId",[90m
[31m+                   "notNull": true,[90m
[31m+                   "primaryKey": false,[90m
[31m+                   "uniqueName": "roles_organizationId_unique",[90m
[31m+                   "uniqueType": undefined,[90m
[31m+                 },[90m
[31m+                 "dataType": "string",[90m
[31m+                 "default": undefined,[90m
[31m+                 "defaultConfig": {[90m
[31m+                   "nulls": "last",[90m
[31m+                   "opClass": undefined,[90m
[31m+                   "order": "asc",[90m
[31m+                 },[90m
[31m+                 "defaultFn": undefined,[90m
[31m+                 "enumValues": undefined,[90m
[31m+                 "generated": undefined,[90m
[31m+                 "generatedIdentity": undefined,[90m
[31m+                 "hasDefault": false,[90m
[31m+                 "indexConfig": {[90m
[31m+                   "nulls": "last",[90m
[31m+                   "opClass": undefined,[90m
[31m+                   "order": "asc",[90m
[31m+                 },[90m
[31m+                 "isUnique": false,[90m
[31m+                 "keyAsName": false,[90m
[31m+                 "name": "organizationId",[90m
[31m+                 "notNull": true,[90m
[31m+                 "onUpdateFn": undefined,[90m
[31m+                 "primary": false,[90m
[31m+                 "table": [Circular],[90m
[31m+                 "uniqueName": "roles_organizationId_unique",[90m
[31m+                 "uniqueType": undefined,[90m
[31m+               },[90m
[31m+               "updatedAt": ExtraConfigColumn {[90m
[31m+                 "columnType": "PgTimestamp",[90m
[31m+                 "config": {[90m
[31m+                   "columnType": "PgTimestamp",[90m
[31m+                   "dataType": "date",[90m
[31m+                   "default": SQL {[90m
[31m+                     "decoder": {[90m
[31m+                       "mapFromDriverValue": [Function mapFromDriverValue],[90m
[31m+                     },[90m
[31m+                     "queryChunks": [[90m
[31m+                       StringChunk {[90m
[31m+                         "value": [[90m
[31m+                           "now()",[90m
[31m+                         ],[90m
[31m+                       },[90m
[31m+                     ],[90m
[31m+                     "shouldInlineParams": false,[90m
[31m+                     "usedTables": [],[90m
[31m+                   },[90m
[31m+                   "generated": undefined,[90m
[31m+                   "hasDefault": true,[90m
[31m+                   "isUnique": false,[90m
[31m+                   "keyAsName": false,[90m
[31m+                   "name": "updatedAt",[90m
[31m+                   "notNull": true,[90m
[31m+                   "precision": undefined,[90m
[31m+                   "primaryKey": false,[90m
[31m+                   "uniqueName": "roles_updatedAt_unique",[90m
[31m+                   "uniqueType": undefined,[90m
[31m+                   "withTimezone": false,[90m
[31m+                 },[90m
[31m+                 "dataType": "date",[90m
[31m+                 "default": SQL {[90m
[31m+                   "decoder": {[90m
[31m+                     "mapFromDriverValue": [Function mapFromDriverValue],[90m
[31m+                   },[90m
[31m+                   "queryChunks": [[90m
[31m+                     StringChunk {[90m
[31m+                       "value": [[90m
[31m+                         "now()",[90m
[31m+                       ],[90m
[31m+                     },[90m
[31m+                   ],[90m
[31m+                   "shouldInlineParams": false,[90m
[31m+                   "usedTables": [],[90m
[31m+                 },[90m
[31m+                 "defaultConfig": {[90m
[31m+                   "nulls": "last",[90m
[31m+                   "opClass": undefined,[90m
[31m+                   "order": "asc",[90m
[31m+                 },[90m
[31m+                 "defaultFn": undefined,[90m
[31m+                 "enumValues": undefined,[90m
[31m+                 "generated": undefined,[90m
[31m+                 "generatedIdentity": undefined,[90m
[31m+                 "hasDefault": true,[90m
[31m+                 "indexConfig": {[90m
[31m+                   "nulls": "last",[90m
[31m+                   "opClass": undefined,[90m
[31m+                   "order": "asc",[90m
[31m+                 },[90m
[31m+                 "isUnique": false,[90m
[31m+                 "keyAsName": false,[90m
[31m+                 "name": "updatedAt",[90m
[31m+                 "notNull": true,[90m
[31m+                 "onUpdateFn": undefined,[90m
[31m+                 "primary": false,[90m
[31m+                 "table": [Circular],[90m
[31m+                 "uniqueName": "roles_updatedAt_unique",[90m
[31m+                 "uniqueType": undefined,[90m
[31m+               },[90m
[31m+             },[90m
[31m+             Symbol(drizzle:BaseName): "roles",[90m
[31m+             Symbol(drizzle:IsAlias): false,[90m
[31m+             Symbol(drizzle:IsDrizzleTable): true,[90m
[31m+             Symbol(drizzle:ExtraConfigBuilder): [Function anonymous],[90m
[31m+             Symbol(drizzle:PgInlineForeignKeys): [],[90m
[31m+             Symbol(drizzle:EnableRLS): false,[90m
[31m+           },[90m
[31m+           "uniqueName": "roles_id_unique",[90m
[31m+           "uniqueType": undefined,[90m
[31m+         },[90m
[31m+         StringChunk {[90m
[31m+           "value": [[90m
[31m+             " = ",[90m
[31m+           ],[90m
[31m+         },[90m
[31m+         Param {[90m
[31m+           "brand": undefined,[90m
[31m+           "encoder": PgText {[90m
[31m+             "columnType": "PgText",[90m
[31m+             "config": {[90m
[31m+               "columnType": "PgText",[90m
[31m+               "dataType": "string",[90m
[31m+               "default": undefined,[90m
[31m+               "enumValues": undefined,[90m
[31m+               "generated": undefined,[90m
[31m+               "hasDefault": false,[90m
[31m+               "isUnique": false,[90m
[31m+               "keyAsName": false,[90m
[31m+               "name": "id",[90m
[31m+               "notNull": true,[90m
[31m+               "primaryKey": true,[90m
[31m+               "uniqueName": "roles_id_unique",[90m
[31m+               "uniqueType": undefined,[90m
[31m+             },[90m
[31m+             "dataType": "string",[90m
[31m+             "default": undefined,[90m
[31m+             "defaultFn": undefined,[90m
[31m+             "enumValues": undefined,[90m
[31m+             "generated": undefined,[90m
[31m+             "generatedIdentity": undefined,[90m
[31m+             "hasDefault": false,[90m
[31m+             "isUnique": false,[90m
[31m+             "keyAsName": false,[90m
[31m+             "name": "id",[90m
[31m+             "notNull": true,[90m
[31m+             "onUpdateFn": undefined,[90m
[31m+             "primary": true,[90m
[31m+             "table": PgTable {[90m
[31m+               "createdAt": PgTimestamp {[90m
[31m+                 "columnType": "PgTimestamp",[90m
[31m+                 "config": {[90m
[31m+                   "columnType": "PgTimestamp",[90m
[31m+                   "dataType": "date",[90m
[31m+                   "default": SQL {[90m
[31m+                     "decoder": {[90m
[31m+                       "mapFromDriverValue": [Function mapFromDriverValue],[90m
[31m+                     },[90m
[31m+                     "queryChunks": [[90m
[31m+                       StringChunk {[90m
[31m+                         "value": [[90m
[31m+                           "now()",[90m
[31m+                         ],[90m
[31m+                       },[90m
[31m+                     ],[90m
[31m+                     "shouldInlineParams": false,[90m
[31m+                     "usedTables": [],[90m
[31m+                   },[90m
[31m+                   "generated": undefined,[90m
[31m+                   "hasDefault": true,[90m
[31m+                   "isUnique": false,[90m
[31m+                   "keyAsName": false,[90m
[31m+                   "name": "createdAt",[90m
[31m+                   "notNull": true,[90m
[31m+                   "precision": undefined,[90m
[31m+                   "primaryKey": false,[90m
[31m+                   "uniqueName": "roles_createdAt_unique",[90m
[31m+                   "uniqueType": undefined,[90m
[31m+                   "withTimezone": false,[90m
[31m+                 },[90m
[31m+                 "dataType": "date",[90m
[31m+                 "default": SQL {[90m
[31m+                   "decoder": {[90m
[31m+                     "mapFromDriverValue": [Function mapFromDriverValue],[90m
[31m+                   },[90m
[31m+                   "queryChunks": [[90m
[31m+                     StringChunk {[90m
[31m+                       "value": [[90m
[31m+                         "now()",[90m
[31m+                       ],[90m
[31m+                     },[90m
[31m+                   ],[90m
[31m+                   "shouldInlineParams": false,[90m
[31m+                   "usedTables": [],[90m
[31m+                 },[90m
[31m+                 "defaultFn": undefined,[90m
[31m+                 "enumValues": undefined,[90m
[31m+                 "generated": undefined,[90m
[31m+                 "generatedIdentity": undefined,[90m
[31m+                 "hasDefault": true,[90m
[31m+                 "isUnique": false,[90m
[31m+                 "keyAsName": false,[90m
[31m+                 "mapFromDriverValue": [Function mapFromDriverValue],[90m
[31m+                 "mapToDriverValue": [Function mapToDriverValue],[90m
[31m+                 "name": "createdAt",[90m
[31m+                 "notNull": true,[90m
[31m+                 "onUpdateFn": undefined,[90m
[31m+                 "precision": undefined,[90m
[31m+                 "primary": false,[90m
[31m+                 "table": [Circular],[90m
[31m+                 "uniqueName": "roles_createdAt_unique",[90m
[31m+                 "uniqueType": undefined,[90m
[31m+                 "withTimezone": false,[90m
[31m+               },[90m
[31m+               "enableRLS": [Function enableRLS],[90m
[31m+               "id": [Circular],[90m
[31m+               "isDefault": PgBoolean {[90m
[31m+                 "columnType": "PgBoolean",[90m
[31m+                 "config": {[90m
[31m+                   "columnType": "PgBoolean",[90m
[31m+                   "dataType": "boolean",[90m
[31m+                   "default": false,[90m
[31m+                   "generated": undefined,[90m
[31m+                   "hasDefault": true,[90m
[31m+                   "isUnique": false,[90m
[31m+                   "keyAsName": false,[90m
[31m+                   "name": "isDefault",[90m
[31m+                   "notNull": true,[90m
[31m+                   "primaryKey": false,[90m
[31m+                   "uniqueName": "roles_isDefault_unique",[90m
[31m+                   "uniqueType": undefined,[90m
[31m+                 },[90m
[31m+                 "dataType": "boolean",[90m
[31m+                 "default": false,[90m
[31m+                 "defaultFn": undefined,[90m
[31m+                 "enumValues": undefined,[90m
[31m+                 "generated": undefined,[90m
[31m+                 "generatedIdentity": undefined,[90m
[31m+                 "hasDefault": true,[90m
[31m+                 "isUnique": false,[90m
[31m+                 "keyAsName": false,[90m
[31m+                 "name": "isDefault",[90m
[31m+                 "notNull": true,[90m
[31m+                 "onUpdateFn": undefined,[90m
[31m+                 "primary": false,[90m
[31m+                 "table": [Circular],[90m
[31m+                 "uniqueName": "roles_isDefault_unique",[90m
[31m+                 "uniqueType": undefined,[90m
[31m+               },[90m
[31m+               "isSystem": PgBoolean {[90m
[31m+                 "columnType": "PgBoolean",[90m
[31m+                 "config": {[90m
[31m+                   "columnType": "PgBoolean",[90m
[31m+                   "dataType": "boolean",[90m
[31m+                   "default": false,[90m
[31m+                   "generated": undefined,[90m
[31m+                   "hasDefault": true,[90m
[31m+                   "isUnique": false,[90m
[31m+                   "keyAsName": false,[90m
[31m+                   "name": "isSystem",[90m
[31m+                   "notNull": true,[90m
[31m+                   "primaryKey": false,[90m
[31m+                   "uniqueName": "roles_isSystem_unique",[90m
[31m+                   "uniqueType": undefined,[90m
[31m+                 },[90m
[31m+                 "dataType": "boolean",[90m
[31m+                 "default": false,[90m
[31m+                 "defaultFn": undefined,[90m
[31m+                 "enumValues": undefined,[90m
[31m+                 "generated": undefined,[90m
[31m+                 "generatedIdentity": undefined,[90m
[31m+                 "hasDefault": true,[90m
[31m+                 "isUnique": false,[90m
[31m+                 "keyAsName": false,[90m
[31m+                 "name": "isSystem",[90m
[31m+                 "notNull": true,[90m
[31m+                 "onUpdateFn": undefined,[90m
[31m+                 "primary": false,[90m
[31m+                 "table": [Circular],[90m
[31m+                 "uniqueName": "roles_isSystem_unique",[90m
[31m+                 "uniqueType": undefined,[90m
[31m+               },[90m
[31m+               "name": PgText {[90m
[31m+                 "columnType": "PgText",[90m
[31m+                 "config": {[90m
[31m+                   "columnType": "PgText",[90m
[31m+                   "dataType": "string",[90m
[31m+                   "default": undefined,[90m
[31m+                   "enumValues": undefined,[90m
[31m+                   "generated": undefined,[90m
[31m+                   "hasDefault": false,[90m
[31m+                   "isUnique": false,[90m
[31m+                   "keyAsName": false,[90m
[31m+                   "name": "name",[90m
[31m+                   "notNull": true,[90m
[31m+                   "primaryKey": false,[90m
[31m+                   "uniqueName": "roles_name_unique",[90m
[31m+                   "uniqueType": undefined,[90m
[31m+                 },[90m
[31m+                 "dataType": "string",[90m
[31m+                 "default": undefined,[90m
[31m+                 "defaultFn": undefined,[90m
[31m+                 "enumValues": undefined,[90m
[31m+                 "generated": undefined,[90m
[31m+                 "generatedIdentity": undefined,[90m
[31m+                 "hasDefault": false,[90m
[31m+                 "isUnique": false,[90m
[31m+                 "keyAsName": false,[90m
[31m+                 "name": "name",[90m
[31m+                 "notNull": true,[90m
[31m+                 "onUpdateFn": undefined,[90m
[31m+                 "primary": false,[90m
[31m+                 "table": [Circular],[90m
[31m+                 "uniqueName": "roles_name_unique",[90m
[31m+                 "uniqueType": undefined,[90m
[31m+               },[90m
[31m+               "organizationId": PgText {[90m
[31m+                 "columnType": "PgText",[90m
[31m+                 "config": {[90m
[31m+                   "columnType": "PgText",[90m
[31m+                   "dataType": "string",[90m
[31m+                   "default": undefined,[90m
[31m+                   "enumValues": undefined,[90m
[31m+                   "generated": undefined,[90m
[31m+                   "hasDefault": false,[90m
[31m+                   "isUnique": false,[90m
[31m+                   "keyAsName": false,[90m
[31m+                   "name": "organizationId",[90m
[31m+                   "notNull": true,[90m
[31m+                   "primaryKey": false,[90m
[31m+                   "uniqueName": "roles_organizationId_unique",[90m
[31m+                   "uniqueType": undefined,[90m
[31m+                 },[90m
[31m+                 "dataType": "string",[90m
[31m+                 "default": undefined,[90m
[31m+                 "defaultFn": undefined,[90m
[31m+                 "enumValues": undefined,[90m
[31m+                 "generated": undefined,[90m
[31m+                 "generatedIdentity": undefined,[90m
[31m+                 "hasDefault": false,[90m
[31m+                 "isUnique": false,[90m
[31m+                 "keyAsName": false,[90m
[31m+                 "name": "organizationId",[90m
[31m+                 "notNull": true,[90m
[31m+                 "onUpdateFn": undefined,[90m
[31m+                 "primary": false,[90m
[31m+                 "table": [Circular],[90m
[31m+                 "uniqueName": "roles_organizationId_unique",[90m
[31m+                 "uniqueType": undefined,[90m
[31m+               },[90m
[31m+               "updatedAt": PgTimestamp {[90m
[31m+                 "columnType": "PgTimestamp",[90m
[31m+                 "config": {[90m
[31m+                   "columnType": "PgTimestamp",[90m
[31m+                   "dataType": "date",[90m
[31m+                   "default": SQL {[90m
[31m+                     "decoder": {[90m
[31m+                       "mapFromDriverValue": [Function mapFromDriverValue],[90m
[31m+                     },[90m
[31m+                     "queryChunks": [[90m
[31m+                       StringChunk {[90m
[31m+                         "value": [[90m
[31m+                           "now()",[90m
[31m+                         ],[90m
[31m+                       },[90m
[31m+                     ],[90m
[31m+                     "shouldInlineParams": false,[90m
[31m+                     "usedTables": [],[90m
[31m+                   },[90m
[31m+                   "generated": undefined,[90m
[31m+                   "hasDefault": true,[90m
[31m+                   "isUnique": false,[90m
[31m+                   "keyAsName": false,[90m
[31m+                   "name": "updatedAt",[90m
[31m+                   "notNull": true,[90m
[31m+                   "precision": undefined,[90m
[31m+                   "primaryKey": false,[90m
[31m+                   "uniqueName": "roles_updatedAt_unique",[90m
[31m+                   "uniqueType": undefined,[90m
[31m+                   "withTimezone": false,[90m
[31m+                 },[90m
[31m+                 "dataType": "date",[90m
[31m+                 "default": SQL {[90m
[31m+                   "decoder": {[90m
[31m+                     "mapFromDriverValue": [Function mapFromDriverValue],[90m
[31m+                   },[90m
[31m+                   "queryChunks": [[90m
[31m+                     StringChunk {[90m
[31m+                       "value": [[90m
[31m+                         "now()",[90m
[31m+                       ],[90m
[31m+                     },[90m
[31m+                   ],[90m
[31m+                   "shouldInlineParams": false,[90m
[31m+                   "usedTables": [],[90m
[31m+                 },[90m
[31m+                 "defaultFn": undefined,[90m
[31m+                 "enumValues": undefined,[90m
[31m+                 "generated": undefined,[90m
[31m+                 "generatedIdentity": undefined,[90m
[31m+                 "hasDefault": true,[90m
[31m+                 "isUnique": false,[90m
[31m+                 "keyAsName": false,[90m
[31m+                 "mapFromDriverValue": [Function mapFromDriverValue],[90m
[31m+                 "mapToDriverValue": [Function mapToDriverValue],[90m
[31m+                 "name": "updatedAt",[90m
[31m+                 "notNull": true,[90m
[31m+                 "onUpdateFn": undefined,[90m
[31m+                 "precision": undefined,[90m
[31m+                 "primary": false,[90m
[31m+                 "table": [Circular],[90m
[31m+                 "uniqueName": "roles_updatedAt_unique",[90m
[31m+                 "uniqueType": undefined,[90m
[31m+                 "withTimezone": false,[90m
[31m+               },[90m
[31m+               Symbol(drizzle:Name): "roles",[90m
[31m+               Symbol(drizzle:OriginalName): "roles",[90m
[31m+               Symbol(drizzle:Schema): undefined,[90m
[31m+               Symbol(drizzle:Columns): {[90m
[31m+                 "createdAt": PgTimestamp {[90m
[31m+                   "columnType": "PgTimestamp",[90m
[31m+                   "config": {[90m
[31m+                     "columnType": "PgTimestamp",[90m
[31m+                     "dataType": "date",[90m
[31m+                     "default": SQL {[90m
[31m+                       "decoder": {[90m
[31m+                         "mapFromDriverValue": [Function mapFromDriverValue],[90m
[31m+                       },[90m
[31m+                       "queryChunks": [[90m
[31m+                         StringChunk {[90m
[31m+                           "value": [[90m
[31m+                             "now()",[90m
[31m+                           ],[90m
[31m+                         },[90m
[31m+                       ],[90m
[31m+                       "shouldInlineParams": false,[90m
[31m+                       "usedTables": [],[90m
[31m+                     },[90m
[31m+                     "generated": undefined,[90m
[31m+                     "hasDefault": true,[90m
[31m+                     "isUnique": false,[90m
[31m+                     "keyAsName": false,[90m
[31m+                     "name": "createdAt",[90m
[31m+                     "notNull": true,[90m
[31m+                     "precision": undefined,[90m
[31m+                     "primaryKey": false,[90m
[31m+                     "uniqueName": "roles_createdAt_unique",[90m
[31m+                     "uniqueType": undefined,[90m
[31m+                     "withTimezone": false,[90m
[31m+                   },[90m
[31m+                   "dataType": "date",[90m
[31m+                   "default": SQL {[90m
[31m+                     "decoder": {[90m
[31m+                       "mapFromDriverValue": [Function mapFromDriverValue],[90m
[31m+                     },[90m
[31m+                     "queryChunks": [[90m
[31m+                       StringChunk {[90m
[31m+                         "value": [[90m
[31m+                           "now()",[90m
[31m+                         ],[90m
[31m+                       },[90m
[31m+                     ],[90m
[31m+                     "shouldInlineParams": false,[90m
[31m+                     "usedTables": [],[90m
[31m+                   },[90m
[31m+                   "defaultFn": undefined,[90m
[31m+                   "enumValues": undefined,[90m
[31m+                   "generated": undefined,[90m
[31m+                   "generatedIdentity": undefined,[90m
[31m+                   "hasDefault": true,[90m
[31m+                   "isUnique": false,[90m
[31m+                   "keyAsName": false,[90m
[31m+                   "mapFromDriverValue": [Function mapFromDriverValue],[90m
[31m+                   "mapToDriverValue": [Function mapToDriverValue],[90m
[31m+                   "name": "createdAt",[90m
[31m+                   "notNull": true,[90m
[31m+                   "onUpdateFn": undefined,[90m
[31m+                   "precision": undefined,[90m
[31m+                   "primary": false,[90m
[31m+                   "table": [Circular],[90m
[31m+                   "uniqueName": "roles_createdAt_unique",[90m
[31m+                   "uniqueType": undefined,[90m
[31m+                   "withTimezone": false,[90m
[31m+                 },[90m
[31m+                 "id": [Circular],[90m
[31m+                 "isDefault": PgBoolean {[90m
[31m+                   "columnType": "PgBoolean",[90m
[31m+                   "config": {[90m
[31m+                     "columnType": "PgBoolean",[90m
[31m+                     "dataType": "boolean",[90m
[31m+                     "default": false,[90m
[31m+                     "generated": undefined,[90m
[31m+                     "hasDefault": true,[90m
[31m+                     "isUnique": false,[90m
[31m+                     "keyAsName": false,[90m
[31m+                     "name": "isDefault",[90m
[31m+                     "notNull": true,[90m
[31m+                     "primaryKey": false,[90m
[31m+                     "uniqueName": "roles_isDefault_unique",[90m
[31m+                     "uniqueType": undefined,[90m
[31m+                   },[90m
[31m+                   "dataType": "boolean",[90m
[31m+                   "default": false,[90m
[31m+                   "defaultFn": undefined,[90m
[31m+                   "enumValues": undefined,[90m
[31m+                   "generated": undefined,[90m
[31m+                   "generatedIdentity": undefined,[90m
[31m+                   "hasDefault": true,[90m
[31m+                   "isUnique": false,[90m
[31m+                   "keyAsName": false,[90m
[31m+                   "name": "isDefault",[90m
[31m+                   "notNull": true,[90m
[31m+                   "onUpdateFn": undefined,[90m
[31m+                   "primary": false,[90m
[31m+                   "table": [Circular],[90m
[31m+                   "uniqueName": "roles_isDefault_unique",[90m
[31m+                   "uniqueType": undefined,[90m
[31m+                 },[90m
[31m+                 "isSystem": PgBoolean {[90m
[31m+                   "columnType": "PgBoolean",[90m
[31m+                   "config": {[90m
[31m+                     "columnType": "PgBoolean",[90m
[31m+                     "dataType": "boolean",[90m
[31m+                     "default": false,[90m
[31m+                     "generated": undefined,[90m
[31m+                     "hasDefault": true,[90m
[31m+                     "isUnique": false,[90m
[31m+                     "keyAsName": false,[90m
[31m+                     "name": "isSystem",[90m
[31m+                     "notNull": true,[90m
[31m+                     "primaryKey": false,[90m
[31m+                     "uniqueName": "roles_isSystem_unique",[90m
[31m+                     "uniqueType": undefined,[90m
[31m+                   },[90m
[31m+                   "dataType": "boolean",[90m
[31m+                   "default": false,[90m
[31m+                   "defaultFn": undefined,[90m
[31m+                   "enumValues": undefined,[90m
[31m+                   "generated": undefined,[90m
[31m+                   "generatedIdentity": undefined,[90m
[31m+                   "hasDefault": true,[90m
[31m+                   "isUnique": false,[90m
[31m+                   "keyAsName": false,[90m
[31m+                   "name": "isSystem",[90m
[31m+                   "notNull": true,[90m
[31m+                   "onUpdateFn": undefined,[90m
[31m+                   "primary": false,[90m
[31m+                   "table": [Circular],[90m
[31m+                   "uniqueName": "roles_isSystem_unique",[90m
[31m+                   "uniqueType": undefined,[90m
[31m+                 },[90m
[31m+                 "name": PgText {[90m
[31m+                   "columnType": "PgText",[90m
[31m+                   "config": {[90m
[31m+                     "columnType": "PgText",[90m
[31m+                     "dataType": "string",[90m
[31m+                     "default": undefined,[90m
[31m+                     "enumValues": undefined,[90m
[31m+                     "generated": undefined,[90m
[31m+                     "hasDefault": false,[90m
[31m+                     "isUnique": false,[90m
[31m+                     "keyAsName": false,[90m
[31m+                     "name": "name",[90m
[31m+                     "notNull": true,[90m
[31m+                     "primaryKey": false,[90m
[31m+                     "uniqueName": "roles_name_unique",[90m
[31m+                     "uniqueType": undefined,[90m
[31m+                   },[90m
[31m+                   "dataType": "string",[90m
[31m+                   "default": undefined,[90m
[31m+                   "defaultFn": undefined,[90m
[31m+                   "enumValues": undefined,[90m
[31m+                   "generated": undefined,[90m
[31m+                   "generatedIdentity": undefined,[90m
[31m+                   "hasDefault": false,[90m
[31m+                   "isUnique": false,[90m
[31m+                   "keyAsName": false,[90m
[31m+                   "name": "name",[90m
[31m+                   "notNull": true,[90m
[31m+                   "onUpdateFn": undefined,[90m
[31m+                   "primary": false,[90m
[31m+                   "table": [Circular],[90m
[31m+                   "uniqueName": "roles_name_unique",[90m
[31m+                   "uniqueType": undefined,[90m
[31m+                 },[90m
[31m+                 "organizationId": PgText {[90m
[31m+                   "columnType": "PgText",[90m
[31m+                   "config": {[90m
[31m+                     "columnType": "PgText",[90m
[31m+                     "dataType": "string",[90m
[31m+                     "default": undefined,[90m
[31m+                     "enumValues": undefined,[90m
[31m+                     "generated": undefined,[90m
[31m+                     "hasDefault": false,[90m
[31m+                     "isUnique": false,[90m
[31m+                     "keyAsName": false,[90m
[31m+                     "name": "organizationId",[90m
[31m+                     "notNull": true,[90m
[31m+                     "primaryKey": false,[90m
[31m+                     "uniqueName": "roles_organizationId_unique",[90m
[31m+                     "uniqueType": undefined,[90m
[31m+                   },[90m
[31m+                   "dataType": "string",[90m
[31m+                   "default": undefined,[90m
[31m+                   "defaultFn": undefined,[90m
[31m+                   "enumValues": undefined,[90m
[31m+                   "generated": undefined,[90m
[31m+                   "generatedIdentity": undefined,[90m
[31m+                   "hasDefault": false,[90m
[31m+                   "isUnique": false,[90m
[31m+                   "keyAsName": false,[90m
[31m+                   "name": "organizationId",[90m
[31m+                   "notNull": true,[90m
[31m+                   "onUpdateFn": undefined,[90m
[31m+                   "primary": false,[90m
[31m+                   "table": [Circular],[90m
[31m+                   "uniqueName": "roles_organizationId_unique",[90m
[31m+                   "uniqueType": undefined,[90m
[31m+                 },[90m
[31m+                 "updatedAt": PgTimestamp {[90m
[31m+                   "columnType": "PgTimestamp",[90m
[31m+                   "config": {[90m
[31m+                     "columnType": "PgTimestamp",[90m
[31m+                     "dataType": "date",[90m
[31m+                     "default": SQL {[90m
[31m+                       "decoder": {[90m
[31m+                         "mapFromDriverValue": [Function mapFromDriverValue],[90m
[31m+                       },[90m
[31m+                       "queryChunks": [[90m
[31m+                         StringChunk {[90m
[31m+                           "value": [[90m
[31m+                             "now()",[90m
[31m+                           ],[90m
[31m+                         },[90m
[31m+                       ],[90m
[31m+                       "shouldInlineParams": false,[90m
[31m+                       "usedTables": [],[90m
[31m+                     },[90m
[31m+                     "generated": undefined,[90m
[31m+                     "hasDefault": true,[90m
[31m+                     "isUnique": false,[90m
[31m+                     "keyAsName": false,[90m
[31m+                     "name": "updatedAt",[90m
[31m+                     "notNull": true,[90m
[31m+                     "precision": undefined,[90m
[31m+                     "primaryKey": false,[90m
[31m+                     "uniqueName": "roles_updatedAt_unique",[90m
[31m+                     "uniqueType": undefined,[90m
[31m+                     "withTimezone": false,[90m
[31m+                   },[90m
[31m+                   "dataType": "date",[90m
[31m+                   "default": SQL {[90m
[31m+                     "decoder": {[90m
[31m+                       "mapFromDriverValue": [Function mapFromDriverValue],[90m
[31m+                     },[90m
[31m+                     "queryChunks": [[90m
[31m+                       StringChunk {[90m
[31m+                         "value": [[90m
[31m+                           "now()",[90m
[31m+                         ],[90m
[31m+                       },[90m
[31m+                     ],[90m
[31m+                     "shouldInlineParams": false,[90m
[31m+                     "usedTables": [],[90m
[31m+                   },[90m
[31m+                   "defaultFn": undefined,[90m
[31m+                   "enumValues": undefined,[90m
[31m+                   "generated": undefined,[90m
[31m+                   "generatedIdentity": undefined,[90m
[31m+                   "hasDefault": true,[90m
[31m+                   "isUnique": false,[90m
[31m+                   "keyAsName": false,[90m
[31m+                   "mapFromDriverValue": [Function mapFromDriverValue],[90m
[31m+                   "mapToDriverValue": [Function mapToDriverValue],[90m
[31m+                   "name": "updatedAt",[90m
[31m+                   "notNull": true,[90m
[31m+                   "onUpdateFn": undefined,[90m
[31m+                   "precision": undefined,[90m
[31m+                   "primary": false,[90m
[31m+                   "table": [Circular],[90m
[31m+                   "uniqueName": "roles_updatedAt_unique",[90m
[31m+                   "uniqueType": undefined,[90m
[31m+                   "withTimezone": false,[90m
[31m+                 },[90m
[31m+               },[90m
[31m+               Symbol(drizzle:ExtraConfigColumns): {[90m
[31m+                 "createdAt": ExtraConfigColumn {[90m
[31m+                   "columnType": "PgTimestamp",[90m
[31m+                   "config": {[90m
[31m+                     "columnType": "PgTimestamp",[90m
[31m+                     "dataType": "date",[90m
[31m+                     "default": SQL {[90m
[31m+                       "decoder": {[90m
[31m+                         "mapFromDriverValue": [Function mapFromDriverValue],[90m
[31m+                       },[90m
[31m+                       "queryChunks": [[90m
[31m+                         StringChunk {[90m
[31m+                           "value": [[90m
[31m+                             "now()",[90m
[31m+                           ],[90m
[31m+                         },[90m
[31m+                       ],[90m
[31m+                       "shouldInlineParams": false,[90m
[31m+                       "usedTables": [],[90m
[31m+                     },[90m
[31m+                     "generated": undefined,[90m
[31m+                     "hasDefault": true,[90m
[31m+                     "isUnique": false,[90m
[31m+                     "keyAsName": false,[90m
[31m+                     "name": "createdAt",[90m
[31m+                     "notNull": true,[90m
[31m+                     "precision": undefined,[90m
[31m+                     "primaryKey": false,[90m
[31m+                     "uniqueName": "roles_createdAt_unique",[90m
[31m+                     "uniqueType": undefined,[90m
[31m+                     "withTimezone": false,[90m
[31m+                   },[90m
[31m+                   "dataType": "date",[90m
[31m+                   "default": SQL {[90m
[31m+                     "decoder": {[90m
[31m+                       "mapFromDriverValue": [Function mapFromDriverValue],[90m
[31m+                     },[90m
[31m+                     "queryChunks": [[90m
[31m+                       StringChunk {[90m
[31m+                         "value": [[90m
[31m+                           "now()",[90m
[31m+                         ],[90m
[31m+                       },[90m
[31m+                     ],[90m
[31m+                     "shouldInlineParams": false,[90m
[31m+                     "usedTables": [],[90m
[31m+                   },[90m
[31m+                   "defaultConfig": {[90m
[31m+                     "nulls": "last",[90m
[31m+                     "opClass": undefined,[90m
[31m+                     "order": "asc",[90m
[31m+                   },[90m
[31m+                   "defaultFn": undefined,[90m
[31m+                   "enumValues": undefined,[90m
[31m+                   "generated": undefined,[90m
[31m+                   "generatedIdentity": undefined,[90m
[31m+                   "hasDefault": true,[90m
[31m+                   "indexConfig": {[90m
[31m+                     "nulls": "last",[90m
[31m+                     "opClass": undefined,[90m
[31m+                     "order": "asc",[90m
[31m+                   },[90m
[31m+                   "isUnique": false,[90m
[31m+                   "keyAsName": false,[90m
[31m+                   "name": "createdAt",[90m
[31m+                   "notNull": true,[90m
[31m+                   "onUpdateFn": undefined,[90m
[31m+                   "primary": false,[90m
[31m+                   "table": [Circular],[90m
[31m+                   "uniqueName": "roles_createdAt_unique",[90m
[31m+                   "uniqueType": undefined,[90m
[31m+                 },[90m
[31m+                 "id": ExtraConfigColumn {[90m
[31m+                   "columnType": "PgText",[90m
[31m+                   "config": {[90m
[31m+                     "columnType": "PgText",[90m
[31m+                     "dataType": "string",[90m
[31m+                     "default": undefined,[90m
[31m+                     "enumValues": undefined,[90m
[31m+                     "generated": undefined,[90m
[31m+                     "hasDefault": false,[90m
[31m+                     "isUnique": false,[90m
[31m+                     "keyAsName": false,[90m
[31m+                     "name": "id",[90m
[31m+                     "notNull": true,[90m
[31m+                     "primaryKey": true,[90m
[31m+                     "uniqueName": "roles_id_unique",[90m
[31m+                     "uniqueType": undefined,[90m
[31m+                   },[90m
[31m+                   "dataType": "string",[90m
[31m+                   "default": undefined,[90m
[31m+                   "defaultConfig": {[90m
[31m+                     "nulls": "last",[90m
[31m+                     "opClass": undefined,[90m
[31m+                     "order": "asc",[90m
[31m+                   },[90m
[31m+                   "defaultFn": undefined,[90m
[31m+                   "enumValues": undefined,[90m
[31m+                   "generated": undefined,[90m
[31m+                   "generatedIdentity": undefined,[90m
[31m+                   "hasDefault": false,[90m
[31m+                   "indexConfig": {[90m
[31m+                     "nulls": "last",[90m
[31m+                     "opClass": undefined,[90m
[31m+                     "order": "asc",[90m
[31m+                   },[90m
[31m+                   "isUnique": false,[90m
[31m+                   "keyAsName": false,[90m
[31m+                   "name": "id",[90m
[31m+                   "notNull": true,[90m
[31m+                   "onUpdateFn": undefined,[90m
[31m+                   "primary": true,[90m
[31m+                   "table": [Circular],[90m
[31m+                   "uniqueName": "roles_id_unique",[90m
[31m+                   "uniqueType": undefined,[90m
[31m+                 },[90m
[31m+                 "isDefault": ExtraConfigColumn {[90m
[31m+                   "columnType": "PgBoolean",[90m
[31m+                   "config": {[90m
[31m+                     "columnType": "PgBoolean",[90m
[31m+                     "dataType": "boolean",[90m
[31m+                     "default": false,[90m
[31m+                     "generated": undefined,[90m
[31m+                     "hasDefault": true,[90m
[31m+                     "isUnique": false,[90m
[31m+                     "keyAsName": false,[90m
[31m+                     "name": "isDefault",[90m
[31m+                     "notNull": true,[90m
[31m+                     "primaryKey": false,[90m
[31m+                     "uniqueName": "roles_isDefault_unique",[90m
[31m+                     "uniqueType": undefined,[90m
[31m+                   },[90m
[31m+                   "dataType": "boolean",[90m
[31m+                   "default": false,[90m
[31m+                   "defaultConfig": {[90m
[31m+                     "nulls": "last",[90m
[31m+                     "opClass": undefined,[90m
[31m+                     "order": "asc",[90m
[31m+                   },[90m
[31m+                   "defaultFn": undefined,[90m
[31m+                   "enumValues": undefined,[90m
[31m+                   "generated": undefined,[90m
[31m+                   "generatedIdentity": undefined,[90m
[31m+                   "hasDefault": true,[90m
[31m+                   "indexConfig": {[90m
[31m+                     "nulls": "last",[90m
[31m+                     "opClass": undefined,[90m
[31m+                     "order": "asc",[90m
[31m+                   },[90m
[31m+                   "isUnique": false,[90m
[31m+                   "keyAsName": false,[90m
[31m+                   "name": "isDefault",[90m
[31m+                   "notNull": true,[90m
[31m+                   "onUpdateFn": undefined,[90m
[31m+                   "primary": false,[90m
[31m+                   "table": [Circular],[90m
[31m+                   "uniqueName": "roles_isDefault_unique",[90m
[31m+                   "uniqueType": undefined,[90m
[31m+                 },[90m
[31m+                 "isSystem": ExtraConfigColumn {[90m
[31m+                   "columnType": "PgBoolean",[90m
[31m+                   "config": {[90m
[31m+                     "columnType": "PgBoolean",[90m
[31m+                     "dataType": "boolean",[90m
[31m+                     "default": false,[90m
[31m+                     "generated": undefined,[90m
[31m+                     "hasDefault": true,[90m
[31m+                     "isUnique": false,[90m
[31m+                     "keyAsName": false,[90m
[31m+                     "name": "isSystem",[90m
[31m+                     "notNull": true,[90m
[31m+                     "primaryKey": false,[90m
[31m+                     "uniqueName": "roles_isSystem_unique",[90m
[31m+                     "uniqueType": undefined,[90m
[31m+                   },[90m
[31m+                   "dataType": "boolean",[90m
[31m+                   "default": false,[90m
[31m+                   "defaultConfig": {[90m
[31m+                     "nulls": "last",[90m
[31m+                     "opClass": undefined,[90m
[31m+                     "order": "asc",[90m
[31m+                   },[90m
[31m+                   "defaultFn": undefined,[90m
[31m+                   "enumValues": undefined,[90m
[31m+                   "generated": undefined,[90m
[31m+                   "generatedIdentity": undefined,[90m
[31m+                   "hasDefault": true,[90m
[31m+                   "indexConfig": {[90m
[31m+                     "nulls": "last",[90m
[31m+                     "opClass": undefined,[90m
[31m+                     "order": "asc",[90m
[31m+                   },[90m
[31m+                   "isUnique": false,[90m
[31m+                   "keyAsName": false,[90m
[31m+                   "name": "isSystem",[90m
[31m+                   "notNull": true,[90m
[31m+                   "onUpdateFn": undefined,[90m
[31m+                   "primary": false,[90m
[31m+                   "table": [Circular],[90m
[31m+                   "uniqueName": "roles_isSystem_unique",[90m
[31m+                   "uniqueType": undefined,[90m
[31m+                 },[90m
[31m+                 "name": ExtraConfigColumn {[90m
[31m+                   "columnType": "PgText",[90m
[31m+                   "config": {[90m
[31m+                     "columnType": "PgText",[90m
[31m+                     "dataType": "string",[90m
[31m+                     "default": undefined,[90m
[31m+                     "enumValues": undefined,[90m
[31m+                     "generated": undefined,[90m
[31m+                     "hasDefault": false,[90m
[31m+                     "isUnique": false,[90m
[31m+                     "keyAsName": false,[90m
[31m+                     "name": "name",[90m
[31m+                     "notNull": true,[90m
[31m+                     "primaryKey": false,[90m
[31m+                     "uniqueName": "roles_name_unique",[90m
[31m+                     "uniqueType": undefined,[90m
[31m+                   },[90m
[31m+                   "dataType": "string",[90m
[31m+                   "default": undefined,[90m
[31m+                   "defaultConfig": {[90m
[31m+                     "nulls": "last",[90m
[31m+                     "opClass": undefined,[90m
[31m+                     "order": "asc",[90m
[31m+                   },[90m
[31m+                   "defaultFn": undefined,[90m
[31m+                   "enumValues": undefined,[90m
[31m+                   "generated": undefined,[90m
[31m+                   "generatedIdentity": undefined,[90m
[31m+                   "hasDefault": false,[90m
[31m+                   "indexConfig": {[90m
[31m+                     "nulls": "last",[90m
[31m+                     "opClass": undefined,[90m
[31m+                     "order": "asc",[90m
[31m+                   },[90m
[31m+                   "isUnique": false,[90m
[31m+                   "keyAsName": false,[90m
[31m+                   "name": "name",[90m
[31m+                   "notNull": true,[90m
[31m+                   "onUpdateFn": undefined,[90m
[31m+                   "primary": false,[90m
[31m+                   "table": [Circular],[90m
[31m+                   "uniqueName": "roles_name_unique",[90m
[31m+                   "uniqueType": undefined,[90m
[31m+                 },[90m
[31m+                 "organizationId": ExtraConfigColumn {[90m
[31m+                   "columnType": "PgText",[90m
[31m+                   "config": {[90m
[31m+                     "columnType": "PgText",[90m
[31m+                     "dataType": "string",[90m
[31m+                     "default": undefined,[90m
[31m+                     "enumValues": undefined,[90m
[31m+                     "generated": undefined,[90m
[31m+                     "hasDefault": false,[90m
[31m+                     "isUnique": false,[90m
[31m+                     "keyAsName": false,[90m
[31m+                     "name": "organizationId",[90m
[31m+                     "notNull": true,[90m
[31m+                     "primaryKey": false,[90m
[31m+                     "uniqueName": "roles_organizationId_unique",[90m
[31m+                     "uniqueType": undefined,[90m
[31m+                   },[90m
[31m+                   "dataType": "string",[90m
[31m+                   "default": undefined,[90m
[31m+                   "defaultConfig": {[90m
[31m+                     "nulls": "last",[90m
[31m+                     "opClass": undefined,[90m
[31m+                     "order": "asc",[90m
[31m+                   },[90m
[31m+                   "defaultFn": undefined,[90m
[31m+                   "enumValues": undefined,[90m
[31m+                   "generated": undefined,[90m
[31m+                   "generatedIdentity": undefined,[90m
[31m+                   "hasDefault": false,[90m
[31m+                   "indexConfig": {[90m
[31m+                     "nulls": "last",[90m
[31m+                     "opClass": undefined,[90m
[31m+                     "order": "asc",[90m
[31m+                   },[90m
[31m+                   "isUnique": false,[90m
[31m+                   "keyAsName": false,[90m
[31m+                   "name": "organizationId",[90m
[31m+                   "notNull": true,[90m
[31m+                   "onUpdateFn": undefined,[90m
[31m+                   "primary": false,[90m
[31m+                   "table": [Circular],[90m
[31m+                   "uniqueName": "roles_organizationId_unique",[90m
[31m+                   "uniqueType": undefined,[90m
[31m+                 },[90m
[31m+                 "updatedAt": ExtraConfigColumn {[90m
[31m+                   "columnType": "PgTimestamp",[90m
[31m+                   "config": {[90m
[31m+                     "columnType": "PgTimestamp",[90m
[31m+                     "dataType": "date",[90m
[31m+                     "default": SQL {[90m
[31m+                       "decoder": {[90m
[31m+                         "mapFromDriverValue": [Function mapFromDriverValue],[90m
[31m+                       },[90m
[31m+                       "queryChunks": [[90m
[31m+                         StringChunk {[90m
[31m+                           "value": [[90m
[31m+                             "now()",[90m
[31m+                           ],[90m
[31m+                         },[90m
[31m+                       ],[90m
[31m+                       "shouldInlineParams": false,[90m
[31m+                       "usedTables": [],[90m
[31m+                     },[90m
[31m+                     "generated": undefined,[90m
[31m+                     "hasDefault": true,[90m
[31m+                     "isUnique": false,[90m
[31m+                     "keyAsName": false,[90m
[31m+                     "name": "updatedAt",[90m
[31m+                     "notNull": true,[90m
[31m+                     "precision": undefined,[90m
[31m+                     "primaryKey": false,[90m
[31m+                     "uniqueName": "roles_updatedAt_unique",[90m
[31m+                     "uniqueType": undefined,[90m
[31m+                     "withTimezone": false,[90m
[31m+                   },[90m
[31m+                   "dataType": "date",[90m
[31m+                   "default": SQL {[90m
[31m+                     "decoder": {[90m
[31m+                       "mapFromDriverValue": [Function mapFromDriverValue],[90m
[31m+                     },[90m
[31m+                     "queryChunks": [[90m
[31m+                       StringChunk {[90m
[31m+                         "value": [[90m
[31m+                           "now()",[90m
[31m+                         ],[90m
[31m+                       },[90m
[31m+                     ],[90m
[31m+                     "shouldInlineParams": false,[90m
[31m+                     "usedTables": [],[90m
[31m+                   },[90m
[31m+                   "defaultConfig": {[90m
[31m+                     "nulls": "last",[90m
[31m+                     "opClass": undefined,[90m
[31m+                     "order": "asc",[90m
[31m+                   },[90m
[31m+                   "defaultFn": undefined,[90m
[31m+                   "enumValues": undefined,[90m
[31m+                   "generated": undefined,[90m
[31m+                   "generatedIdentity": undefined,[90m
[31m+                   "hasDefault": true,[90m
[31m+                   "indexConfig": {[90m
[31m+                     "nulls": "last",[90m
[31m+                     "opClass": undefined,[90m
[31m+                     "order": "asc",[90m
[31m+                   },[90m
[31m+                   "isUnique": false,[90m
[31m+                   "keyAsName": false,[90m
[31m+                   "name": "updatedAt",[90m
[31m+                   "notNull": true,[90m
[31m+                   "onUpdateFn": undefined,[90m
[31m+                   "primary": false,[90m
[31m+                   "table": [Circular],[90m
[31m+                   "uniqueName": "roles_updatedAt_unique",[90m
[31m+                   "uniqueType": undefined,[90m
[31m+                 },[90m
[31m+               },[90m
[31m+               Symbol(drizzle:BaseName): "roles",[90m
[31m+               Symbol(drizzle:IsAlias): false,[90m
[31m+               Symbol(drizzle:IsDrizzleTable): true,[90m
[31m+               Symbol(drizzle:ExtraConfigBuilder): [Function anonymous],[90m
[31m+               Symbol(drizzle:PgInlineForeignKeys): [],[90m
[31m+               Symbol(drizzle:EnableRLS): false,[90m
[31m+             },[90m
[31m+             "uniqueName": "roles_id_unique",[90m
[31m+             "uniqueType": undefined,[90m
[31m+           },[90m
[31m+           "value": "mock-role-1",[90m
[31m+         },[90m
[31m+         StringChunk {[90m
[31m+           "value": [[90m
[31m+             "",[90m
[31m+           ],[90m
[31m+         },[90m
[31m+       ],[90m
[31m+       "shouldInlineParams": false,[90m
[31m+       "usedTables": [],[90m
[31m+     },[90m
[2m      "with": {[22m
[32m-       "permissions": true,[90m
[31m+       "rolePermissions": {[90m
[31m+         "with": {[90m
[31m+           "permission": {[90m
[31m+             "columns": {[90m
[31m+               "name": true,[90m
[31m+             },[90m
[31m+           },[90m
[31m+         },[90m
[31m+       },[90m
[2m      },[22m
[2m    },[22m
[2m  ][22m
[39m[90m

Number of calls: [1m1[22m
[39m
   × Permission System Core Functions - ENHANCED WITH ORGANIZATIONAL SCOPING > CRITICAL - Cross-Organizational Permission Boundaries > CRITICAL - Should enforce organizational scoping in role queries 1ms
     → expected false to be true // Object.is equality
   ✓ Permission System Core Functions - ENHANCED WITH ORGANIZATIONAL SCOPING > CRITICAL - Cross-Organizational Permission Boundaries > CRITICAL - Should prevent permission escalation across organizations 1ms
   × Permission System Core Functions - ENHANCED WITH ORGANIZATIONAL SCOPING > CRITICAL - Cross-Organizational Permission Boundaries > CRITICAL - Should validate role belongs to expected organization 0ms
     → Cannot read properties of undefined (reading 'map')
   ✓ Permission System Core Functions - ENHANCED WITH ORGANIZATIONAL SCOPING > CRITICAL - Cross-Organizational Permission Boundaries > CRITICAL - Should prevent role-based attacks across organizations 1ms
   × Permission System Core Functions - ENHANCED WITH ORGANIZATIONAL SCOPING > Permission Matrix Security Validation > should validate complete permission matrix for organizational boundaries 2ms
     → Cannot read properties of undefined (reading 'map')
   ✓ Permission System Core Functions - ENHANCED WITH ORGANIZATIONAL SCOPING > Permission System Edge Cases > should handle null/undefined membership gracefully 0ms
   × Permission System Core Functions - ENHANCED WITH ORGANIZATIONAL SCOPING > Permission System Edge Cases > should handle empty permission string 0ms
     → Cannot read properties of undefined (reading 'map')
   ✓ Permission System Core Functions - ENHANCED WITH ORGANIZATIONAL SCOPING > Permission System Edge Cases > should handle database errors gracefully 1ms
   × Permission System Core Functions - ENHANCED WITH ORGANIZATIONAL SCOPING > Permission System Edge Cases > should handle role without organizationId (legacy/system roles) 0ms
     → Cannot read properties of undefined (reading 'map')
 ❯ |node| src/server/api/routers/__tests__/issue.integration.test.ts (7 tests | 7 failed) 1313ms
   × Issue Router Integration Tests (PGlite) > Issue Creation with Real Database > should create issue with proper organizational scoping 13ms
     → Cannot read properties of undefined (reading 'referencedTable')
   × Issue Router Integration Tests (PGlite) > Issue Creation with Real Database > should enforce organizational scoping during issue creation 8ms
     → Cannot read properties of undefined (reading 'referencedTable')
   × Issue Router Integration Tests (PGlite) > Issue Querying with Complex Filters > should filter issues by search term with proper scoping 1ms
     → Cannot read properties of undefined (reading 'referencedTable')
   × Issue Router Integration Tests (PGlite) > Issue Querying with Complex Filters > should filter issues by machine with relational data 3ms
     → Cannot read properties of undefined (reading 'referencedTable')
   × Issue Router Integration Tests (PGlite) > Issue Querying with Complex Filters > should return paginated results 6ms
     → Cannot read properties of undefined (reading 'referencedTable')
   × Issue Router Integration Tests (PGlite) > Issue Assignment with Database Operations > should assign issue to user within same organization 1ms
     → Cannot read properties of undefined (reading 'referencedTable')
   × Issue Router Integration Tests (PGlite) > Issue Status Updates with Validation > should update issue status with proper validation 1ms
     → Cannot read properties of undefined (reading 'referencedTable')
stdout | src/lib/issues/__tests__/filterUtils.test.ts
[MSW] Server started

 ❯ |node| src/lib/issues/__tests__/filterUtils.test.ts (32 tests | 1 failed) 70ms
   ✓ filterUtils > getDefaultFilters > returns correct default filter values 3ms
   ✓ filterUtils > mergeFilters > merges locationId correctly 0ms
   ✓ filterUtils > mergeFilters > merges machineId correctly 0ms
   ✓ filterUtils > mergeFilters > merges statusIds array correctly 0ms
   ✓ filterUtils > mergeFilters > merges search term correctly 0ms
   ✓ filterUtils > mergeFilters > merges multiple filters correctly 0ms
   ✓ filterUtils > mergeFilters > overwrites existing filter values 0ms
   ✓ filterUtils > mergeFilters > clears filter when undefined is provided 0ms
   ✓ filterUtils > mergeFilters > handles complex filter combinations 0ms
   ✓ filterUtils > validateFilters > validates and provides defaults for empty object 0ms
   ✓ filterUtils > validateFilters > validates and sanitizes search string 0ms
   × filterUtils > validateFilters > removes empty search string 6ms
     → expected '' to be undefined
   ✓ filterUtils > validateFilters > validates statusIds array 0ms
   ✓ filterUtils > validateFilters > rejects invalid statusIds 0ms
   ✓ filterUtils > validateFilters > validates sortBy field 0ms
   ✓ filterUtils > validateFilters > rejects invalid sortBy and uses default 0ms
   ✓ filterUtils > validateFilters > validates sortOrder field 0ms
   ✓ filterUtils > validateFilters > rejects invalid sortOrder and uses default 0ms
   ✓ filterUtils > hasActiveFilters > returns false for default filters 0ms
   ✓ filterUtils > hasActiveFilters > returns true when locationId is set 0ms
   ✓ filterUtils > hasActiveFilters > returns true when machineId is set 0ms
   ✓ filterUtils > hasActiveFilters > returns true when statusIds has values 0ms
   ✓ filterUtils > hasActiveFilters > returns false when statusIds is empty array 0ms
   ✓ filterUtils > hasActiveFilters > returns true when search is set 0ms
   ✓ filterUtils > hasActiveFilters > returns true when assigneeId is set 0ms
   ✓ filterUtils > clearAllFilters > returns default filters 0ms
   ✓ filterUtils > getFilterSummary > returns empty array for default filters 0ms
   ✓ filterUtils > getFilterSummary > includes location in summary 0ms
   ✓ filterUtils > getFilterSummary > includes machine in summary 0ms
   ✓ filterUtils > getFilterSummary > includes status count in summary 0ms
   ✓ filterUtils > getFilterSummary > includes search in summary 0ms
   ✓ filterUtils > getFilterSummary > includes multiple filters in summary 1ms
 ❯ |integration| src/integration-tests/machine.location.integration.test.ts (17 tests | 17 failed) 1219ms
   × Machine Location Router Integration (PGlite) > moveToLocation > should successfully move machine to a different location 1108ms
     → User not found in seeded data: test-user-tim
   × Machine Location Router Integration (PGlite) > moveToLocation > should handle moves within the same location gracefully 7ms
     → User not found in seeded data: test-user-tim
   × Machine Location Router Integration (PGlite) > moveToLocation > should move multiple machines between locations correctly 11ms
     → User not found in seeded data: test-user-tim
   × Machine Location Router Integration (PGlite) > moveToLocation > should enforce organizational scoping for machine validation 6ms
     → User not found in seeded data: test-user-tim
   × Machine Location Router Integration (PGlite) > moveToLocation > should enforce organizational scoping for location validation 8ms
     → User not found in seeded data: test-user-tim
   × Machine Location Router Integration (PGlite) > moveToLocation > should handle non-existent machine IDs 6ms
     → User not found in seeded data: test-user-tim
   × Machine Location Router Integration (PGlite) > moveToLocation > should handle non-existent location IDs 8ms
     → User not found in seeded data: test-user-tim
   × Machine Location Router Integration (PGlite) > moveToLocation > should return complete machine data with all relationships 10ms
     → User not found in seeded data: test-user-tim
   × Machine Location Router Integration (PGlite) > moveToLocation > should preserve machine properties during location move 3ms
     → User not found in seeded data: test-user-tim
   × Machine Location Router Integration (PGlite) > Multi-Tenant Security Verification > should maintain complete isolation between organizations 3ms
     → User not found in seeded data: test-user-tim
   × Machine Location Router Integration (PGlite) > Database Schema and Query Validation > should properly handle machine relationships in response 3ms
     → User not found in seeded data: test-user-tim
   × Machine Location Router Integration (PGlite) > Database Schema and Query Validation > should handle database constraints and foreign keys correctly 2ms
     → User not found in seeded data: test-user-tim
   × Machine Location Router Integration (PGlite) > Database Schema and Query Validation > should handle concurrent location moves correctly 2ms
     → User not found in seeded data: test-user-tim
   × Machine Location Router Integration (PGlite) > Error Handling and Edge Cases > should return TRPCError instances with proper error codes 2ms
     → User not found in seeded data: test-user-tim
   × Machine Location Router Integration (PGlite) > Error Handling and Edge Cases > should handle invalid location ID with proper error 3ms
     → User not found in seeded data: test-user-tim
   × Machine Location Router Integration (PGlite) > Error Handling and Edge Cases > should handle empty string IDs gracefully 2ms
     → User not found in seeded data: test-user-tim
   × Machine Location Router Integration (PGlite) > Error Handling and Edge Cases > should handle malformed input gracefully 3ms
     → User not found in seeded data: test-user-tim
stdout | __vite_ssr_import_0__.test.extend.workerDb.scope (/var/home/froeht/Code/PinPoint/src/test/helpers/worker-scoped-db.ts:59:15)
[Worker 28] Cleaning up PGlite instance

stdout | src/server/db/__tests__/drizzle-singleton.test.ts > Drizzle Client Singleton Pattern > Worker-Scoped Pattern Integration > Singleton Compatibility with Worker-Scoped Databases > should work correctly with worker-scoped PGlite databases
RLS disable skipped for organizations: DrizzleQueryError: Failed query: ALTER TABLE organizations DISABLE ROW LEVEL SECURITY
params: 
    at PglitePreparedQuery.queryWithCache [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4msrc[24m/pg-core/session.ts:73:11[90m)[39m
    at configureForBusinessLogicTesting [90m(/var/home/froeht/Code/PinPoint/[39msrc/test/helpers/pglite-test-setup.ts:167:9[90m)[39m
    at createTestDatabase [90m(/var/home/froeht/Code/PinPoint/[39msrc/test/helpers/pglite-test-setup.ts:107:3[90m)[39m
    at createSeededTestDatabase [90m(/var/home/froeht/Code/PinPoint/[39msrc/test/helpers/pglite-test-setup.ts:251:14[90m)[39m
    at __vite_ssr_import_0__.test.extend.workerDb.scope [90m(/var/home/froeht/Code/PinPoint/[39msrc/test/helpers/worker-scoped-db.ts:53:22[90m)[39m {
  query: [32m'ALTER TABLE organizations DISABLE ROW LEVEL SECURITY'[39m,
  params: [],
  cause: error: relation "organizations" does not exist
      at ye.Ve [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pg-protocol/src/parser.ts:432:11[90m)[39m
      at ye.nt [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pg-protocol/src/parser.ts:210:16[90m)[39m
      at ye.parse [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pg-protocol/src/parser.ts:102:25[90m)[39m
      at ue.execProtocol [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pglite/src/pglite.ts:700:26[90m)[39m
      at ue.y [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pglite/src/base.ts:141:12[90m)[39m
      at [90mfile:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pglite/src/base.ts:278:13 {
    length: [33m111[39m,
    severity: [32m'ERROR'[39m,
    code: [32m'42P01'[39m,
    detail: [90mundefined[39m,
    hint: [90mundefined[39m,
    position: [90mundefined[39m,
    internalPosition: [90mundefined[39m,
    internalQuery: [90mundefined[39m,
    where: [90mundefined[39m,
    schema: [90mundefined[39m,
    table: [90mundefined[39m,
    column: [90mundefined[39m,
    dataType: [90mundefined[39m,
    constraint: [90mundefined[39m,
    file: [32m'namespace.c'[39m,
    line: [32m'639'[39m,
    routine: [32m'RangeVarGetRelidExtended'[39m,
    query: [32m'ALTER TABLE organizations DISABLE ROW LEVEL SECURITY'[39m,
    params: [],
    queryOptions: { rowMode: [32m'object'[39m, parsers: [36m[Object][39m }
  }
}

stdout | src/server/db/__tests__/drizzle-singleton.test.ts > Drizzle Client Singleton Pattern > Worker-Scoped Pattern Integration > Singleton Compatibility with Worker-Scoped Databases > should work correctly with worker-scoped PGlite databases
RLS disable skipped for users: DrizzleQueryError: Failed query: ALTER TABLE users DISABLE ROW LEVEL SECURITY
params: 
    at PglitePreparedQuery.queryWithCache [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4msrc[24m/pg-core/session.ts:73:11[90m)[39m
    at configureForBusinessLogicTesting [90m(/var/home/froeht/Code/PinPoint/[39msrc/test/helpers/pglite-test-setup.ts:167:9[90m)[39m
    at createTestDatabase [90m(/var/home/froeht/Code/PinPoint/[39msrc/test/helpers/pglite-test-setup.ts:107:3[90m)[39m
    at createSeededTestDatabase [90m(/var/home/froeht/Code/PinPoint/[39msrc/test/helpers/pglite-test-setup.ts:251:14[90m)[39m
    at __vite_ssr_import_0__.test.extend.workerDb.scope [90m(/var/home/froeht/Code/PinPoint/[39msrc/test/helpers/worker-scoped-db.ts:53:22[90m)[39m {
  query: [32m'ALTER TABLE users DISABLE ROW LEVEL SECURITY'[39m,
  params: [],
  cause: error: relation "users" does not exist
      at ye.Ve [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pg-protocol/src/parser.ts:432:11[90m)[39m
      at ye.nt [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pg-protocol/src/parser.ts:210:16[90m)[39m
      at ye.parse [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pg-protocol/src/parser.ts:102:25[90m)[39m
      at ue.execProtocol [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pglite/src/pglite.ts:700:26[90m)[39m
      at ue.y [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pglite/src/base.ts:141:12[90m)[39m
      at [90mfile:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pglite/src/base.ts:278:13 {
    length: [33m103[39m,
    severity: [32m'ERROR'[39m,
    code: [32m'42P01'[39m,
    detail: [90mundefined[39m,
    hint: [90mundefined[39m,
    position: [90mundefined[39m,
    internalPosition: [90mundefined[39m,
    internalQuery: [90mundefined[39m,
    where: [90mundefined[39m,
    schema: [90mundefined[39m,
    table: [90mundefined[39m,
    column: [90mundefined[39m,
    dataType: [90mundefined[39m,
    constraint: [90mundefined[39m,
    file: [32m'namespace.c'[39m,
    line: [32m'639'[39m,
    routine: [32m'RangeVarGetRelidExtended'[39m,
    query: [32m'ALTER TABLE users DISABLE ROW LEVEL SECURITY'[39m,
    params: [],
    queryOptions: { rowMode: [32m'object'[39m, parsers: [36m[Object][39m }
  }
}

stdout | src/server/db/__tests__/drizzle-singleton.test.ts > Drizzle Client Singleton Pattern > Worker-Scoped Pattern Integration > Singleton Compatibility with Worker-Scoped Databases > should work correctly with worker-scoped PGlite databases
RLS disable skipped for memberships: DrizzleQueryError: Failed query: ALTER TABLE memberships DISABLE ROW LEVEL SECURITY
params: 
    at PglitePreparedQuery.queryWithCache [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4msrc[24m/pg-core/session.ts:73:11[90m)[39m
    at configureForBusinessLogicTesting [90m(/var/home/froeht/Code/PinPoint/[39msrc/test/helpers/pglite-test-setup.ts:167:9[90m)[39m
    at createTestDatabase [90m(/var/home/froeht/Code/PinPoint/[39msrc/test/helpers/pglite-test-setup.ts:107:3[90m)[39m
    at createSeededTestDatabase [90m(/var/home/froeht/Code/PinPoint/[39msrc/test/helpers/pglite-test-setup.ts:251:14[90m)[39m
    at __vite_ssr_import_0__.test.extend.workerDb.scope [90m(/var/home/froeht/Code/PinPoint/[39msrc/test/helpers/worker-scoped-db.ts:53:22[90m)[39m {
  query: [32m'ALTER TABLE memberships DISABLE ROW LEVEL SECURITY'[39m,
  params: [],
  cause: error: relation "memberships" does not exist
      at ye.Ve [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pg-protocol/src/parser.ts:432:11[90m)[39m
      at ye.nt [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pg-protocol/src/parser.ts:210:16[90m)[39m
      at ye.parse [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pg-protocol/src/parser.ts:102:25[90m)[39m
      at ue.execProtocol [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pglite/src/pglite.ts:700:26[90m)[39m
      at ue.y [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pglite/src/base.ts:141:12[90m)[39m
      at [90mfile:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pglite/src/base.ts:278:13 {
    length: [33m109[39m,
    severity: [32m'ERROR'[39m,
    code: [32m'42P01'[39m,
    detail: [90mundefined[39m,
    hint: [90mundefined[39m,
    position: [90mundefined[39m,
    internalPosition: [90mundefined[39m,
    internalQuery: [90mundefined[39m,
    where: [90mundefined[39m,
    schema: [90mundefined[39m,
    table: [90mundefined[39m,
    column: [90mundefined[39m,
    dataType: [90mundefined[39m,
    constraint: [90mundefined[39m,
    file: [32m'namespace.c'[39m,
    line: [32m'639'[39m,
    routine: [32m'RangeVarGetRelidExtended'[39m,
    query: [32m'ALTER TABLE memberships DISABLE ROW LEVEL SECURITY'[39m,
    params: [],
    queryOptions: { rowMode: [32m'object'[39m, parsers: [36m[Object][39m }
  }
}

stdout | src/server/db/__tests__/drizzle-singleton.test.ts > Drizzle Client Singleton Pattern > Worker-Scoped Pattern Integration > Singleton Compatibility with Worker-Scoped Databases > should work correctly with worker-scoped PGlite databases
RLS disable skipped for roles: DrizzleQueryError: Failed query: ALTER TABLE roles DISABLE ROW LEVEL SECURITY
params: 
    at PglitePreparedQuery.queryWithCache [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4msrc[24m/pg-core/session.ts:73:11[90m)[39m
    at configureForBusinessLogicTesting [90m(/var/home/froeht/Code/PinPoint/[39msrc/test/helpers/pglite-test-setup.ts:167:9[90m)[39m
    at createTestDatabase [90m(/var/home/froeht/Code/PinPoint/[39msrc/test/helpers/pglite-test-setup.ts:107:3[90m)[39m
    at createSeededTestDatabase [90m(/var/home/froeht/Code/PinPoint/[39msrc/test/helpers/pglite-test-setup.ts:251:14[90m)[39m
    at __vite_ssr_import_0__.test.extend.workerDb.scope [90m(/var/home/froeht/Code/PinPoint/[39msrc/test/helpers/worker-scoped-db.ts:53:22[90m)[39m {
  query: [32m'ALTER TABLE roles DISABLE ROW LEVEL SECURITY'[39m,
  params: [],
  cause: error: relation "roles" does not exist
      at ye.Ve [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pg-protocol/src/parser.ts:432:11[90m)[39m
      at ye.nt [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pg-protocol/src/parser.ts:210:16[90m)[39m
      at ye.parse [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pg-protocol/src/parser.ts:102:25[90m)[39m
      at ue.execProtocol [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pglite/src/pglite.ts:700:26[90m)[39m
      at ue.y [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pglite/src/base.ts:141:12[90m)[39m
      at [90mfile:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pglite/src/base.ts:278:13 {
    length: [33m103[39m,
    severity: [32m'ERROR'[39m,
    code: [32m'42P01'[39m,
    detail: [90mundefined[39m,
    hint: [90mundefined[39m,
    position: [90mundefined[39m,
    internalPosition: [90mundefined[39m,
    internalQuery: [90mundefined[39m,
    where: [90mundefined[39m,
    schema: [90mundefined[39m,
    table: [90mundefined[39m,
    column: [90mundefined[39m,
    dataType: [90mundefined[39m,
    constraint: [90mundefined[39m,
    file: [32m'namespace.c'[39m,
    line: [32m'639'[39m,
    routine: [32m'RangeVarGetRelidExtended'[39m,
    query: [32m'ALTER TABLE roles DISABLE ROW LEVEL SECURITY'[39m,
    params: [],
    queryOptions: { rowMode: [32m'object'[39m, parsers: [36m[Object][39m }
  }
}

stdout | src/server/db/__tests__/drizzle-singleton.test.ts > Drizzle Client Singleton Pattern > Worker-Scoped Pattern Integration > Singleton Compatibility with Worker-Scoped Databases > should work correctly with worker-scoped PGlite databases
RLS disable skipped for role_permissions: DrizzleQueryError: Failed query: ALTER TABLE role_permissions DISABLE ROW LEVEL SECURITY
params: 
    at PglitePreparedQuery.queryWithCache [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4msrc[24m/pg-core/session.ts:73:11[90m)[39m
    at configureForBusinessLogicTesting [90m(/var/home/froeht/Code/PinPoint/[39msrc/test/helpers/pglite-test-setup.ts:167:9[90m)[39m
    at createTestDatabase [90m(/var/home/froeht/Code/PinPoint/[39msrc/test/helpers/pglite-test-setup.ts:107:3[90m)[39m
    at createSeededTestDatabase [90m(/var/home/froeht/Code/PinPoint/[39msrc/test/helpers/pglite-test-setup.ts:251:14[90m)[39m
    at __vite_ssr_import_0__.test.extend.workerDb.scope [90m(/var/home/froeht/Code/PinPoint/[39msrc/test/helpers/worker-scoped-db.ts:53:22[90m)[39m {
  query: [32m'ALTER TABLE role_permissions DISABLE ROW LEVEL SECURITY'[39m,
  params: [],
  cause: error: relation "role_permissions" does not exist
      at ye.Ve [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pg-protocol/src/parser.ts:432:11[90m)[39m
      at ye.nt [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pg-protocol/src/parser.ts:210:16[90m)[39m
      at ye.parse [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pg-protocol/src/parser.ts:102:25[90m)[39m
      at ue.execProtocol [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pglite/src/pglite.ts:700:26[90m)[39m
      at ue.y [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pglite/src/base.ts:141:12[90m)[39m
      at [90mfile:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pglite/src/base.ts:278:13 {
    length: [33m114[39m,
    severity: [32m'ERROR'[39m,
    code: [32m'42P01'[39m,
    detail: [90mundefined[39m,
    hint: [90mundefined[39m,
    position: [90mundefined[39m,
    internalPosition: [90mundefined[39m,
    internalQuery: [90mundefined[39m,
    where: [90mundefined[39m,
    schema: [90mundefined[39m,
    table: [90mundefined[39m,
    column: [90mundefined[39m,
    dataType: [90mundefined[39m,
    constraint: [90mundefined[39m,
    file: [32m'namespace.c'[39m,
    line: [32m'639'[39m,
    routine: [32m'RangeVarGetRelidExtended'[39m,
    query: [32m'ALTER TABLE role_permissions DISABLE ROW LEVEL SECURITY'[39m,
    params: [],
    queryOptions: { rowMode: [32m'object'[39m, parsers: [36m[Object][39m }
  }
}

stdout | src/server/db/__tests__/drizzle-singleton.test.ts > Drizzle Client Singleton Pattern > Worker-Scoped Pattern Integration > Singleton Compatibility with Worker-Scoped Databases > should work correctly with worker-scoped PGlite databases
RLS disable skipped for locations: DrizzleQueryError: Failed query: ALTER TABLE locations DISABLE ROW LEVEL SECURITY
params: 
    at PglitePreparedQuery.queryWithCache [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4msrc[24m/pg-core/session.ts:73:11[90m)[39m
    at configureForBusinessLogicTesting [90m(/var/home/froeht/Code/PinPoint/[39msrc/test/helpers/pglite-test-setup.ts:167:9[90m)[39m
    at createTestDatabase [90m(/var/home/froeht/Code/PinPoint/[39msrc/test/helpers/pglite-test-setup.ts:107:3[90m)[39m
    at createSeededTestDatabase [90m(/var/home/froeht/Code/PinPoint/[39msrc/test/helpers/pglite-test-setup.ts:251:14[90m)[39m
    at __vite_ssr_import_0__.test.extend.workerDb.scope [90m(/var/home/froeht/Code/PinPoint/[39msrc/test/helpers/worker-scoped-db.ts:53:22[90m)[39m {
  query: [32m'ALTER TABLE locations DISABLE ROW LEVEL SECURITY'[39m,
  params: [],
  cause: error: relation "locations" does not exist
      at ye.Ve [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pg-protocol/src/parser.ts:432:11[90m)[39m
      at ye.nt [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pg-protocol/src/parser.ts:210:16[90m)[39m
      at ye.parse [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pg-protocol/src/parser.ts:102:25[90m)[39m
      at ue.execProtocol [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pglite/src/pglite.ts:700:26[90m)[39m
      at ue.y [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pglite/src/base.ts:141:12[90m)[39m
      at [90mfile:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pglite/src/base.ts:278:13 {
    length: [33m107[39m,
    severity: [32m'ERROR'[39m,
    code: [32m'42P01'[39m,
    detail: [90mundefined[39m,
    hint: [90mundefined[39m,
    position: [90mundefined[39m,
    internalPosition: [90mundefined[39m,
    internalQuery: [90mundefined[39m,
    where: [90mundefined[39m,
    schema: [90mundefined[39m,
    table: [90mundefined[39m,
    column: [90mundefined[39m,
    dataType: [90mundefined[39m,
    constraint: [90mundefined[39m,
    file: [32m'namespace.c'[39m,
    line: [32m'639'[39m,
    routine: [32m'RangeVarGetRelidExtended'[39m,
    query: [32m'ALTER TABLE locations DISABLE ROW LEVEL SECURITY'[39m,
    params: [],
    queryOptions: { rowMode: [32m'object'[39m, parsers: [36m[Object][39m }
  }
}

stdout | src/server/db/__tests__/drizzle-singleton.test.ts > Drizzle Client Singleton Pattern > Worker-Scoped Pattern Integration > Singleton Compatibility with Worker-Scoped Databases > should work correctly with worker-scoped PGlite databases
RLS disable skipped for machines: DrizzleQueryError: Failed query: ALTER TABLE machines DISABLE ROW LEVEL SECURITY
params: 
    at PglitePreparedQuery.queryWithCache [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4msrc[24m/pg-core/session.ts:73:11[90m)[39m
    at configureForBusinessLogicTesting [90m(/var/home/froeht/Code/PinPoint/[39msrc/test/helpers/pglite-test-setup.ts:167:9[90m)[39m
    at createTestDatabase [90m(/var/home/froeht/Code/PinPoint/[39msrc/test/helpers/pglite-test-setup.ts:107:3[90m)[39m
    at createSeededTestDatabase [90m(/var/home/froeht/Code/PinPoint/[39msrc/test/helpers/pglite-test-setup.ts:251:14[90m)[39m
    at __vite_ssr_import_0__.test.extend.workerDb.scope [90m(/var/home/froeht/Code/PinPoint/[39msrc/test/helpers/worker-scoped-db.ts:53:22[90m)[39m {
  query: [32m'ALTER TABLE machines DISABLE ROW LEVEL SECURITY'[39m,
  params: [],
  cause: error: relation "machines" does not exist
      at ye.Ve [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pg-protocol/src/parser.ts:432:11[90m)[39m
      at ye.nt [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pg-protocol/src/parser.ts:210:16[90m)[39m
      at ye.parse [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pg-protocol/src/parser.ts:102:25[90m)[39m
      at ue.execProtocol [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pglite/src/pglite.ts:700:26[90m)[39m
      at ue.y [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pglite/src/base.ts:141:12[90m)[39m
      at [90mfile:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pglite/src/base.ts:278:13 {
    length: [33m106[39m,
    severity: [32m'ERROR'[39m,
    code: [32m'42P01'[39m,
    detail: [90mundefined[39m,
    hint: [90mundefined[39m,
    position: [90mundefined[39m,
    internalPosition: [90mundefined[39m,
    internalQuery: [90mundefined[39m,
    where: [90mundefined[39m,
    schema: [90mundefined[39m,
    table: [90mundefined[39m,
    column: [90mundefined[39m,
    dataType: [90mundefined[39m,
    constraint: [90mundefined[39m,
    file: [32m'namespace.c'[39m,
    line: [32m'639'[39m,
    routine: [32m'RangeVarGetRelidExtended'[39m,
    query: [32m'ALTER TABLE machines DISABLE ROW LEVEL SECURITY'[39m,
    params: [],
    queryOptions: { rowMode: [32m'object'[39m, parsers: [36m[Object][39m }
  }
}

stdout | src/server/services/__tests__/notificationService.unit.test.ts
[MSW] Server started

stdout | src/server/db/__tests__/drizzle-singleton.test.ts > Drizzle Client Singleton Pattern > Worker-Scoped Pattern Integration > Singleton Compatibility with Worker-Scoped Databases > should work correctly with worker-scoped PGlite databases
RLS disable skipped for models: DrizzleQueryError: Failed query: ALTER TABLE models DISABLE ROW LEVEL SECURITY
params: 
    at PglitePreparedQuery.queryWithCache [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4msrc[24m/pg-core/session.ts:73:11[90m)[39m
    at configureForBusinessLogicTesting [90m(/var/home/froeht/Code/PinPoint/[39msrc/test/helpers/pglite-test-setup.ts:167:9[90m)[39m
    at createTestDatabase [90m(/var/home/froeht/Code/PinPoint/[39msrc/test/helpers/pglite-test-setup.ts:107:3[90m)[39m
    at createSeededTestDatabase [90m(/var/home/froeht/Code/PinPoint/[39msrc/test/helpers/pglite-test-setup.ts:251:14[90m)[39m
    at __vite_ssr_import_0__.test.extend.workerDb.scope [90m(/var/home/froeht/Code/PinPoint/[39msrc/test/helpers/worker-scoped-db.ts:53:22[90m)[39m {
  query: [32m'ALTER TABLE models DISABLE ROW LEVEL SECURITY'[39m,
  params: [],
  cause: error: relation "models" does not exist
      at ye.Ve [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pg-protocol/src/parser.ts:432:11[90m)[39m
      at ye.nt [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pg-protocol/src/parser.ts:210:16[90m)[39m
      at ye.parse [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pg-protocol/src/parser.ts:102:25[90m)[39m
      at ue.execProtocol [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pglite/src/pglite.ts:700:26[90m)[39m
      at ue.y [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pglite/src/base.ts:141:12[90m)[39m
      at [90mfile:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pglite/src/base.ts:278:13 {
    length: [33m104[39m,
    severity: [32m'ERROR'[39m,
    code: [32m'42P01'[39m,
    detail: [90mundefined[39m,
    hint: [90mundefined[39m,
    position: [90mundefined[39m,
    internalPosition: [90mundefined[39m,
    internalQuery: [90mundefined[39m,
    where: [90mundefined[39m,
    schema: [90mundefined[39m,
    table: [90mundefined[39m,
    column: [90mundefined[39m,
    dataType: [90mundefined[39m,
    constraint: [90mundefined[39m,
    file: [32m'namespace.c'[39m,
    line: [32m'639'[39m,
    routine: [32m'RangeVarGetRelidExtended'[39m,
    query: [32m'ALTER TABLE models DISABLE ROW LEVEL SECURITY'[39m,
    params: [],
    queryOptions: { rowMode: [32m'object'[39m, parsers: [36m[Object][39m }
  }
}

stdout | src/server/db/__tests__/drizzle-singleton.test.ts > Drizzle Client Singleton Pattern > Worker-Scoped Pattern Integration > Singleton Compatibility with Worker-Scoped Databases > should work correctly with worker-scoped PGlite databases
RLS disable skipped for issues: DrizzleQueryError: Failed query: ALTER TABLE issues DISABLE ROW LEVEL SECURITY
params: 
    at PglitePreparedQuery.queryWithCache [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4msrc[24m/pg-core/session.ts:73:11[90m)[39m
    at configureForBusinessLogicTesting [90m(/var/home/froeht/Code/PinPoint/[39msrc/test/helpers/pglite-test-setup.ts:167:9[90m)[39m
    at createTestDatabase [90m(/var/home/froeht/Code/PinPoint/[39msrc/test/helpers/pglite-test-setup.ts:107:3[90m)[39m
    at createSeededTestDatabase [90m(/var/home/froeht/Code/PinPoint/[39msrc/test/helpers/pglite-test-setup.ts:251:14[90m)[39m
    at __vite_ssr_import_0__.test.extend.workerDb.scope [90m(/var/home/froeht/Code/PinPoint/[39msrc/test/helpers/worker-scoped-db.ts:53:22[90m)[39m {
  query: [32m'ALTER TABLE issues DISABLE ROW LEVEL SECURITY'[39m,
  params: [],
  cause: error: relation "issues" does not exist
      at ye.Ve [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pg-protocol/src/parser.ts:432:11[90m)[39m
      at ye.nt [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pg-protocol/src/parser.ts:210:16[90m)[39m
      at ye.parse [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pg-protocol/src/parser.ts:102:25[90m)[39m
      at ue.execProtocol [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pglite/src/pglite.ts:700:26[90m)[39m
      at ue.y [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pglite/src/base.ts:141:12[90m)[39m
      at [90mfile:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pglite/src/base.ts:278:13 {
    length: [33m104[39m,
    severity: [32m'ERROR'[39m,
    code: [32m'42P01'[39m,
    detail: [90mundefined[39m,
    hint: [90mundefined[39m,
    position: [90mundefined[39m,
    internalPosition: [90mundefined[39m,
    internalQuery: [90mundefined[39m,
    where: [90mundefined[39m,
    schema: [90mundefined[39m,
    table: [90mundefined[39m,
    column: [90mundefined[39m,
    dataType: [90mundefined[39m,
    constraint: [90mundefined[39m,
    file: [32m'namespace.c'[39m,
    line: [32m'639'[39m,
    routine: [32m'RangeVarGetRelidExtended'[39m,
    query: [32m'ALTER TABLE issues DISABLE ROW LEVEL SECURITY'[39m,
    params: [],
    queryOptions: { rowMode: [32m'object'[39m, parsers: [36m[Object][39m }
  }
}

stdout | src/server/db/__tests__/drizzle-singleton.test.ts > Drizzle Client Singleton Pattern > Worker-Scoped Pattern Integration > Singleton Compatibility with Worker-Scoped Databases > should work correctly with worker-scoped PGlite databases
RLS disable skipped for issue_statuses: DrizzleQueryError: Failed query: ALTER TABLE issue_statuses DISABLE ROW LEVEL SECURITY
params: 
    at PglitePreparedQuery.queryWithCache [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4msrc[24m/pg-core/session.ts:73:11[90m)[39m
    at configureForBusinessLogicTesting [90m(/var/home/froeht/Code/PinPoint/[39msrc/test/helpers/pglite-test-setup.ts:167:9[90m)[39m
    at createTestDatabase [90m(/var/home/froeht/Code/PinPoint/[39msrc/test/helpers/pglite-test-setup.ts:107:3[90m)[39m
    at createSeededTestDatabase [90m(/var/home/froeht/Code/PinPoint/[39msrc/test/helpers/pglite-test-setup.ts:251:14[90m)[39m
    at __vite_ssr_import_0__.test.extend.workerDb.scope [90m(/var/home/froeht/Code/PinPoint/[39msrc/test/helpers/worker-scoped-db.ts:53:22[90m)[39m {
  query: [32m'ALTER TABLE issue_statuses DISABLE ROW LEVEL SECURITY'[39m,
  params: [],
  cause: error: relation "issue_statuses" does not exist
      at ye.Ve [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pg-protocol/src/parser.ts:432:11[90m)[39m
      at ye.nt [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pg-protocol/src/parser.ts:210:16[90m)[39m
      at ye.parse [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pg-protocol/src/parser.ts:102:25[90m)[39m
      at ue.execProtocol [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pglite/src/pglite.ts:700:26[90m)[39m
      at ue.y [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pglite/src/base.ts:141:12[90m)[39m
      at [90mfile:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pglite/src/base.ts:278:13 {
    length: [33m112[39m,
    severity: [32m'ERROR'[39m,
    code: [32m'42P01'[39m,
    detail: [90mundefined[39m,
    hint: [90mundefined[39m,
    position: [90mundefined[39m,
    internalPosition: [90mundefined[39m,
    internalQuery: [90mundefined[39m,
    where: [90mundefined[39m,
    schema: [90mundefined[39m,
    table: [90mundefined[39m,
    column: [90mundefined[39m,
    dataType: [90mundefined[39m,
    constraint: [90mundefined[39m,
    file: [32m'namespace.c'[39m,
    line: [32m'639'[39m,
    routine: [32m'RangeVarGetRelidExtended'[39m,
    query: [32m'ALTER TABLE issue_statuses DISABLE ROW LEVEL SECURITY'[39m,
    params: [],
    queryOptions: { rowMode: [32m'object'[39m, parsers: [36m[Object][39m }
  }
}

stdout | src/server/db/__tests__/drizzle-singleton.test.ts > Drizzle Client Singleton Pattern > Worker-Scoped Pattern Integration > Singleton Compatibility with Worker-Scoped Databases > should work correctly with worker-scoped PGlite databases
RLS disable skipped for priorities: DrizzleQueryError: Failed query: ALTER TABLE priorities DISABLE ROW LEVEL SECURITY
params: 
    at PglitePreparedQuery.queryWithCache [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4msrc[24m/pg-core/session.ts:73:11[90m)[39m
    at configureForBusinessLogicTesting [90m(/var/home/froeht/Code/PinPoint/[39msrc/test/helpers/pglite-test-setup.ts:167:9[90m)[39m
    at createTestDatabase [90m(/var/home/froeht/Code/PinPoint/[39msrc/test/helpers/pglite-test-setup.ts:107:3[90m)[39m
    at createSeededTestDatabase [90m(/var/home/froeht/Code/PinPoint/[39msrc/test/helpers/pglite-test-setup.ts:251:14[90m)[39m
    at __vite_ssr_import_0__.test.extend.workerDb.scope [90m(/var/home/froeht/Code/PinPoint/[39msrc/test/helpers/worker-scoped-db.ts:53:22[90m)[39m {
  query: [32m'ALTER TABLE priorities DISABLE ROW LEVEL SECURITY'[39m,
  params: [],
  cause: error: relation "priorities" does not exist
      at ye.Ve [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pg-protocol/src/parser.ts:432:11[90m)[39m
      at ye.nt [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pg-protocol/src/parser.ts:210:16[90m)[39m
      at ye.parse [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pg-protocol/src/parser.ts:102:25[90m)[39m
      at ue.execProtocol [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pglite/src/pglite.ts:700:26[90m)[39m
      at ue.y [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pglite/src/base.ts:141:12[90m)[39m
      at [90mfile:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pglite/src/base.ts:278:13 {
    length: [33m108[39m,
    severity: [32m'ERROR'[39m,
    code: [32m'42P01'[39m,
    detail: [90mundefined[39m,
    hint: [90mundefined[39m,
    position: [90mundefined[39m,
    internalPosition: [90mundefined[39m,
    internalQuery: [90mundefined[39m,
    where: [90mundefined[39m,
    schema: [90mundefined[39m,
    table: [90mundefined[39m,
    column: [90mundefined[39m,
    dataType: [90mundefined[39m,
    constraint: [90mundefined[39m,
    file: [32m'namespace.c'[39m,
    line: [32m'639'[39m,
    routine: [32m'RangeVarGetRelidExtended'[39m,
    query: [32m'ALTER TABLE priorities DISABLE ROW LEVEL SECURITY'[39m,
    params: [],
    queryOptions: { rowMode: [32m'object'[39m, parsers: [36m[Object][39m }
  }
}

stdout | src/server/db/__tests__/drizzle-singleton.test.ts > Drizzle Client Singleton Pattern > Worker-Scoped Pattern Integration > Singleton Compatibility with Worker-Scoped Databases > should work correctly with worker-scoped PGlite databases
RLS disable skipped for comments: DrizzleQueryError: Failed query: ALTER TABLE comments DISABLE ROW LEVEL SECURITY
params: 
    at PglitePreparedQuery.queryWithCache [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4msrc[24m/pg-core/session.ts:73:11[90m)[39m
    at configureForBusinessLogicTesting [90m(/var/home/froeht/Code/PinPoint/[39msrc/test/helpers/pglite-test-setup.ts:167:9[90m)[39m
    at createTestDatabase [90m(/var/home/froeht/Code/PinPoint/[39msrc/test/helpers/pglite-test-setup.ts:107:3[90m)[39m
    at createSeededTestDatabase [90m(/var/home/froeht/Code/PinPoint/[39msrc/test/helpers/pglite-test-setup.ts:251:14[90m)[39m
    at __vite_ssr_import_0__.test.extend.workerDb.scope [90m(/var/home/froeht/Code/PinPoint/[39msrc/test/helpers/worker-scoped-db.ts:53:22[90m)[39m {
  query: [32m'ALTER TABLE comments DISABLE ROW LEVEL SECURITY'[39m,
  params: [],
  cause: error: relation "comments" does not exist
      at ye.Ve [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pg-protocol/src/parser.ts:432:11[90m)[39m
      at ye.nt [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pg-protocol/src/parser.ts:210:16[90m)[39m
      at ye.parse [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pg-protocol/src/parser.ts:102:25[90m)[39m
      at ue.execProtocol [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pglite/src/pglite.ts:700:26[90m)[39m
      at ue.y [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pglite/src/base.ts:141:12[90m)[39m
      at [90mfile:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pglite/src/base.ts:278:13 {
    length: [33m106[39m,
    severity: [32m'ERROR'[39m,
    code: [32m'42P01'[39m,
    detail: [90mundefined[39m,
    hint: [90mundefined[39m,
    position: [90mundefined[39m,
    internalPosition: [90mundefined[39m,
    internalQuery: [90mundefined[39m,
    where: [90mundefined[39m,
    schema: [90mundefined[39m,
    table: [90mundefined[39m,
    column: [90mundefined[39m,
    dataType: [90mundefined[39m,
    constraint: [90mundefined[39m,
    file: [32m'namespace.c'[39m,
    line: [32m'639'[39m,
    routine: [32m'RangeVarGetRelidExtended'[39m,
    query: [32m'ALTER TABLE comments DISABLE ROW LEVEL SECURITY'[39m,
    params: [],
    queryOptions: { rowMode: [32m'object'[39m, parsers: [36m[Object][39m }
  }
}

stdout | src/server/db/__tests__/drizzle-singleton.test.ts > Drizzle Client Singleton Pattern > Worker-Scoped Pattern Integration > Singleton Compatibility with Worker-Scoped Databases > should work correctly with worker-scoped PGlite databases
RLS disable skipped for attachments: DrizzleQueryError: Failed query: ALTER TABLE attachments DISABLE ROW LEVEL SECURITY
params: 
    at PglitePreparedQuery.queryWithCache [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4msrc[24m/pg-core/session.ts:73:11[90m)[39m
    at configureForBusinessLogicTesting [90m(/var/home/froeht/Code/PinPoint/[39msrc/test/helpers/pglite-test-setup.ts:167:9[90m)[39m
    at createTestDatabase [90m(/var/home/froeht/Code/PinPoint/[39msrc/test/helpers/pglite-test-setup.ts:107:3[90m)[39m
    at createSeededTestDatabase [90m(/var/home/froeht/Code/PinPoint/[39msrc/test/helpers/pglite-test-setup.ts:251:14[90m)[39m
    at __vite_ssr_import_0__.test.extend.workerDb.scope [90m(/var/home/froeht/Code/PinPoint/[39msrc/test/helpers/worker-scoped-db.ts:53:22[90m)[39m {
  query: [32m'ALTER TABLE attachments DISABLE ROW LEVEL SECURITY'[39m,
  params: [],
  cause: error: relation "attachments" does not exist
      at ye.Ve [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pg-protocol/src/parser.ts:432:11[90m)[39m
      at ye.nt [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pg-protocol/src/parser.ts:210:16[90m)[39m
      at ye.parse [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pg-protocol/src/parser.ts:102:25[90m)[39m
      at ue.execProtocol [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pglite/src/pglite.ts:700:26[90m)[39m
      at ue.y [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pglite/src/base.ts:141:12[90m)[39m
      at [90mfile:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pglite/src/base.ts:278:13 {
    length: [33m109[39m,
    severity: [32m'ERROR'[39m,
    code: [32m'42P01'[39m,
    detail: [90mundefined[39m,
    hint: [90mundefined[39m,
    position: [90mundefined[39m,
    internalPosition: [90mundefined[39m,
    internalQuery: [90mundefined[39m,
    where: [90mundefined[39m,
    schema: [90mundefined[39m,
    table: [90mundefined[39m,
    column: [90mundefined[39m,
    dataType: [90mundefined[39m,
    constraint: [90mundefined[39m,
    file: [32m'namespace.c'[39m,
    line: [32m'639'[39m,
    routine: [32m'RangeVarGetRelidExtended'[39m,
    query: [32m'ALTER TABLE attachments DISABLE ROW LEVEL SECURITY'[39m,
    params: [],
    queryOptions: { rowMode: [32m'object'[39m, parsers: [36m[Object][39m }
  }
}

stdout | src/server/db/__tests__/drizzle-singleton.test.ts > Drizzle Client Singleton Pattern > Worker-Scoped Pattern Integration > Singleton Compatibility with Worker-Scoped Databases > should work correctly with worker-scoped PGlite databases
RLS disable skipped for issue_history: DrizzleQueryError: Failed query: ALTER TABLE issue_history DISABLE ROW LEVEL SECURITY
params: 
    at PglitePreparedQuery.queryWithCache [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4msrc[24m/pg-core/session.ts:73:11[90m)[39m
    at configureForBusinessLogicTesting [90m(/var/home/froeht/Code/PinPoint/[39msrc/test/helpers/pglite-test-setup.ts:167:9[90m)[39m
    at createTestDatabase [90m(/var/home/froeht/Code/PinPoint/[39msrc/test/helpers/pglite-test-setup.ts:107:3[90m)[39m
    at createSeededTestDatabase [90m(/var/home/froeht/Code/PinPoint/[39msrc/test/helpers/pglite-test-setup.ts:251:14[90m)[39m
    at __vite_ssr_import_0__.test.extend.workerDb.scope [90m(/var/home/froeht/Code/PinPoint/[39msrc/test/helpers/worker-scoped-db.ts:53:22[90m)[39m {
  query: [32m'ALTER TABLE issue_history DISABLE ROW LEVEL SECURITY'[39m,
  params: [],
  cause: error: relation "issue_history" does not exist
      at ye.Ve [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pg-protocol/src/parser.ts:432:11[90m)[39m
      at ye.nt [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pg-protocol/src/parser.ts:210:16[90m)[39m
      at ye.parse [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pg-protocol/src/parser.ts:102:25[90m)[39m
      at ue.execProtocol [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pglite/src/pglite.ts:700:26[90m)[39m
      at ue.y [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pglite/src/base.ts:141:12[90m)[39m
      at [90mfile:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pglite/src/base.ts:278:13 {
    length: [33m111[39m,
    severity: [32m'ERROR'[39m,
    code: [32m'42P01'[39m,
    detail: [90mundefined[39m,
    hint: [90mundefined[39m,
    position: [90mundefined[39m,
    internalPosition: [90mundefined[39m,
    internalQuery: [90mundefined[39m,
    where: [90mundefined[39m,
    schema: [90mundefined[39m,
    table: [90mundefined[39m,
    column: [90mundefined[39m,
    dataType: [90mundefined[39m,
    constraint: [90mundefined[39m,
    file: [32m'namespace.c'[39m,
    line: [32m'639'[39m,
    routine: [32m'RangeVarGetRelidExtended'[39m,
    query: [32m'ALTER TABLE issue_history DISABLE ROW LEVEL SECURITY'[39m,
    params: [],
    queryOptions: { rowMode: [32m'object'[39m, parsers: [36m[Object][39m }
  }
}

stdout | src/server/db/__tests__/drizzle-singleton.test.ts > Drizzle Client Singleton Pattern > Worker-Scoped Pattern Integration > Singleton Compatibility with Worker-Scoped Databases > should work correctly with worker-scoped PGlite databases
RLS disable skipped for upvotes: DrizzleQueryError: Failed query: ALTER TABLE upvotes DISABLE ROW LEVEL SECURITY
params: 
    at PglitePreparedQuery.queryWithCache [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4msrc[24m/pg-core/session.ts:73:11[90m)[39m
    at configureForBusinessLogicTesting [90m(/var/home/froeht/Code/PinPoint/[39msrc/test/helpers/pglite-test-setup.ts:167:9[90m)[39m
    at createTestDatabase [90m(/var/home/froeht/Code/PinPoint/[39msrc/test/helpers/pglite-test-setup.ts:107:3[90m)[39m
    at createSeededTestDatabase [90m(/var/home/froeht/Code/PinPoint/[39msrc/test/helpers/pglite-test-setup.ts:251:14[90m)[39m
    at __vite_ssr_import_0__.test.extend.workerDb.scope [90m(/var/home/froeht/Code/PinPoint/[39msrc/test/helpers/worker-scoped-db.ts:53:22[90m)[39m {
  query: [32m'ALTER TABLE upvotes DISABLE ROW LEVEL SECURITY'[39m,
  params: [],
  cause: error: relation "upvotes" does not exist
      at ye.Ve [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pg-protocol/src/parser.ts:432:11[90m)[39m
      at ye.nt [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pg-protocol/src/parser.ts:210:16[90m)[39m
      at ye.parse [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pg-protocol/src/parser.ts:102:25[90m)[39m
      at ue.execProtocol [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pglite/src/pglite.ts:700:26[90m)[39m
      at ue.y [90m(file:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pglite/src/base.ts:141:12[90m)[39m
      at [90mfile:///var/home/froeht/Code/PinPoint/[39mnode_modules/[4m@electric-sql[24m/pglite/src/base.ts:278:13 {
    length: [33m105[39m,
    severity: [32m'ERROR'[39m,
    code: [32m'42P01'[39m,
    detail: [90mundefined[39m,
    hint: [90mundefined[39m,
    position: [90mundefined[39m,
    internalPosition: [90mundefined[39m,
    internalQuery: [90mundefined[39m,
    where: [90mundefined[39m,
    schema: [90mundefined[39m,
    table: [90mundefined[39m,
    column: [90mundefined[39m,
    dataType: [90mundefined[39m,
    constraint: [90mundefined[39m,
    file: [32m'namespace.c'[39m,
    line: [32m'639'[39m,
    routine: [32m'RangeVarGetRelidExtended'[39m,
    query: [32m'ALTER TABLE upvotes DISABLE ROW LEVEL SECURITY'[39m,
    params: [],
    queryOptions: { rowMode: [32m'object'[39m, parsers: [36m[Object][39m }
  }
}

 ❯ |node| src/server/services/__tests__/notificationService.unit.test.ts (38 tests | 3 failed) 79ms
   ✓ NotificationService Unit Tests > notification constants > provides correct notification type constants 1ms
   ✓ NotificationService Unit Tests > notification constants > provides correct entity type constants 1ms
   ✓ NotificationService Unit Tests > createNotification > creates notification with all required fields 3ms
   ✓ NotificationService Unit Tests > createNotification > creates notification with optional fields as null 0ms
   ✓ NotificationService Unit Tests > createNotification > generates unique notification ID using prefix 1ms
   ✓ NotificationService Unit Tests > getUserNotifications > returns all notifications for user ordered by created date desc 0ms
   ✓ NotificationService Unit Tests > getUserNotifications > filters to unread notifications when unreadOnly is true 0ms
   ✓ NotificationService Unit Tests > getUserNotifications > respects limit and offset options 1ms
   ✓ NotificationService Unit Tests > getUserNotifications > handles empty options object 0ms
   ✓ NotificationService Unit Tests > getUserNotifications > handles undefined options 0ms
   ✓ NotificationService Unit Tests > markAsRead > marks notification as read for correct user 0ms
   ✓ NotificationService Unit Tests > markAsRead > uses proper security - filters by both notification ID and user ID 0ms
   ✓ NotificationService Unit Tests > markAsRead > handles non-existent notification gracefully 0ms
   ✓ NotificationService Unit Tests > markAllAsRead > marks all unread notifications as read for user 1ms
   ✓ NotificationService Unit Tests > markAllAsRead > only affects unread notifications for specific user 0ms
   ✓ NotificationService Unit Tests > getUnreadCount > returns correct unread count for user 0ms
   ✓ NotificationService Unit Tests > getUnreadCount > returns 0 for user with no unread notifications 0ms
   ✓ NotificationService Unit Tests > getUnreadCount > handles undefined count result gracefully 0ms
   ✓ NotificationService Unit Tests > getUnreadCount > only counts unread notifications for specific user 0ms
   × NotificationService Unit Tests > notifyMachineOwnerOfIssue > creates notification when machine owner has notifications enabled 7ms
     → expected "spy" to be called with arguments: [ { …(2) } ][90m

Received: 

[1m  1st spy call:

[22m[33m@@ -1,8 +1,9 @@[90m
[2m  [[22m
[2m    {[22m
[2m      "columns": {[22m
[31m+       "organizationId": true,[90m
[2m        "title": true,[22m
[2m      },[22m
[2m      "where": {[22m
[2m        "field": {[22m
[2m          "name": "id",[22m
[39m[90m

Number of calls: [1m1[22m
[39m
   ✓ NotificationService Unit Tests > notifyMachineOwnerOfIssue > does not create notification when owner notifications disabled 1ms
   ✓ NotificationService Unit Tests > notifyMachineOwnerOfIssue > does not create notification when notifyOnNewIssues disabled 1ms
   ✓ NotificationService Unit Tests > notifyMachineOwnerOfIssue > handles non-existent machine gracefully 0ms
   ✓ NotificationService Unit Tests > notifyMachineOwnerOfIssue > handles non-existent issue gracefully 0ms
   ✓ NotificationService Unit Tests > notifyMachineOwnerOfIssue > handles machine without owner gracefully 1ms
   ✓ NotificationService Unit Tests > notifyMachineOwnerOfIssue > constructs proper notification message with machine and model details 0ms
   × NotificationService Unit Tests > notifyMachineOwnerOfStatusChange > creates notification when machine owner has status change notifications enabled 1ms
     → expected "spy" to be called with arguments: [ { …(2) } ][90m

Received: 

[1m  1st spy call:

[22m[33m@@ -1,7 +1,11 @@[90m
[2m  [[22m
[2m    {[22m
[31m+     "columns": {[90m
[31m+       "organizationId": true,[90m
[31m+       "title": true,[90m
[31m+     },[90m
[2m      "where": {[22m
[2m        "field": {[22m
[2m          "name": "id",[22m
[2m        },[22m
[2m        "type": "eq",[22m
[39m[90m

Number of calls: [1m1[22m
[39m
   ✓ NotificationService Unit Tests > notifyMachineOwnerOfStatusChange > does not create notification when machine owner has status change notifications disabled 0ms
   ✓ NotificationService Unit Tests > notifyMachineOwnerOfStatusChange > does not create notification when owner notifications are disabled 0ms
   ✓ NotificationService Unit Tests > notifyMachineOwnerOfStatusChange > handles non-existent issue gracefully 0ms
   × NotificationService Unit Tests > notifyUserOfAssignment > creates notification when user is assigned to issue 1ms
     → expected "spy" to be called with arguments: [ { …(2) } ][90m

Received: 

[1m  1st spy call:

[22m[33m@@ -1,7 +1,11 @@[90m
[2m  [[22m
[2m    {[22m
[31m+     "columns": {[90m
[31m+       "organizationId": true,[90m
[31m+       "title": true,[90m
[31m+     },[90m
[2m      "where": {[22m
[2m        "field": {[22m
[2m          "name": "id",[22m
[2m        },[22m
[2m        "type": "eq",[22m
[39m[90m

Number of calls: [1m1[22m
[39m
   ✓ NotificationService Unit Tests > notifyUserOfAssignment > handles non-existent issue gracefully 0ms
   ✓ NotificationService Unit Tests > notifyUserOfAssignment > creates notification with proper issue title and machine model 0ms
   ✓ NotificationService Unit Tests > security and multi-tenancy > markAsRead validates notification ownership 0ms
   ✓ NotificationService Unit Tests > security and multi-tenancy > markAllAsRead scopes to specific user only 0ms
   ✓ NotificationService Unit Tests > security and multi-tenancy > getUserNotifications scopes to specific user only 0ms
   ✓ NotificationService Unit Tests > security and multi-tenancy > getUnreadCount scopes to specific user only 0ms
   ✓ NotificationService Unit Tests > service instantiation > instantiates properly with database dependency 0ms
 ❯ |node| src/server/db/__tests__/drizzle-singleton.test.ts (45 tests | 44 failed) 1309ms
   × Drizzle Client Singleton Pattern > Singleton Behavior > should create a single instance in development mode 6ms
     → expected undefined to be true // Object.is equality
   × Drizzle Client Singleton Pattern > Singleton Behavior > should create fresh instances in production mode 2ms
     → expected { select: [Function spy], …(10) } not to be { select: [Function spy], …(10) } // Object.is equality
   × Drizzle Client Singleton Pattern > Singleton Behavior > should reuse connections across hot reloads in development 2ms
     → expected undefined to be true // Object.is equality
   × Drizzle Client Singleton Pattern > Singleton Behavior > should properly isolate singleton instances between tests 0ms
     → expected undefined to be true // Object.is equality
   × Drizzle Client Singleton Pattern > Connection Configuration > SSL Configuration > should disable SSL for localhost connections 2ms
     → expected "spy" to be called with arguments: [ …(2) ][90m

Number of calls: [1m0[22m
[39m
   × Drizzle Client Singleton Pattern > Connection Configuration > SSL Configuration > should disable SSL for 127.0.0.1 connections 0ms
     → expected "spy" to be called with arguments: [ …(2) ][90m

Number of calls: [1m0[22m
[39m
   × Drizzle Client Singleton Pattern > Connection Configuration > SSL Configuration > should disable SSL in CI environment 2ms
     → expected "spy" to be called with arguments: [ …(2) ][90m

Number of calls: [1m0[22m
[39m
   × Drizzle Client Singleton Pattern > Connection Configuration > SSL Configuration > should require SSL for production remote connections 0ms
     → expected "spy" to be called with arguments: [ …(2) ][90m

Number of calls: [1m0[22m
[39m
   × Drizzle Client Singleton Pattern > Connection Configuration > Connection Pool Settings > should use appropriate pool size for CI environment 1ms
     → expected "spy" to be called with arguments: [ Any<String>, …(1) ][90m

Number of calls: [1m0[22m
[39m
   × Drizzle Client Singleton Pattern > Connection Configuration > Connection Pool Settings > should use minimal pool size for development 0ms
     → expected "spy" to be called with arguments: [ Any<String>, ObjectContaining{…} ][90m

Number of calls: [1m0[22m
[39m
   × Drizzle Client Singleton Pattern > Connection Configuration > Connection Pool Settings > should configure appropriate timeouts for each environment 0ms
     → expected "spy" to be called with arguments: [ Any<String>, ObjectContaining{…} ][90m

Number of calls: [1m0[22m
[39m
   × Drizzle Client Singleton Pattern > Connection Configuration > Connection Pool Settings > should disable prepared statements in CI 0ms
     → expected "spy" to be called with arguments: [ Any<String>, ObjectContaining{…} ][90m

Number of calls: [1m0[22m
[39m
   × Drizzle Client Singleton Pattern > Connection Configuration > Connection Pool Settings > should handle undefined values in CI 0ms
     → expected "spy" to be called with arguments: [ Any<String>, ObjectContaining{…} ][90m

Number of calls: [1m0[22m
[39m
   × Drizzle Client Singleton Pattern > Connection Configuration > Logging Configuration > should enable logging in development (non-CI) 4ms
     → expected "spy" to be called with arguments: [ Anything, ObjectContaining{…} ][90m

Number of calls: [1m0[22m
[39m
   × Drizzle Client Singleton Pattern > Connection Configuration > Logging Configuration > should disable logging in CI 0ms
     → expected "spy" to be called with arguments: [ Anything, ObjectContaining{…} ][90m

Number of calls: [1m0[22m
[39m
   × Drizzle Client Singleton Pattern > Connection Configuration > Logging Configuration > should disable logging in production 0ms
     → expected "spy" to be called with arguments: [ Anything, ObjectContaining{…} ][90m

Number of calls: [1m0[22m
[39m
   × Drizzle Client Singleton Pattern > Error Handling > should throw clear error when DATABASE_URL is missing 1ms
     → expected [Function] to throw an error
   × Drizzle Client Singleton Pattern > Error Handling > should handle invalid connection strings gracefully 0ms
     → expected "spy" to be called with arguments: [ 'not-a-valid-url', Any<Object> ][90m

Number of calls: [1m0[22m
[39m
   × Drizzle Client Singleton Pattern > Error Handling > should handle connection failures with retry logic 0ms
     → expected [Function] to throw an error
   × Drizzle Client Singleton Pattern > Error Handling > should properly propagate database connection errors 0ms
     → expected [Function] to throw an error
   × Drizzle Client Singleton Pattern > Connection Lifecycle > should properly initialize database connection on first use 0ms
     → expected undefined to be true // Object.is equality
   × Drizzle Client Singleton Pattern > Connection Lifecycle > should cleanup connections when closeDrizzleConnection is called 1ms
     → [vitest] No "closeDrizzleConnection" export is defined on the "~/server/db/drizzle" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

   × Drizzle Client Singleton Pattern > Connection Lifecycle > should handle cleanup errors gracefully 0ms
     → [vitest] No "closeDrizzleConnection" export is defined on the "~/server/db/drizzle" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

   × Drizzle Client Singleton Pattern > Connection Lifecycle > should allow reconnection after cleanup 0ms
     → [vitest] No "closeDrizzleConnection" export is defined on the "~/server/db/drizzle" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

   × Drizzle Client Singleton Pattern > Connection Lifecycle > should reset singleton without cleanup in development 0ms
     → expected "spy" to be called 1 times, but got 0 times
   × Drizzle Client Singleton Pattern > Schema Integration > should properly load and attach schema to drizzle instance 0ms
     → expected "spy" to be called with arguments: [ Anything, ObjectContaining{…} ][90m

Number of calls: [1m0[22m
[39m
   × Drizzle Client Singleton Pattern > Schema Integration > should make all schema tables available on the client 0ms
     → expected undefined to be defined
   ✓ Drizzle Client Singleton Pattern > Module Import Behavior > should not create connection on module import 0ms
   × Drizzle Client Singleton Pattern > Module Import Behavior > should handle circular dependencies gracefully 0ms
     → [vitest] No "closeDrizzleConnection" export is defined on the "~/server/db/drizzle" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

   × Drizzle Client Singleton Pattern > Performance Characteristics > should not leak memory on repeated singleton access 0ms
     → expected undefined to be true // Object.is equality
   × Drizzle Client Singleton Pattern > Performance Characteristics > should handle rapid concurrent connection requests 0ms
     → expected undefined to be true // Object.is equality
   × Drizzle Client Singleton Pattern > Performance Characteristics > should respect connection pool limits under load 0ms
     → expected "spy" to be called with arguments: [ Any<String>, ObjectContaining{…} ][90m

Number of calls: [1m0[22m
[39m
   × Drizzle Client Singleton Pattern > Worker-Scoped Pattern Integration > Singleton Compatibility with Worker-Scoped Databases > should work correctly with worker-scoped PGlite databases 1205ms
     → [vitest] No "permissions" export is defined on the "../schema" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

   × Drizzle Client Singleton Pattern > Worker-Scoped Pattern Integration > Singleton Compatibility with Worker-Scoped Databases > should maintain singleton behavior within transaction contexts 0ms
     → [vitest] No "permissions" export is defined on the "../schema" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

   × Drizzle Client Singleton Pattern > Worker-Scoped Pattern Integration > Singleton Compatibility with Worker-Scoped Databases > should handle connection cleanup without affecting worker-scoped databases 0ms
     → [vitest] No "permissions" export is defined on the "../schema" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

   × Drizzle Client Singleton Pattern > Worker-Scoped Pattern Integration > Memory Safety with Worker-Scoped Patterns > should not accumulate memory when used with worker-scoped databases 0ms
     → [vitest] No "permissions" export is defined on the "../schema" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

   × Drizzle Client Singleton Pattern > Worker-Scoped Pattern Integration > Memory Safety with Worker-Scoped Patterns > should handle rapid singleton access without memory leaks in transaction contexts 0ms
     → [vitest] No "permissions" export is defined on the "../schema" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

   × Drizzle Client Singleton Pattern > Worker-Scoped Pattern Integration > Transaction Isolation Compatibility > should not interfere with transaction-based isolation 0ms
     → [vitest] No "permissions" export is defined on the "../schema" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

   × Drizzle Client Singleton Pattern > Worker-Scoped Pattern Integration > Transaction Isolation Compatibility > should maintain consistent singleton behavior across multiple transactions 0ms
     → [vitest] No "permissions" export is defined on the "../schema" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

   × Drizzle Client Singleton Pattern > Memory Safety Validation > Connection Lifecycle Memory Management > should not accumulate connections with repeated module resets 2ms
     → expected [ +0, +0, +0, +0, +0 ] to deeply equal [ 1, 1, 1, 1, 1 ]
   × Drizzle Client Singleton Pattern > Memory Safety Validation > Connection Lifecycle Memory Management > should handle cleanup errors without memory accumulation 2ms
     → [vitest] No "closeDrizzleConnection" export is defined on the "~/server/db/drizzle" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

   × Drizzle Client Singleton Pattern > Memory Safety Validation > Production vs Development Memory Patterns > should not accumulate instances in production mode 0ms
     → expected 1 to be 10 // Object.is equality
   × Drizzle Client Singleton Pattern > Memory Safety Validation > Production vs Development Memory Patterns > should properly manage singleton memory in development mode 1ms
     → expected "spy" to be called 1 times, but got 0 times
   × Drizzle Client Singleton Pattern > Memory Safety Validation > Hot Reload Memory Safety > should handle hot reload cycles without memory accumulation 1ms
     → expected [ +0, +0, +0, +0, +0 ] to deeply equal [ 1, 1, 1, 1, 1 ]
   × Drizzle Client Singleton Pattern > Memory Safety Validation > Hot Reload Memory Safety > should maintain memory efficiency across hot reload with concurrent access 0ms
     → expected undefined to be true // Object.is equality
 ❯ |integration| src/integration-tests/role.integration.test.ts (32 tests | 32 failed) 1234ms
   × Role Router Integration Tests (PGlite) > list - Get all roles > should return roles with member count and permissions 1167ms
     → Cannot read properties of undefined (reading 'referencedTable')
   × Role Router Integration Tests (PGlite) > list - Get all roles > should handle empty roles list in new organization 2ms
     → Cannot read properties of undefined (reading 'referencedTable')
   × Role Router Integration Tests (PGlite) > list - Get all roles > should enforce organization scoping 1ms
     → Cannot read properties of undefined (reading 'referencedTable')
   × Role Router Integration Tests (PGlite) > list - Get all roles > should handle database errors gracefully 1ms
     → Cannot read properties of undefined (reading 'referencedTable')
   × Role Router Integration Tests (PGlite) > create - Create new role > should create role with template 1ms
     → Cannot read properties of undefined (reading 'referencedTable')
   × Role Router Integration Tests (PGlite) > create - Create new role > should create custom role without template 1ms
     → Cannot read properties of undefined (reading 'referencedTable')
   × Role Router Integration Tests (PGlite) > create - Create new role > should create role without permissions 2ms
     → Cannot read properties of undefined (reading 'referencedTable')
   × Role Router Integration Tests (PGlite) > create - Create new role > should enforce organization scoping in role creation 1ms
     → Cannot read properties of undefined (reading 'referencedTable')
   × Role Router Integration Tests (PGlite) > create - Create new role > should throw error for invalid template 1ms
     → Cannot read properties of undefined (reading 'referencedTable')
   × Role Router Integration Tests (PGlite) > update - Update existing role > should update role name 1ms
     → Cannot read properties of undefined (reading 'referencedTable')
   × Role Router Integration Tests (PGlite) > update - Update existing role > should update role permissions 1ms
     → Cannot read properties of undefined (reading 'referencedTable')
   × Role Router Integration Tests (PGlite) > update - Update existing role > should update role default status 1ms
     → Cannot read properties of undefined (reading 'referencedTable')
   × Role Router Integration Tests (PGlite) > update - Update existing role > should update multiple properties 2ms
     → Cannot read properties of undefined (reading 'referencedTable')
   × Role Router Integration Tests (PGlite) > update - Update existing role > should throw error for nonexistent role 1ms
     → Cannot read properties of undefined (reading 'referencedTable')
   × Role Router Integration Tests (PGlite) > delete - Delete role > should delete role successfully 1ms
     → Cannot read properties of undefined (reading 'referencedTable')
   × Role Router Integration Tests (PGlite) > delete - Delete role > should prevent deletion of system admin role 3ms
     → Cannot read properties of undefined (reading 'referencedTable')
   × Role Router Integration Tests (PGlite) > delete - Delete role > should handle nonexistent role deletion 1ms
     → Cannot read properties of undefined (reading 'referencedTable')
   × Role Router Integration Tests (PGlite) > get - Get specific role > should return role with permissions and member count 1ms
     → Cannot read properties of undefined (reading 'referencedTable')
   × Role Router Integration Tests (PGlite) > get - Get specific role > should throw NOT_FOUND if role does not exist 2ms
     → Cannot read properties of undefined (reading 'referencedTable')
   × Role Router Integration Tests (PGlite) > get - Get specific role > should enforce organization scoping 1ms
     → Cannot read properties of undefined (reading 'referencedTable')
   × Role Router Integration Tests (PGlite) > getPermissions - Get all available permissions > should return all permissions ordered by name 1ms
     → Cannot read properties of undefined (reading 'referencedTable')
   × Role Router Integration Tests (PGlite) > getPermissions - Get all available permissions > should return consistent permissions across calls 4ms
     → Cannot read properties of undefined (reading 'referencedTable')
   × Role Router Integration Tests (PGlite) > getTemplates - Get role templates > should return available role templates 1ms
     → Cannot read properties of undefined (reading 'referencedTable')
   × Role Router Integration Tests (PGlite) > assignToUser - Assign role to user > should assign role to user successfully 1ms
     → Cannot read properties of undefined (reading 'referencedTable')
   × Role Router Integration Tests (PGlite) > assignToUser - Assign role to user > should throw NOT_FOUND if target role does not exist 1ms
     → Cannot read properties of undefined (reading 'referencedTable')
   × Role Router Integration Tests (PGlite) > assignToUser - Assign role to user > should throw NOT_FOUND if user is not organization member 1ms
     → Cannot read properties of undefined (reading 'referencedTable')
   × Role Router Integration Tests (PGlite) > assignToUser - Assign role to user > should throw PRECONDITION_FAILED if validation fails 1ms
     → Cannot read properties of undefined (reading 'referencedTable')
   × Role Router Integration Tests (PGlite) > assignToUser - Assign role to user > should call validation with correct parameters 1ms
     → Cannot read properties of undefined (reading 'referencedTable')
   × Role Router Integration Tests (PGlite) > assignToUser - Assign role to user > should enforce organization scoping in all queries 1ms
     → Cannot read properties of undefined (reading 'referencedTable')
   × Role Router Integration Tests (PGlite) > Multi-tenant isolation > should enforce organization scoping across all endpoints 1ms
     → Cannot read properties of undefined (reading 'referencedTable')
   × Role Router Integration Tests (PGlite) > Permission validation > should require role:manage permission for mutations 1ms
     → Cannot read properties of undefined (reading 'referencedTable')
   × Role Router Integration Tests (PGlite) > Permission validation > should allow organization:manage permission for queries 1ms
     → Cannot read properties of undefined (reading 'referencedTable')
stdout | __vite_ssr_import_0__.test.extend.workerDb.scope (/var/home/froeht/Code/PinPoint/src/test/helpers/worker-scoped-db.ts:59:15)
[Worker 30] Cleaning up PGlite instance

stdout | src/server/auth/__tests__/auth-simple.test.ts
[MSW] Server started

stdout | src/lib/issues/__tests__/creationValidation.test.ts
[MSW] Server started

 ✓ |node| src/lib/issues/__tests__/creationValidation.test.ts (47 tests) 45ms
 ✓ |node| src/server/auth/__tests__/auth-simple.test.ts (10 tests) 76ms
stdout | src/server/api/routers/__tests__/issue.status.test.ts
[MSW] Server started

stdout | src/server/api/routers/__tests__/drizzle.schema.unit.test.ts
[MSW] Server started

stdout | src/server/api/routers/__tests__/notification.test.ts
[MSW] Server started

stdout | src/server/api/routers/__tests__/notification.test.ts > Notification Router Integration Tests > getNotifications procedure > should retrieve user notifications with real database operations
[Worker 37] Creating shared PGlite instance with seeded data

stdout | src/integration-tests/drizzle-crud-validation.integration.test.ts
[MSW] Server started

stdout | src/integration-tests/drizzle-crud-validation.integration.test.ts > Drizzle CRUD Operations (Integration) > INSERT Operations > should insert a user successfully
[Worker 40] Creating shared PGlite instance with seeded data

stdout | src/lib/common/__tests__/inputValidation.test.ts
[MSW] Server started

 ✓ |node| src/lib/common/__tests__/inputValidation.test.ts (205 tests) 55ms
stdout | src/lib/issues/__tests__/statusValidation.test.ts
[MSW] Server started

 ✓ |node| src/lib/issues/__tests__/statusValidation.test.ts (36 tests) 41ms
stdout | src/lib/issues/__tests__/assignmentValidation.test.ts
[MSW] Server started

 ✓ |node| src/lib/issues/__tests__/assignmentValidation.test.ts (71 tests) 43ms
stdout | src/lib/permissions/__tests__/descriptions.test.ts
[MSW] Server started

 ✓ |node| src/lib/permissions/__tests__/descriptions.test.ts (15 tests) 56ms
stdout | src/server/auth/__tests__/uploadAuth.test.ts
[MSW] Server started

stdout | src/lib/issues/__tests__/urlUtils.test.ts
[MSW] Server started

 ✓ |node| src/server/auth/__tests__/uploadAuth.test.ts (21 tests) 56ms
 ✓ |node| src/lib/issues/__tests__/urlUtils.test.ts (28 tests) 51ms
 ✓ |node| src/server/api/routers/__tests__/drizzle.schema.unit.test.ts (11 tests) 702ms
stdout | src/server/auth/__tests__/permissions.constants.test.ts
[MSW] Server started

 ✓ |node| src/server/auth/__tests__/permissions.constants.test.ts (25 tests) 49ms
stdout | src/lib/supabase/__tests__/errors.test.ts
[MSW] Server started

 ✓ |node| src/lib/supabase/__tests__/errors.test.ts (32 tests) 60ms
stdout | src/lib/external/__tests__/pinballmapTransformer.test.ts
[MSW] Server started

 ✓ |node| src/lib/external/__tests__/pinballmapTransformer.test.ts (35 tests) 43ms
 ✓ |integration| src/integration-tests/drizzle-crud-validation.integration.test.ts (21 tests) 890ms
   ✓ Drizzle CRUD Operations (Integration) > INSERT Operations > should insert a user successfully  820ms
stdout | __vite_ssr_import_0__.test.extend.workerDb.scope (/var/home/froeht/Code/PinPoint/src/test/helpers/worker-scoped-db.ts:59:15)
[Worker 40] Cleaning up PGlite instance

stdout | src/lib/issues/__tests__/selectionUtils.test.ts
[MSW] Server started

stdout | src/lib/users/__tests__/roleManagementValidation.test.ts
[MSW] Server started

 ✓ |node| src/lib/issues/__tests__/selectionUtils.test.ts (48 tests) 37ms
 ✓ |node| src/lib/users/__tests__/roleManagementValidation.test.ts (67 tests) 43ms
stdout | src/lib/supabase/__tests__/client.test.ts
[MSW] Server started

 ✓ |node| src/lib/supabase/__tests__/client.test.ts (8 tests) 46ms
stdout | src/lib/pinballmap/__tests__/client.test.ts
[MSW] Server started

stdout | src/server/api/routers/utils/__tests__/commentValidation.test.ts
[MSW] Server started

 ✓ |node| src/lib/pinballmap/__tests__/client.test.ts (8 tests) 41ms
 ✓ |node| src/server/api/routers/utils/__tests__/commentValidation.test.ts (66 tests) 36ms
stdout | src/lib/supabase/__tests__/server.test.ts
[MSW] Server started

 ✓ |node| src/lib/supabase/__tests__/server.test.ts (10 tests) 48ms
stdout | src/server/services/__tests__/factory.test.ts
[MSW] Server started

 ✓ |node| src/server/services/__tests__/factory.test.ts (6 tests) 43ms
stdout | src/server/services/__tests__/collectionService.test.ts
[MSW] Server started

 ✓ |node| src/server/services/__tests__/collectionService.test.ts (9 tests) 33ms
stdout | src/server/services/__tests__/permissionService.expandDependencies.test.ts
[MSW] Server started

 ✓ |node| src/server/services/__tests__/permissionService.expandDependencies.test.ts (16 tests) 31ms
stdout | src/lib/supabase/__tests__/types.test.ts
[MSW] Server started

 ✓ |node| src/lib/supabase/__tests__/types.test.ts (12 tests) 32ms
stdout | src/server/services/__tests__/notificationPreferences.test.ts
[MSW] Server started

 ✓ |node| src/server/services/__tests__/notificationPreferences.test.ts (4 tests) 31ms
stdout | src/lib/opdb/__tests__/utils.test.ts
[MSW] Server started

 ✓ |node| src/lib/opdb/__tests__/utils.test.ts (15 tests) 33ms
stdout | src/server/db/__tests__/provider.test.ts
[MSW] Server started

 ✓ |node| src/server/db/__tests__/provider.test.ts (2 tests) 37ms
stdout | src/server/api/__tests__/msw.trpc.test.ts
[MSW] Server started

stdout | src/server/api/__tests__/msw.trpc.test.ts > MSW-tRPC Infrastructure Validation > should create valid handler responses
Handler creation functions are available and callable

 ✓ |node| src/server/api/__tests__/msw.trpc.test.ts (7 tests) 5ms
stdout | src/server/api/routers/__tests__/issue.notification.test.ts
[MSW] Server started

 ✓ |node| src/server/api/routers/__tests__/issue.notification.test.ts (6 tests) 42ms
stdout | src/server/api/__tests__/trpc.auth.test.ts
[MSW] Server started

 ✓ |node| src/server/api/__tests__/trpc.auth.test.ts (3 tests) 28ms
stdout | src/lib/environment-client/__tests__/client-safe-access.test.tsx
[MSW] Server started

 ✓ |node| src/lib/environment-client/__tests__/client-safe-access.test.tsx (4 tests) 32ms
stdout | src/components/issues/__tests__/MachineSelector.test.tsx
✅ React test environment initialized successfully

stderr | src/components/issues/__tests__/MachineSelector.test.tsx > MachineSelector > Value Display > displays raw value when machine ID not found in data
MUI: You have provided an out-of-range value `nonexistent-id` for the select component.
Consider providing a value that matches one of the available options or ''.
The available values are ``, `machine-1`.
MUI: You have provided an out-of-range value `nonexistent-id` for the select component.
Consider providing a value that matches one of the available options or ''.
The available values are ``, `machine-1`.

 ✓ |jsdom| src/components/issues/__tests__/MachineSelector.test.tsx (28 tests) 613ms
 ✓ |node| src/server/api/routers/__tests__/issue.status.test.ts (9 tests) 3183ms
   ✓ Issue Status Router (RLS-Enhanced) > getStatusCounts (RLS-Enhanced) > should return status counts for organization with organizational scoping  470ms
   ✓ Issue Status Router (RLS-Enhanced) > getStatusCounts (RLS-Enhanced) > should accumulate counts for multiple statuses in same category  426ms
   ✓ Issue Status Router (RLS-Enhanced) > getStatusCounts (RLS-Enhanced) > should handle invalid status categories gracefully  426ms
   ✓ Issue Status Router (RLS-Enhanced) > getStatusCounts (RLS-Enhanced) > should require authentication for status operations  433ms
   ✓ Issue Status Router (RLS-Enhanced) > getStatusCounts (RLS-Enhanced) > should require organization context for status operations (RLS boundary)  357ms
stdout | src/components/issues/__tests__/IssueList.integration.test.tsx
✅ React test environment initialized successfully

stdout | src/components/locations/__tests__/LocationDetailView.test.tsx
✅ React test environment initialized successfully

stdout | src/components/issues/__tests__/IssueDetailView.auth.integration.test.tsx
✅ React test environment initialized successfully

stdout | src/components/machines/__tests__/MachineDetailView.test.tsx
✅ React test environment initialized successfully

 ✓ |jsdom| src/components/locations/__tests__/LocationDetailView.test.tsx (18 tests) 450ms
 ✓ |jsdom| src/components/machines/__tests__/MachineDetailView.test.tsx (14 tests) 309ms
stdout | src/components/permissions/__tests__/PermissionButton.test.tsx
✅ React test environment initialized successfully

 ✓ |jsdom| src/components/issues/__tests__/IssueList.integration.test.tsx (20 tests) 1172ms
 ✓ |jsdom| src/components/permissions/__tests__/PermissionButton.test.tsx (19 tests) 117ms
stdout | src/components/locations/__tests__/MachineGrid.test.tsx
✅ React test environment initialized successfully

stdout | src/components/permissions/__tests__/PermissionGate.test.tsx
✅ React test environment initialized successfully

 ✓ |jsdom| src/components/permissions/__tests__/PermissionGate.test.tsx (25 tests) 78ms
stdout | src/app/machines/[id]/__tests__/page.test.tsx
✅ React test environment initialized successfully

 ✓ |jsdom| src/app/machines/[id]/__tests__/page.test.tsx (11 tests) 57ms
 ✓ |jsdom| src/components/locations/__tests__/MachineGrid.test.tsx (18 tests) 247ms
stdout | src/app/dashboard/_components/__tests__/PrimaryAppBar.test.tsx
✅ React test environment initialized successfully

 ✓ |jsdom| src/app/dashboard/_components/__tests__/PrimaryAppBar.test.tsx (21 tests) 210ms
stdout | src/components/react-environment.test.tsx
✅ React test environment initialized successfully

stdout | src/hooks/__tests__/usePermissions.test.tsx
✅ React test environment initialized successfully

 ✓ |jsdom| src/components/react-environment.test.tsx (2 tests) 34ms
 ✓ |jsdom| src/hooks/__tests__/usePermissions.test.tsx (20 tests) 45ms
stdout | src/app/issues/__tests__/issues-page.test.tsx
✅ React test environment initialized successfully

 ✓ |jsdom| src/app/issues/__tests__/issues-page.test.tsx (7 tests) 24ms
 ✓ |jsdom| src/app/api/dev/__tests__/users.test.ts (11 tests) 4ms
stdout | src/app/machines/components/__tests__/MachineCard.test.tsx
✅ React test environment initialized successfully

stdout | src/app/games/[id]/__tests__/page.test.tsx
✅ React test environment initialized successfully

 ✓ |jsdom| src/app/games/[id]/__tests__/page.test.tsx (4 tests) 3ms
stdout | src/app/games/__tests__/page.test.tsx
✅ React test environment initialized successfully

 ✓ |jsdom| src/app/games/__tests__/page.test.tsx (2 tests) 3ms
 ✓ |jsdom| src/app/machines/components/__tests__/MachineCard.test.tsx (18 tests) 145ms
stdout | src/app/api/dev/__tests__/users-simple.test.ts
✅ React test environment initialized successfully

 ✓ |jsdom| src/app/api/dev/__tests__/users-simple.test.ts (5 tests) 2ms
 ❯ |jsdom| src/components/issues/__tests__/IssueDetailView.auth.integration.test.tsx (9 tests | 2 failed) 2386ms
   ✓ IssueDetailView - Auth Integration Tests > 🔓 Unauthenticated User Experience > should show public content but hide auth-required features 54ms
   ✓ IssueDetailView - Auth Integration Tests > 👤 Authenticated Member (Limited Permissions) > should show member-level features but hide admin controls 103ms
   ✓ IssueDetailView - Auth Integration Tests > 👤 Authenticated Member (Limited Permissions) > should show permission tooltips on disabled buttons 32ms
   ✓ IssueDetailView - Auth Integration Tests > 👑 Admin User (Full Permissions) > should show all admin controls and features 65ms
   × IssueDetailView - Auth Integration Tests > 👑 Admin User (Full Permissions) > should allow admin actions when clicked 1022ms
     → [2mexpect([22m[31melement[39m[2m).toBeEnabled()[22m

Received element is not enabled:
  [31m<button
  class="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-sizeMedium MuiButton-outlinedSizeMedium MuiButton-colorPrimary MuiButton-fullWidth Mui-disabled MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-sizeMedium MuiButton-outlinedSizeMedium MuiButton-colorPrimary MuiButton-fullWidth css-14vdjio-MuiButtonBase-root-MuiButton-root"
  data-testid="edit-issue-button"
  disabled=""
  tabindex="-1"
  title="You don't have permission to: Edit existing issues"
  type="button"
/>[39m

Ignored nodes: comments, script, style
[36m<html>[39m
  [36m<head>[39m
    [36m<meta[39m
      [33mcontent[39m=[32m""[39m
      [33mname[39m=[32m"emotion-insertion-point"[39m
    [36m/>[39m
  [36m</head>[39m
  [36m<body>[39m
    [36m<div>[39m
      [36m<div[39m
        [33mclass[39m=[32m"MuiContainer-root MuiContainer-maxWidthLg css-xsov46-MuiContainer-root"[39m
        [33mdata-testid[39m=[32m"desktop-layout"[39m
      [36m>[39m
        [36m<div[39m
          [33mclass[39m=[32m"MuiGrid-root MuiGrid-container MuiGrid-direction-xs-row MuiGrid-spacing-xs-3 css-1u8xl8z-MuiGrid-root"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"MuiGrid-root MuiGrid-direction-xs-row MuiGrid-grid-xs-12 MuiGrid-grid-md-8 css-q5srq4-MuiGrid-root"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation1 css-s66fnd-MuiPaper-root"[39m
              [33mstyle[39m=[32m"--Paper-shadow: 0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12);"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"MuiBox-root css-0"[39m
              [36m>[39m
                [36m<h1[39m
                  [33mclass[39m=[32m"MuiTypography-root MuiTypography-h4 MuiTypography-gutterBottom css-1it4a80-MuiTypography-root"[39m
                  [33mdata-testid[39m=[32m"issue-title"[39m
                [36m>[39m
                  [0mAuth Integration Test Issue[0m
                [36m</h1>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"MuiStack-root css-1pl8fbw-MuiStack-root"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"MuiChip-root MuiChip-outlined MuiChip-sizeMedium MuiChip-colorPrimary MuiChip-outlinedPrimary css-mjbe4w-MuiChip-root"[39m
                    [33mdata-testid[39m=[32m"issue-status"[39m
                  [36m>[39m
                    [36m<span[39m
                      [33mclass[39m=[32m"MuiChip-label MuiChip-labelMedium css-16cgrcw-MuiChip-label"[39m
                    [36m>[39m
                      [0mOpen[0m
                    [36m</span>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"MuiChip-root MuiChip-outlined MuiChip-sizeMedium MuiChip-colorSecondary MuiChip-outlinedSecondary css-n2mi7k-MuiChip-root"[39m
                    [33mdata-testid[39m=[32m"issue-priority"[39m
                  [36m>[39m
                    [36m<span[39m
                      [33mclass[39m=[32m"MuiChip-label MuiChip-labelMedium css-16cgrcw-MuiChip-label"[39m
                    [36m>[39m
                      [0mHigh[0m
                    [36m</span>[39m
                  [36m</div>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"MuiBox-root css-i3pbo"[39m
                [36m>[39m
                  [36m<h6[39m
                    [33mclass[39m=[32m"MuiTypography-root MuiTypography-h6 MuiTypography-gutterBottom css-1wmifpn-MuiTypography-root"[39m
                  [36m>[39m
                    [0mDescription[0m
                  [36m</h6>[39m
                  [36m<p[39m
                    [33mclass[39m=[32m"MuiTypography-root MuiTypography-body1 css-vmq5eu-MuiTypography-root"[39m
                    [33mdata-testid[39m=[32m"issue-description"[39m
                  [36m>[39m
                    [0mTesting real auth component interactions[0m
                  [36m</p>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"MuiPaper-root MuiPaper-outlined MuiPaper-rounded MuiCard-root css-1h0qqai-MuiPaper-root-MuiCard-root"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"MuiCardContent-root css-1lt5qva-MuiCardContent-root"[39m
                  [36m>[39m
                    [36m<h6[39m
                      [33mclass[39m=[32m"MuiTypography-root MuiTypography-h6 MuiTypography-gutterBottom css-1wmifpn-MuiTypography-root"[39m
                    [36m>[39m
                      [0mMachine Information[0m
                    [36m</h6>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"MuiBox-root css-0"[39m
                      [33mdata-testid[39m=[32m"machine-info"[39m
                    [36m>[39m
                      [36m<div[39m
                        [33mclass[39m=[32m"MuiBox-root css-1qm1lh"[39m
                      [36m>[39m
                        [36m<p[39m
                          [33mclass[39m=[32m"MuiTypography-root MuiTypography-body2 css-1wle3ir-MuiTypography-root"[39m
                        [36m>[39m
                          [0mGame[0m
                        [36m</p>[39m
                        [36m<p[39m
                          [33mclass[39m=[32m"MuiTypography-root MuiTypography-body1 css-rizt0-MuiTypography-root"[39m
                          [33mdata-testid[39m=[32m"machine-name"[39m
                        [36m>[39m
                          [0mTest Game[0m
                        [36m</p>[39m
                        [36m<p[39m
                          [33mclass[39m=[32m"MuiTypography-root MuiTypography-body2 css-1wle3ir-MuiTypography-root"[39m
                        [36m>[39m
                          [0mby [0m
                          [0mTest Manufacturer[0m
                        [36m</p>[39m
                      [36m</div>[39m
                      [36m<div[39m
                        [33mclass[39m=[32m"MuiBox-root css-1qm1lh"[39m
                      [36m>[39m
                        [36m<p[39m
                          [33mclass[39m=[32m"MuiTypography-root MuiTypography-body2 css-1wle3ir-MuiTypography-root"[39m
                        [36m>[39m
                          [0mLocation[0m
                        [36m</p>[39m
                        [36m<p[39m
                          [33mclass[39m=[32m"MuiTypography-root MuiTypography-body1 css-rizt0-MuiTypography-root"[39m
                          [33mdata-testid[39m=[32m"machine-location"[39m
                        [36m>[39m
                          [0mTest Location[0m
                        [36m</p>[39m
                        [36m<p[39m
                          [33mclass[39m=[32m"MuiTypography-root MuiTypography-body2 css-1wle3ir-MuiTypography-root"[39m
                        [36m>[39m
                          [0m123 Test St[0m
                        [36m</p>[39m
                      [36m</div>[39m
                      [36m<div[39m
                        [33mclass[39m=[32m"MuiBox-root css-0"[39m
                      [36m>[39m
 ...
   ✓ IssueDetailView - Auth Integration Tests > 🏢 Multi-Tenant Auth Security > should prevent cross-organization access 49ms
   × IssueDetailView - Auth Integration Tests > ⚡ Auth State Changes > should update UI when permissions change 1037ms
     → [2mexpect([22m[31melement[39m[2m).toBeEnabled()[22m

Received element is not enabled:
  [31m<button
  class="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-sizeMedium MuiButton-outlinedSizeMedium MuiButton-colorPrimary MuiButton-fullWidth Mui-disabled MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-sizeMedium MuiButton-outlinedSizeMedium MuiButton-colorPrimary MuiButton-fullWidth css-14vdjio-MuiButtonBase-root-MuiButton-root"
  data-testid="edit-issue-button"
  disabled=""
  tabindex="-1"
  title="You don't have permission to: Edit existing issues"
  type="button"
/>[39m

Ignored nodes: comments, script, style
[36m<html>[39m
  [36m<head>[39m
    [36m<meta[39m
      [33mcontent[39m=[32m""[39m
      [33mname[39m=[32m"emotion-insertion-point"[39m
    [36m/>[39m
  [36m</head>[39m
  [36m<body>[39m
    [36m<div>[39m
      [36m<div[39m
        [33mclass[39m=[32m"MuiContainer-root MuiContainer-maxWidthLg css-xsov46-MuiContainer-root"[39m
        [33mdata-testid[39m=[32m"desktop-layout"[39m
      [36m>[39m
        [36m<div[39m
          [33mclass[39m=[32m"MuiGrid-root MuiGrid-container MuiGrid-direction-xs-row MuiGrid-spacing-xs-3 css-1u8xl8z-MuiGrid-root"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"MuiGrid-root MuiGrid-direction-xs-row MuiGrid-grid-xs-12 MuiGrid-grid-md-8 css-q5srq4-MuiGrid-root"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation1 css-s66fnd-MuiPaper-root"[39m
              [33mstyle[39m=[32m"--Paper-shadow: 0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12);"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"MuiBox-root css-0"[39m
              [36m>[39m
                [36m<h1[39m
                  [33mclass[39m=[32m"MuiTypography-root MuiTypography-h4 MuiTypography-gutterBottom css-1it4a80-MuiTypography-root"[39m
                  [33mdata-testid[39m=[32m"issue-title"[39m
                [36m>[39m
                  [0mAuth Integration Test Issue[0m
                [36m</h1>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"MuiStack-root css-1pl8fbw-MuiStack-root"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"MuiChip-root MuiChip-outlined MuiChip-sizeMedium MuiChip-colorPrimary MuiChip-outlinedPrimary css-mjbe4w-MuiChip-root"[39m
                    [33mdata-testid[39m=[32m"issue-status"[39m
                  [36m>[39m
                    [36m<span[39m
                      [33mclass[39m=[32m"MuiChip-label MuiChip-labelMedium css-16cgrcw-MuiChip-label"[39m
                    [36m>[39m
                      [0mOpen[0m
                    [36m</span>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"MuiChip-root MuiChip-outlined MuiChip-sizeMedium MuiChip-colorSecondary MuiChip-outlinedSecondary css-n2mi7k-MuiChip-root"[39m
                    [33mdata-testid[39m=[32m"issue-priority"[39m
                  [36m>[39m
                    [36m<span[39m
                      [33mclass[39m=[32m"MuiChip-label MuiChip-labelMedium css-16cgrcw-MuiChip-label"[39m
                    [36m>[39m
                      [0mHigh[0m
                    [36m</span>[39m
                  [36m</div>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"MuiBox-root css-i3pbo"[39m
                [36m>[39m
                  [36m<h6[39m
                    [33mclass[39m=[32m"MuiTypography-root MuiTypography-h6 MuiTypography-gutterBottom css-1wmifpn-MuiTypography-root"[39m
                  [36m>[39m
                    [0mDescription[0m
                  [36m</h6>[39m
                  [36m<p[39m
                    [33mclass[39m=[32m"MuiTypography-root MuiTypography-body1 css-vmq5eu-MuiTypography-root"[39m
                    [33mdata-testid[39m=[32m"issue-description"[39m
                  [36m>[39m
                    [0mTesting real auth component interactions[0m
                  [36m</p>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"MuiPaper-root MuiPaper-outlined MuiPaper-rounded MuiCard-root css-1h0qqai-MuiPaper-root-MuiCard-root"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"MuiCardContent-root css-1lt5qva-MuiCardContent-root"[39m
                  [36m>[39m
                    [36m<h6[39m
                      [33mclass[39m=[32m"MuiTypography-root MuiTypography-h6 MuiTypography-gutterBottom css-1wmifpn-MuiTypography-root"[39m
                    [36m>[39m
                      [0mMachine Information[0m
                    [36m</h6>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"MuiBox-root css-0"[39m
                      [33mdata-testid[39m=[32m"machine-info"[39m
                    [36m>[39m
                      [36m<div[39m
                        [33mclass[39m=[32m"MuiBox-root css-1qm1lh"[39m
                      [36m>[39m
                        [36m<p[39m
                          [33mclass[39m=[32m"MuiTypography-root MuiTypography-body2 css-1wle3ir-MuiTypography-root"[39m
                        [36m>[39m
                          [0mGame[0m
                        [36m</p>[39m
                        [36m<p[39m
                          [33mclass[39m=[32m"MuiTypography-root MuiTypography-body1 css-rizt0-MuiTypography-root"[39m
                          [33mdata-testid[39m=[32m"machine-name"[39m
                        [36m>[39m
                          [0mTest Game[0m
                        [36m</p>[39m
                        [36m<p[39m
                          [33mclass[39m=[32m"MuiTypography-root MuiTypography-body2 css-1wle3ir-MuiTypography-root"[39m
                        [36m>[39m
                          [0mby [0m
                          [0mTest Manufacturer[0m
                        [36m</p>[39m
                      [36m</div>[39m
                      [36m<div[39m
                        [33mclass[39m=[32m"MuiBox-root css-1qm1lh"[39m
                      [36m>[39m
                        [36m<p[39m
                          [33mclass[39m=[32m"MuiTypography-root MuiTypography-body2 css-1wle3ir-MuiTypography-root"[39m
                        [36m>[39m
                          [0mLocation[0m
                        [36m</p>[39m
                        [36m<p[39m
                          [33mclass[39m=[32m"MuiTypography-root MuiTypography-body1 css-rizt0-MuiTypography-root"[39m
                          [33mdata-testid[39m=[32m"machine-location"[39m
                        [36m>[39m
                          [0mTest Location[0m
                        [36m</p>[39m
                        [36m<p[39m
                          [33mclass[39m=[32m"MuiTypography-root MuiTypography-body2 css-1wle3ir-MuiTypography-root"[39m
                        [36m>[39m
                          [0m123 Test St[0m
                        [36m</p>[39m
                      [36m</div>[39m
                      [36m<div[39m
                        [33mclass[39m=[32m"MuiBox-root css-0"[39m
                      [36m>[39m
 ...
   ✓ IssueDetailView - Auth Integration Tests > 🔄 Loading and Error States > should handle auth loading states gracefully 9ms
   ✓ IssueDetailView - Auth Integration Tests > 🔄 Loading and Error States > should handle auth errors appropriately 15ms
 ✓ |node| src/server/api/routers/__tests__/notification.test.ts (16 tests) 10142ms
   ✓ Notification Router Integration Tests > getNotifications procedure > should retrieve user notifications with real database operations  948ms
   ✓ Notification Router Integration Tests > getNotifications procedure > should filter notifications by unreadOnly option  315ms
   ✓ Notification Router Integration Tests > getNotifications procedure > should limit and offset notifications correctly  842ms
   ✓ Notification Router Integration Tests > getNotifications procedure > should validate input parameters  586ms
   ✓ Notification Router Integration Tests > getUnreadCount procedure > should return zero for user with no unread notifications  346ms
   ✓ Notification Router Integration Tests > markAsRead procedure > should validate notification ID is required  367ms
   ✓ Notification Router Integration Tests > markAsRead procedure > should handle non-existent notification gracefully  477ms
   ✓ Notification Router Integration Tests > Authentication and Authorization > should require authentication for all procedures  1606ms
   ✓ Notification Router Integration Tests > Multi-tenant Security Testing > should enforce user-level isolation across operations  1100ms
   ✓ Notification Router Integration Tests > Multi-tenant Security Testing > should enforce cross-organizational boundaries  474ms
   ✓ Notification Router Integration Tests > Multi-tenant Security Testing > should maintain data integrity across notification operations  2020ms
stdout | __vite_ssr_import_0__.test.extend.workerDb.scope (/var/home/froeht/Code/PinPoint/src/test/helpers/worker-scoped-db.ts:59:15)
[Worker 37] Cleaning up PGlite instance


⎯⎯⎯⎯⎯⎯ Failed Suites 2 ⎯⎯⎯⎯⎯⎯⎯

 FAIL  |integration| src/integration-tests/location.aggregation.integration.test.ts > Location Router Aggregation Operations (PGlite)
ReferenceError: workerDb is not defined
 ❯ src/integration-tests/location.aggregation.integration.test.ts:49:5
     47|     // Create seeded test database with established infrastructure
     48|     const setup = await createSeededTestDatabase();
     49|     workerDb = setup.db;
       |     ^
     50|     primaryOrgId = setup.organizationId;
     51|     competitorOrgId = SEED_TEST_IDS.ORGANIZATIONS.competitor;

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[1/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/routers.integration.test.ts > tRPC Router Integration Tests
TypeError: getSeededTestData is not a function
 ❯ src/server/api/routers/__tests__/routers.integration.test.ts:113:24
    111| 
    112|     // Get seeded test data for primary organization
    113|     seededData = await getSeededTestData(db, primaryOrgId);
       |                        ^
    114|   });
    115| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[2/373]⎯


⎯⎯⎯⎯⎯⎯ Failed Tests 371 ⎯⎯⎯⎯⎯⎯

 FAIL  |integration| src/integration-tests/admin.integration.test.ts > Admin Router Integration (PGlite) > getUsers > should retrieve all organization members with real database operations
 FAIL  |integration| src/integration-tests/admin.integration.test.ts > Admin Router Integration (PGlite) > getUsers > should enforce organizational isolation
 FAIL  |integration| src/integration-tests/admin.integration.test.ts > Admin Router Integration (PGlite) > updateUserRole > should update user role with real database operations
 FAIL  |integration| src/integration-tests/admin.integration.test.ts > Admin Router Integration (PGlite) > updateUserRole > should enforce role exists in organization constraint
 FAIL  |integration| src/integration-tests/admin.integration.test.ts > Admin Router Integration (PGlite) > inviteUser > should create invitation with real database operations
 FAIL  |integration| src/integration-tests/admin.integration.test.ts > Admin Router Integration (PGlite) > inviteUser > should handle duplicate email invitations
 FAIL  |integration| src/integration-tests/admin.integration.test.ts > Admin Router Integration (PGlite) > inviteUser > should enforce organizational isolation for invitations
 FAIL  |integration| src/integration-tests/admin.integration.test.ts > Admin Router Integration (PGlite) > removeUser > should remove user successfully with cascading data handling
 FAIL  |integration| src/integration-tests/admin.integration.test.ts > Admin Router Integration (PGlite) > getInvitations > should retrieve pending invitations with real database operations
 FAIL  |integration| src/integration-tests/admin.integration.test.ts > Admin Router Integration (PGlite) > getInvitations > should enforce organizational isolation for invitations
 FAIL  |integration| src/integration-tests/admin.integration.test.ts > Admin Router Integration (PGlite) > cancelInvitation > should cancel invitation with real database operations
 FAIL  |integration| src/integration-tests/role.integration.test.ts > Role Router Integration Tests (PGlite) > list - Get all roles > should return roles with member count and permissions
 FAIL  |integration| src/integration-tests/role.integration.test.ts > Role Router Integration Tests (PGlite) > list - Get all roles > should handle empty roles list in new organization
 FAIL  |integration| src/integration-tests/role.integration.test.ts > Role Router Integration Tests (PGlite) > list - Get all roles > should enforce organization scoping
 FAIL  |integration| src/integration-tests/role.integration.test.ts > Role Router Integration Tests (PGlite) > list - Get all roles > should handle database errors gracefully
 FAIL  |integration| src/integration-tests/role.integration.test.ts > Role Router Integration Tests (PGlite) > create - Create new role > should create role with template
 FAIL  |integration| src/integration-tests/role.integration.test.ts > Role Router Integration Tests (PGlite) > create - Create new role > should create custom role without template
 FAIL  |integration| src/integration-tests/role.integration.test.ts > Role Router Integration Tests (PGlite) > create - Create new role > should create role without permissions
 FAIL  |integration| src/integration-tests/role.integration.test.ts > Role Router Integration Tests (PGlite) > create - Create new role > should enforce organization scoping in role creation
 FAIL  |integration| src/integration-tests/role.integration.test.ts > Role Router Integration Tests (PGlite) > create - Create new role > should throw error for invalid template
 FAIL  |integration| src/integration-tests/role.integration.test.ts > Role Router Integration Tests (PGlite) > update - Update existing role > should update role name
 FAIL  |integration| src/integration-tests/role.integration.test.ts > Role Router Integration Tests (PGlite) > update - Update existing role > should update role permissions
 FAIL  |integration| src/integration-tests/role.integration.test.ts > Role Router Integration Tests (PGlite) > update - Update existing role > should update role default status
 FAIL  |integration| src/integration-tests/role.integration.test.ts > Role Router Integration Tests (PGlite) > update - Update existing role > should update multiple properties
 FAIL  |integration| src/integration-tests/role.integration.test.ts > Role Router Integration Tests (PGlite) > update - Update existing role > should throw error for nonexistent role
 FAIL  |integration| src/integration-tests/role.integration.test.ts > Role Router Integration Tests (PGlite) > delete - Delete role > should delete role successfully
 FAIL  |integration| src/integration-tests/role.integration.test.ts > Role Router Integration Tests (PGlite) > delete - Delete role > should prevent deletion of system admin role
 FAIL  |integration| src/integration-tests/role.integration.test.ts > Role Router Integration Tests (PGlite) > delete - Delete role > should handle nonexistent role deletion
 FAIL  |integration| src/integration-tests/role.integration.test.ts > Role Router Integration Tests (PGlite) > get - Get specific role > should return role with permissions and member count
 FAIL  |integration| src/integration-tests/role.integration.test.ts > Role Router Integration Tests (PGlite) > get - Get specific role > should throw NOT_FOUND if role does not exist
 FAIL  |integration| src/integration-tests/role.integration.test.ts > Role Router Integration Tests (PGlite) > get - Get specific role > should enforce organization scoping
 FAIL  |integration| src/integration-tests/role.integration.test.ts > Role Router Integration Tests (PGlite) > getPermissions - Get all available permissions > should return all permissions ordered by name
 FAIL  |integration| src/integration-tests/role.integration.test.ts > Role Router Integration Tests (PGlite) > getPermissions - Get all available permissions > should return consistent permissions across calls
 FAIL  |integration| src/integration-tests/role.integration.test.ts > Role Router Integration Tests (PGlite) > getTemplates - Get role templates > should return available role templates
 FAIL  |integration| src/integration-tests/role.integration.test.ts > Role Router Integration Tests (PGlite) > assignToUser - Assign role to user > should assign role to user successfully
 FAIL  |integration| src/integration-tests/role.integration.test.ts > Role Router Integration Tests (PGlite) > assignToUser - Assign role to user > should throw NOT_FOUND if target role does not exist
 FAIL  |integration| src/integration-tests/role.integration.test.ts > Role Router Integration Tests (PGlite) > assignToUser - Assign role to user > should throw NOT_FOUND if user is not organization member
 FAIL  |integration| src/integration-tests/role.integration.test.ts > Role Router Integration Tests (PGlite) > assignToUser - Assign role to user > should throw PRECONDITION_FAILED if validation fails
 FAIL  |integration| src/integration-tests/role.integration.test.ts > Role Router Integration Tests (PGlite) > assignToUser - Assign role to user > should call validation with correct parameters
 FAIL  |integration| src/integration-tests/role.integration.test.ts > Role Router Integration Tests (PGlite) > assignToUser - Assign role to user > should enforce organization scoping in all queries
 FAIL  |integration| src/integration-tests/role.integration.test.ts > Role Router Integration Tests (PGlite) > Multi-tenant isolation > should enforce organization scoping across all endpoints
 FAIL  |integration| src/integration-tests/role.integration.test.ts > Role Router Integration Tests (PGlite) > Permission validation > should require role:manage permission for mutations
 FAIL  |integration| src/integration-tests/role.integration.test.ts > Role Router Integration Tests (PGlite) > Permission validation > should allow organization:manage permission for queries
TypeError: Cannot read properties of undefined (reading 'referencedTable')
 ❯ normalizeRelation node_modules/src/relations.ts:571:74
 ❯ PgDialect.buildRelationalQueryWithoutPK node_modules/src/pg-core/dialect.ts:1283:32
 ❯ PgDialect.buildRelationalQueryWithoutPK node_modules/src/pg-core/dialect.ts:1295:32
 ❯ QueryPromise._getQuery node_modules/src/pg-core/query-builders/query.ts:117:23
 ❯ QueryPromise._toSQL node_modules/src/pg-core/query-builders/query.ts:134:22
 ❯ node_modules/src/pg-core/query-builders/query.ts:92:39
 ❯ Object.startActiveSpan node_modules/src/tracing.ts:27:11
 ❯ QueryPromise._prepare node_modules/src/pg-core/query-builders/query.ts:91:17
 ❯ node_modules/src/pg-core/query-builders/query.ts:154:16
 ❯ Object.startActiveSpan node_modules/src/tracing.ts:27:11

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[3/373]⎯

 FAIL  |integration| src/integration-tests/comment.integration.test.ts > Comment Router Integration (PGlite) > getForIssue > should get comments for an issue with author info
AssertionError: expected [] to have a length of 2 but got +0

[32m- Expected[39m
[31m+ Received[39m

[32m- 2[39m
[31m+ 0[39m

 ❯ src/integration-tests/comment.integration.test.ts:136:24
    134|         });
    135| 
    136|         expect(result).toHaveLength(2); // Should exclude deleted comm…
       |                        ^
    137| 
    138|         // Comments are ordered by createdAt, so the first one should …
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[4/373]⎯

 FAIL  |integration| src/integration-tests/comment.integration.test.ts > Comment Router Integration (PGlite) > getForIssue > should order comments by creation date
AssertionError: expected [] to have a length of 2 but got +0

[32m- Expected[39m
[31m+ Received[39m

[32m- 2[39m
[31m+ 0[39m

 ❯ src/integration-tests/comment.integration.test.ts:243:24
    241|         });
    242| 
    243|         expect(result).toHaveLength(2);
       |                        ^
    244|         expect(result[0].createdAt.getTime()).toBeLessThanOrEqual(
    245|           result[1].createdAt.getTime(),
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[5/373]⎯

 FAIL  |integration| src/integration-tests/comment.integration.test.ts > Comment Router Integration (PGlite) > getForIssue > should maintain organizational scoping
AssertionError: expected [] to have a length of 1 but got +0

[32m- Expected[39m
[31m+ Received[39m

[32m- 1[39m
[31m+ 0[39m

 ❯ src/integration-tests/comment.integration.test.ts:303:24
    301| 
    302|         // Should only get comments from our organization's issue
    303|         expect(result).toHaveLength(1);
       |                        ^
    304|         expect(result.find((c) => c.id === comment2Id)).toBeDefined();
    305|       });
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[6/373]⎯

 FAIL  |integration| src/integration-tests/comment.integration.test.ts > Comment Router Integration (PGlite) > delete (soft delete) > should soft delete a comment successfully
TRPCError: You don't have permission to access this organization
 ❯ src/server/api/trpc.base.ts:355:13
    353| 
    354|     if (!membership) {
    355|       throw new TRPCError({
       |             ^
    356|         code: "FORBIDDEN",
    357|         message: "You don't have permission to access this organizatio…
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ src/server/api/trpc.base.ts:238:22
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ procedure node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:673:20
 ❯ node_modules/@trpc/server/src/unstable-core-do-not-import/router.ts:473:20
 ❯ src/integration-tests/comment.integration.test.ts:348:24
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[7/373]⎯

 FAIL  |integration| src/integration-tests/comment.integration.test.ts > Comment Router Integration (PGlite) > delete (soft delete) > should throw NOT_FOUND for non-existent comment
AssertionError: expected [Function] to throw error including 'Comment not found' but got 'You don\'t have permission to access …'

Expected: [32m"Comment not found"[39m
Received: [31m"You don't have permission to access this organization"[39m

 ❯ src/integration-tests/comment.integration.test.ts:402:9
    400|         const caller = appRouter.createCaller(testContext);
    401| 
    402|         await expect(
       |         ^
    403|           caller.comment.delete({ commentId: "nonexistent" }),
    404|         ).rejects.toThrow("Comment not found");
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[8/373]⎯

 FAIL  |integration| src/integration-tests/comment.integration.test.ts > Comment Router Integration (PGlite) > delete (soft delete) > should throw FORBIDDEN for comment not in user's organization
AssertionError: expected [Function] to throw error including 'Comment not in organization' but got 'You don\'t have permission to access …'

Expected: [32m"[7mComment not in[27m organization"[39m
Received: [31m"[7mYou don't have permission to access this[27m organization"[39m

 ❯ src/integration-tests/comment.integration.test.ts:440:9
    438|         });
    439| 
    440|         await expect(
       |         ^
    441|           caller.comment.delete({ commentId: otherCommentId }),
    442|         ).rejects.toThrow("Comment not in organization");
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[9/373]⎯

 FAIL  |integration| src/integration-tests/comment.integration.test.ts > Comment Router Integration (PGlite) > getDeleted (admin) > should get deleted comments for organization managers
TRPCError: You don't have permission to access this organization
 ❯ src/server/api/trpc.base.ts:355:13
    353| 
    354|     if (!membership) {
    355|       throw new TRPCError({
       |             ^
    356|         code: "FORBIDDEN",
    357|         message: "You don't have permission to access this organizatio…
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ src/server/api/trpc.base.ts:238:22
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ procedure node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:673:20
 ❯ node_modules/@trpc/server/src/unstable-core-do-not-import/router.ts:473:20
 ❯ src/integration-tests/comment.integration.test.ts:497:24
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[10/373]⎯

 FAIL  |integration| src/integration-tests/comment.integration.test.ts > Comment Router Integration (PGlite) > getDeleted (admin) > should maintain organizational scoping
TRPCError: You don't have permission to access this organization
 ❯ src/server/api/trpc.base.ts:355:13
    353| 
    354|     if (!membership) {
    355|       throw new TRPCError({
       |             ^
    356|         code: "FORBIDDEN",
    357|         message: "You don't have permission to access this organizatio…
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ src/server/api/trpc.base.ts:238:22
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ procedure node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:673:20
 ❯ node_modules/@trpc/server/src/unstable-core-do-not-import/router.ts:473:20
 ❯ src/integration-tests/comment.integration.test.ts:581:24
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[11/373]⎯

 FAIL  |integration| src/integration-tests/comment.integration.test.ts > Comment Router Integration (PGlite) > restore (admin) > should restore a deleted comment
TRPCError: You don't have permission to access this organization
 ❯ src/server/api/trpc.base.ts:355:13
    353| 
    354|     if (!membership) {
    355|       throw new TRPCError({
       |             ^
    356|         code: "FORBIDDEN",
    357|         message: "You don't have permission to access this organizatio…
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ src/server/api/trpc.base.ts:238:22
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ procedure node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:673:20
 ❯ node_modules/@trpc/server/src/unstable-core-do-not-import/router.ts:473:20
 ❯ src/integration-tests/comment.integration.test.ts:632:24
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[12/373]⎯

 FAIL  |integration| src/integration-tests/comment.integration.test.ts > Comment Router Integration (PGlite) > getCleanupStats (admin) > should get cleanup statistics
TRPCError: You don't have permission to access this organization
 ❯ src/server/api/trpc.base.ts:355:13
    353| 
    354|     if (!membership) {
    355|       throw new TRPCError({
       |             ^
    356|         code: "FORBIDDEN",
    357|         message: "You don't have permission to access this organizatio…
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ src/server/api/trpc.base.ts:238:22
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ procedure node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:673:20
 ❯ node_modules/@trpc/server/src/unstable-core-do-not-import/router.ts:473:20
 ❯ src/integration-tests/comment.integration.test.ts:723:24
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[13/373]⎯

 FAIL  |integration| src/integration-tests/comment.integration.test.ts > Comment Router Integration (PGlite) > Complex Integration Scenarios > should handle concurrent soft delete operations correctly
TRPCError: You don't have permission to access this organization
 ❯ src/server/api/trpc.base.ts:355:13
    353| 
    354|     if (!membership) {
    355|       throw new TRPCError({
       |             ^
    356|         code: "FORBIDDEN",
    357|         message: "You don't have permission to access this organizatio…
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ src/server/api/trpc.base.ts:238:22
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ procedure node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:673:20
 ❯ node_modules/@trpc/server/src/unstable-core-do-not-import/router.ts:473:20
 ❯ src/integration-tests/comment.integration.test.ts:780:36
 ❯ src/test/helpers/worker-scoped-db.ts:103:22

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[14/373]⎯

 FAIL  |integration| src/integration-tests/comment.integration.test.ts > Comment Router Integration (PGlite) > Complex Integration Scenarios > should maintain referential integrity across service operations
TRPCError: You don't have permission to access this organization
 ❯ src/server/api/trpc.base.ts:355:13
    353| 
    354|     if (!membership) {
    355|       throw new TRPCError({
       |             ^
    356|         code: "FORBIDDEN",
    357|         message: "You don't have permission to access this organizatio…
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ src/server/api/trpc.base.ts:238:22
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ procedure node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:673:20
 ❯ node_modules/@trpc/server/src/unstable-core-do-not-import/router.ts:473:20
 ❯ src/integration-tests/comment.integration.test.ts:846:9
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[15/373]⎯

 FAIL  |integration| src/integration-tests/cross-org-isolation.test.ts > Cross-Organization Isolation > Basic Organizational Isolation > users can only see data from their own organization
AssertionError: expected false to be true // Object.is equality

[32m- Expected[39m
[31m+ Received[39m

[32m- true[39m
[31m+ false[39m

 ❯ src/integration-tests/cross-org-isolation.test.ts:102:15
    100|                 (issue) => issue.organizationId === org1.organization.…
    101|               ),
    102|             ).toBe(true);
       |               ^
    103|             expect(
    104|               machines.every(
 ❯ withRLSContext src/test/helpers/rls-test-context.ts:276:12
 ❯ src/integration-tests/cross-org-isolation.test.ts:88:9
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[16/373]⎯

 FAIL  |integration| src/integration-tests/cross-org-isolation.test.ts > Cross-Organization Isolation > Basic Organizational Isolation > cross-organization data queries return empty results
AssertionError: expected [ { …(16) }, { …(16) }, { …(16) } ] to have a length of +0 but got 3

[32m- Expected[39m
[31m+ Received[39m

[32m- 0[39m
[31m+ 3[39m

 ❯ src/integration-tests/cross-org-isolation.test.ts:177:32
    175| 
    176|             // Should return empty - RLS blocks access
    177|             expect(org2Issues).toHaveLength(0);
       |                                ^
    178|           },
    179|         );
 ❯ withRLSContext src/test/helpers/rls-test-context.ts:276:12
 ❯ src/integration-tests/cross-org-isolation.test.ts:167:9
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[17/373]⎯

 FAIL  |integration| src/integration-tests/cross-org-isolation.test.ts > Cross-Organization Isolation > Basic Organizational Isolation > organizational isolation verification utility works correctly
AssertionError: expected false to be true // Object.is equality

[32m- Expected[39m
[31m+ Received[39m

[32m- true[39m
[31m+ false[39m

 ❯ src/integration-tests/cross-org-isolation.test.ts:215:45
    213|         );
    214| 
    215|         expect(isolation.isolationEnforced).toBe(true);
       |                                             ^
    216|         expect(isolation.org1Results).toHaveLength(4);
    217|         expect(isolation.org2Results).toHaveLength(2);
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[18/373]⎯

 FAIL  |integration| src/integration-tests/cross-org-isolation.test.ts > Cross-Organization Isolation > Complex Relational Queries > joins across related tables maintain organizational isolation
AssertionError: expected false to be true // Object.is equality

[32m- Expected[39m
[31m+ Received[39m

[32m- true[39m
[31m+ false[39m

 ❯ src/integration-tests/cross-org-isolation.test.ts:274:15
    272|                 (issue) => issue.organizationId === org1.organization.…
    273|               ),
    274|             ).toBe(true);
       |               ^
    275| 
    276|             // All related entities should also belong to org1
 ❯ withRLSContext src/test/helpers/rls-test-context.ts:276:12
 ❯ src/integration-tests/cross-org-isolation.test.ts:251:9
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[19/373]⎯

 FAIL  |integration| src/integration-tests/cross-org-isolation.test.ts > Cross-Organization Isolation > Complex Relational Queries > aggregation queries respect organizational boundaries
AssertionError: expected [ { …(16) }, { …(16) }, …(19) ] to have a length of 7 but got 21

[32m- Expected[39m
[31m+ Received[39m

[32m- 7[39m
[31m+ 21[39m

 ❯ src/integration-tests/cross-org-isolation.test.ts:318:32
    316|           async (db) => {
    317|             const issueCount = await db.query.issues.findMany();
    318|             expect(issueCount).toHaveLength(7); // Only org1's issues
       |                                ^
    319|           },
    320|         );
 ❯ withRLSContext src/test/helpers/rls-test-context.ts:276:12
 ❯ src/integration-tests/cross-org-isolation.test.ts:312:9
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[20/373]⎯

 FAIL  |integration| src/integration-tests/cross-org-isolation.test.ts > Cross-Organization Isolation > Permission Boundary Enforcement > different user roles see appropriate data within organization
AssertionError: expected false to be true // Object.is equality

[32m- Expected[39m
[31m+ Received[39m

[32m- true[39m
[31m+ false[39m

 ❯ src/integration-tests/cross-org-isolation.test.ts:379:58
    377|           r.operation.startsWith("read_"),
    378|         );
    379|         expect(memberReadResults.every((r) => r.passed)).toBe(true);
       |                                                          ^
    380|       });
    381|     });
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[21/373]⎯

 FAIL  |integration| src/integration-tests/cross-org-isolation.test.ts > Cross-Organization Isolation > Permission Boundary Enforcement > cross-organization access attempts are blocked
AssertionError: expected false to be true // Object.is equality

[32m- Expected[39m
[31m+ Received[39m

[32m- true[39m
[31m+ false[39m

 ❯ src/integration-tests/cross-org-isolation.test.ts:396:66
    394| 
    395|         // All cross-org access attempts should be blocked
    396|         expect(crossOrgResults.every((result) => result.passed)).toBe(…
       |                                                                  ^
    397|         expect(crossOrgResults.every((result) => result.wasBlocked)).t…
    398|       });
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[22/373]⎯

 FAIL  |integration| src/integration-tests/cross-org-isolation.test.ts > Cross-Organization Isolation > Supabase Authentication Integration > Supabase auth context properly sets organizational boundaries
AssertionError: expected [ { …(16) }, { …(16) }, …(15) ] to have a length of 4 but got 17

[32m- Expected[39m
[31m+ Received[39m

[32m- 4[39m
[31m+ 17[39m

 ❯ role src/integration-tests/cross-org-isolation.test.ts:421:28
    419| 
    420|             // Should only see org1 issues
    421|             expect(issues).toHaveLength(4);
       |                            ^
    422|             expect(
    423|               issues.every(
 ❯ withRLSContext src/test/helpers/rls-test-context.ts:276:12
 ❯ src/test/helpers/rls-test-context.ts:317:14
 ❯ withTestUser src/test/helpers/rls-test-context.ts:234:20
 ❯ withFullRLSContext src/test/helpers/rls-test-context.ts:313:10
 ❯ src/integration-tests/cross-org-isolation.test.ts:413:9

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[23/373]⎯

 FAIL  |integration| src/integration-tests/cross-org-isolation.test.ts > Cross-Organization Isolation > Supabase Authentication Integration > authentication helpers create proper test contexts
AssertionError: expected [ { …(16) }, { …(16) }, …(10) ] to have a length of 2 but got 12

[32m- Expected[39m
[31m+ Received[39m

[32m- 2[39m
[31m+ 12[39m

 ❯ src/integration-tests/cross-org-isolation.test.ts:478:32
    476|               async (db) => {
    477|                 const issues = await db.query.issues.findMany();
    478|                 expect(issues).toHaveLength(2);
       |                                ^
    479|               },
    480|             );
 ❯ withRLSContext src/test/helpers/rls-test-context.ts:276:12
 ❯ role src/integration-tests/cross-org-isolation.test.ts:472:13
 ❯ withTestUser src/test/helpers/rls-test-context.ts:234:20
 ❯ src/integration-tests/cross-org-isolation.test.ts:468:9
 ❯ src/test/helpers/worker-scoped-db.ts:103:22

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[24/373]⎯

 FAIL  |integration| src/integration-tests/cross-org-isolation.test.ts > Cross-Organization Isolation > Performance and Security Auditing > RLS queries perform within acceptable thresholds
AssertionError: expected 366.7592307955503 to be less than 100
 ❯ src/integration-tests/cross-org-isolation.test.ts:513:42
    511| 
    512|           // RLS overhead should be reasonable (less than 100% overhea…
    513|           expect(perfResult.rlsOverhead).toBeLessThan(100);
       |                                          ^
    514| 
    515|           // Query time should be reasonable (less than 100ms)
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[25/373]⎯

 FAIL  |integration| src/integration-tests/cross-org-isolation.test.ts > Cross-Organization Isolation > Performance and Security Auditing > comprehensive security audit passes
Error: Failed query: insert into "machines" ("id", "name", "organizationId", "locationId", "modelId", "ownerId", "ownerNotificationsEnabled", "notifyOnNewIssues", "notifyOnStatusChanges", "notifyOnComments", "qrCodeId", "qrCodeUrl", "qrCodeGeneratedAt", "createdAt", "updatedAt") values ($1, $2, $3, $4, default, default, default, default, default, default, $5, default, default, $6, $7)
params: audit-machine-test-org-audit1-1,Audit Machine 1,test-org-audit1,audit-location-test-org-audit1-1,audit-qr-test-org-audit1-1,2025-08-22T23:38:59.453Z,2025-08-22T23:38:59.453Z
 ❯ PglitePreparedQuery.queryWithCache node_modules/src/pg-core/session.ts:73:11
 ❯ createAuditTestData src/test/helpers/multi-tenant-test-helpers.ts:607:5
    605|   // Create machines
    606|   for (let i = 1; i <= dataSize.machines; i++) {
    607|     await db.insert(schema.machines).values({
       |     ^
    608|       id: `audit-machine-${org.organization.id}-${String(i)}`,
    609|       name: `Audit Machine ${String(i)}`,
 ❯ auditMultiTenantSecurity src/test/helpers/multi-tenant-test-helpers.ts:129:5
 ❯ src/integration-tests/cross-org-isolation.test.ts:524:29
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

Caused by: error: null value in column "modelId" of relation "machines" violates not-null constraint
 ❯ ye.Ve node_modules/@electric-sql/pg-protocol/src/parser.ts:432:11
 ❯ ye.nt node_modules/@electric-sql/pg-protocol/src/parser.ts:210:16
 ❯ ye.parse node_modules/@electric-sql/pg-protocol/src/parser.ts:102:25
 ❯ ue.execProtocol node_modules/@electric-sql/pglite/src/pglite.ts:700:26
 ❯ ue.y node_modules/@electric-sql/pglite/src/base.ts:141:12
 ❯ node_modules/@electric-sql/pglite/src/base.ts:278:13

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { length: 411, severity: 'ERROR', code: '23502', detail: 'Failing row contains (audit-machine-test-org-audit1-1, Audit Machine 1, test-org-audit1, audit-location-test-org-audit1-1, null, null, t, t, t, f, audit-qr-test-org-audit1-1, null, null, 2025-08-22 23:38:59.453, 2025-08-22 23:38:59.453).', hint: undefined, position: undefined, internalPosition: undefined, internalQuery: undefined, where: undefined, schema: 'public', table: 'machines', dataType: undefined, constraint: undefined, file: 'execMain.c', routine: 'ExecConstraints', query: 'insert into "machines" ("id", "name", "organizationId", "locationId", "modelId", "ownerId", "ownerNotificationsEnabled", "notifyOnNewIssues", "notifyOnStatusChanges", "notifyOnComments", "qrCodeId", "qrCodeUrl", "qrCodeGeneratedAt", "createdAt", "updatedAt") values ($1, $2, $3, $4, default, default, default, default, default, default, $5, default, default, $6, $7)', params: [ 'audit-machine-test-org-audit1-1', 'Audit Machine 1', 'test-org-audit1', 'audit-location-test-org-audit1-1', 'audit-qr-test-org-audit1-1', '2025-08-22T23:38:59.453Z', '2025-08-22T23:38:59.453Z' ], queryOptions: { rowMode: 'object', parsers: { '1082': 'Function<1082>', '1114': 'Function<1114>', '1115': 'Function<1115>', '1182': 'Function<1182>', '1184': 'Function<1184>', '1185': 'Function<1185>', '1186': 'Function<1186>', '1187': 'Function<1187>', '1231': 'Function<1231>' } } }
⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[26/373]⎯

 FAIL  |integration| src/integration-tests/cross-org-isolation.test.ts > Cross-Organization Isolation > Performance and Security Auditing > RLS policies are properly configured
AssertionError: expected false to be true // Object.is equality

[32m- Expected[39m
[31m+ Received[39m

[32m- true[39m
[31m+ false[39m

 ❯ src/integration-tests/cross-org-isolation.test.ts:549:49
    547| 
    548|         // All organization-scoped tables should have RLS enabled
    549|         expect(policyValidation.policiesActive).toBe(true);
       |                                                 ^
    550|         expect(policyValidation.tablesWithoutRLS).toHaveLength(0);
    551| 
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[27/373]⎯

 FAIL  |integration| src/integration-tests/cross-org-isolation.test.ts > Cross-Organization Isolation > Test Pattern Validation > predefined test patterns work correctly
AssertionError: expected 420.7389888292841 to be less than 100
 ❯ src/integration-tests/cross-org-isolation.test.ts:570:45
    568|         const perfResults =
    569|           await MultiTenantTestPatterns.performanceRegression(db);
    570|         expect(perfResults.averageOverhead).toBeLessThan(100);
       |                                             ^
    571|         expect(perfResults.maxOverhead).toBeLessThan(200);
    572| 
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[28/373]⎯

 FAIL  |integration| src/integration-tests/cross-org-isolation.test.ts > Cross-Organization Isolation > Test Pattern Validation > organization test scenarios create proper isolation
AssertionError: expected false to be true // Object.is equality

[32m- Expected[39m
[31m+ Received[39m

[32m- true[39m
[31m+ false[39m

 ❯ src/integration-tests/cross-org-isolation.test.ts:616:15
    614|             expect(
    615|               issues.every((i) => i.organizationId === org.organizatio…
    616|             ).toBe(true);
       |               ^
    617|             expect(
    618|               machines.every((m) => m.organizationId === org.organizat…
 ❯ withRLSContext src/test/helpers/rls-test-context.ts:276:12
 ❯ src/integration-tests/cross-org-isolation.test.ts:600:9
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[29/373]⎯

 FAIL  |integration| src/integration-tests/cross-org-isolation.test.ts > Cross-Organization Isolation > Edge Cases and Error Handling > handles invalid organization context
AssertionError: expected [ { …(16) }, { …(16) }, …(10) ] to have a length of +0 but got 12

[32m- Expected[39m
[31m+ Received[39m

[32m- 0[39m
[31m+ 12[39m

 ❯ src/integration-tests/cross-org-isolation.test.ts:659:28
    657|           async (db) => {
    658|             const issues = await db.query.issues.findMany();
    659|             expect(issues).toHaveLength(0);
       |                            ^
    660|           },
    661|         );
 ❯ withRLSContext src/test/helpers/rls-test-context.ts:276:12
 ❯ src/integration-tests/cross-org-isolation.test.ts:653:9
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[30/373]⎯

 FAIL  |integration| src/integration-tests/cross-org-isolation.test.ts > Cross-Organization Isolation > Edge Cases and Error Handling > handles concurrent multi-organization access
AssertionError: expected [ …(3) ] to deeply equal [ …(3) ]

[32m- Expected[39m
[31m+ Received[39m

[2m  [[22m
[2m    {[22m
[32m-     "count": 3,[39m
[31m+     "count": 19,[39m
[2m      "org": "test-org-1",[22m
[2m    },[22m
[2m    {[22m
[32m-     "count": 2,[39m
[31m+     "count": 19,[39m
[2m      "org": "test-org-2",[22m
[2m    },[22m
[2m    {[22m
[32m-     "count": 4,[39m
[31m+     "count": 19,[39m
[2m      "org": "test-org-3",[22m
[2m    },[22m
[2m  ][22m

 ❯ src/integration-tests/cross-org-isolation.test.ts:707:25
    705| 
    706|         // Each organization should see only its own data
    707|         expect(results).toEqual([
       |                         ^
    708|           { org: org1.organization.id, count: 3 },
    709|           { org: org2.organization.id, count: 2 },
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[31/373]⎯

 FAIL  |integration| src/integration-tests/cross-org-isolation.test.ts > Integration with Existing Test Infrastructure > RLS helpers integrate with worker-scoped database pattern
AssertionError: expected [ { …(16) }, { …(16) }, …(9) ] to have a length of 1 but got 11

[32m- Expected[39m
[31m+ Received[39m

[32m- 1[39m
[31m+ 11[39m

 ❯ src/integration-tests/cross-org-isolation.test.ts:732:26
    730|         async (db) => {
    731|           const issues = await db.query.issues.findMany();
    732|           expect(issues).toHaveLength(1);
       |                          ^
    733|           expect(issues[0].organizationId).toBe(org.organization.id);
    734|         },
 ❯ withRLSContext src/test/helpers/rls-test-context.ts:276:12
 ❯ src/integration-tests/cross-org-isolation.test.ts:726:7
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[32/373]⎯

 FAIL  |integration| src/integration-tests/cross-org-isolation.test.ts > Integration with Existing Test Infrastructure > memory usage remains stable across multiple RLS tests
AssertionError: expected [ { …(16) }, { …(16) }, …(10) ] to have a length of 2 but got 12

[32m- Expected[39m
[31m+ Received[39m

[32m- 2[39m
[31m+ 12[39m

 ❯ src/integration-tests/cross-org-isolation.test.ts:757:28
    755|           async (db) => {
    756|             const issues = await db.query.issues.findMany();
    757|             expect(issues).toHaveLength(2);
       |                            ^
    758|             expect(
    759|               issues.every(
 ❯ withRLSContext src/test/helpers/rls-test-context.ts:276:12
 ❯ src/integration-tests/cross-org-isolation.test.ts:751:9
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[33/373]⎯

 FAIL  |integration| src/integration-tests/cross-org-isolation.test.ts > Integration with Existing Test Infrastructure > RLS tests work with existing factory patterns
AssertionError: expected [ { …(16) }, { …(16) }, …(9) ] to have a length of 1 but got 11

[32m- Expected[39m
[31m+ Received[39m

[32m- 1[39m
[31m+ 11[39m

 ❯ src/integration-tests/cross-org-isolation.test.ts:796:26
    794|           const locations = await db.query.locations.findMany();
    795| 
    796|           expect(issues).toHaveLength(1);
       |                          ^
    797|           expect(machines).toHaveLength(1);
    798|           expect(locations).toHaveLength(1);
 ❯ withRLSContext src/test/helpers/rls-test-context.ts:276:12
 ❯ src/integration-tests/cross-org-isolation.test.ts:779:7
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[34/373]⎯

 FAIL  |integration| src/integration-tests/issue.timeline.integration.test.ts > Issue Timeline Router Integration (PGlite) > getTimeline > should get timeline with comments and activities for valid issue
AssertionError: expected { id: 'test-comment-1', …(5) } to match object { itemType: 'comment', …(4) }
(1 matching property omitted from actual)

[32m- Expected[39m
[31m+ Received[39m

[2m  {[22m
[32m-   "author": {[39m
[32m-     "id": Any<String>,[39m
[32m-     "name": Any<String>,[39m
[32m-   },[39m
[31m+   "author": null,[39m
[2m    "content": Any<String>,[22m
[2m    "id": Any<String>,[22m
[2m    "itemType": "comment",[22m
[2m    "timestamp": Any<Date>,[22m
[2m  }[22m

 ❯ src/integration-tests/issue.timeline.integration.test.ts:147:30
    145|         // Verify comment structure
    146|         const firstComment = comments[0];
    147|         expect(firstComment).toMatchObject({
       |                              ^
    148|           itemType: "comment",
    149|           id: expect.any(String),
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[35/373]⎯

 FAIL  |integration| src/integration-tests/issue.timeline.integration.test.ts > Issue Timeline Router Integration (PGlite) > getTimeline > should enforce organizational scoping
AssertionError: promise resolved "[ { id: 'other-org-comment', …(5) } ]" instead of rejecting

[32m- Expected:[39m 
Error {
  "message": "rejected promise",
}

[31m+ Received:[39m 
[
  {
    "author": null,
    "content": "Comment in other org",
    "createdAt": 2025-08-22T23:38:52.408Z,
    "id": "other-org-comment",
    "itemType": "comment",
    "timestamp": 2025-08-22T23:38:52.408Z,
  },
]

 ❯ src/integration-tests/issue.timeline.integration.test.ts:285:9
    283|         await expect(
    284|           caller.issue.timeline.getTimeline({ issueId: otherOrgIssue.i…
    285|         ).rejects.toThrow(
       |         ^
    286|           expect.objectContaining({
    287|             code: "NOT_FOUND",
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[36/373]⎯

 FAIL  |integration| src/integration-tests/issue.timeline.integration.test.ts > Issue Timeline Router Integration (PGlite) > getTimeline > should validate issue exists before calling service
TypeError: vi.mocked(...).mockReturnValue is not a function
 ❯ src/integration-tests/issue.timeline.integration.test.ts:575:11
    573|         vi.mocked(
    574|           testContext.services.createIssueActivityService,
    575|         ).mockReturnValue(mockService);
       |           ^
    576| 
    577|         // Test with non-existent issue
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[37/373]⎯

 FAIL  |integration| src/integration-tests/issue.timeline.integration.test.ts > Issue Timeline Router Integration (PGlite) > Service Integration > should properly integrate with IssueActivityService
TypeError: vi.mocked(...).mockReturnValue is not a function
 ❯ src/integration-tests/issue.timeline.integration.test.ts:622:11
    620|         vi.mocked(
    621|           testContext.services.createIssueActivityService,
    622|         ).mockReturnValue(realService);
       |           ^
    623| 
    624|         const result = await caller.issue.timeline.getTimeline({
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[38/373]⎯

 FAIL  |integration| src/integration-tests/issue.timeline.integration.test.ts > Issue Timeline Router Integration (PGlite) > Service Integration > should handle service errors gracefully
TypeError: vi.mocked(...).mockReturnValue is not a function
 ❯ src/integration-tests/issue.timeline.integration.test.ts:671:11
    669|         vi.mocked(
    670|           testContext.services.createIssueActivityService,
    671|         ).mockReturnValue(failingService);
       |           ^
    672| 
    673|         await expect(
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[39/373]⎯

 FAIL  |integration| src/integration-tests/location.crud.integration.test.ts > Location Router CRUD Operations (PGlite) > create > should create location with real database operations
Error: User not found in seeded data: test-user-tim
 ❯ Module.createSeededLocationTestContext src/test/helpers/createSeededLocationTestContext.ts:76:11
     74| 
     75|   if (!user) {
     76|     throw new Error(`User not found in seeded data: ${userId}`);
       |           ^
     77|   }
     78| 
 ❯ src/integration-tests/location.crud.integration.test.ts:63:25
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[40/373]⎯

 FAIL  |integration| src/integration-tests/location.crud.integration.test.ts > Location Router CRUD Operations (PGlite) > create > should enforce organizational isolation on create
Error: User not found in seeded data: test-user-tim
 ❯ Module.createSeededLocationTestContext src/test/helpers/createSeededLocationTestContext.ts:76:11
     74| 
     75|   if (!user) {
     76|     throw new Error(`User not found in seeded data: ${userId}`);
       |           ^
     77|   }
     78| 
 ❯ src/integration-tests/location.crud.integration.test.ts:100:32
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[41/373]⎯

 FAIL  |integration| src/integration-tests/location.crud.integration.test.ts > Location Router CRUD Operations (PGlite) > getAll > should get locations with machine relationships
Error: User not found in seeded data: test-user-tim
 ❯ Module.createSeededLocationTestContext src/test/helpers/createSeededLocationTestContext.ts:76:11
     74| 
     75|   if (!user) {
     76|     throw new Error(`User not found in seeded data: ${userId}`);
       |           ^
     77|   }
     78| 
 ❯ src/integration-tests/location.crud.integration.test.ts:144:25
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[42/373]⎯

 FAIL  |integration| src/integration-tests/location.crud.integration.test.ts > Location Router CRUD Operations (PGlite) > getAll > should order locations by name
Error: User not found in seeded data: test-user-tim
 ❯ Module.createSeededLocationTestContext src/test/helpers/createSeededLocationTestContext.ts:76:11
     74| 
     75|   if (!user) {
     76|     throw new Error(`User not found in seeded data: ${userId}`);
       |           ^
     77|   }
     78| 
 ❯ src/integration-tests/location.crud.integration.test.ts:186:25
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[43/373]⎯

 FAIL  |integration| src/integration-tests/location.crud.integration.test.ts > Location Router CRUD Operations (PGlite) > getAll > should maintain organizational scoping with multiple orgs
Error: User not found in seeded data: test-user-tim
 ❯ Module.createSeededLocationTestContext src/test/helpers/createSeededLocationTestContext.ts:76:11
     74| 
     75|   if (!user) {
     76|     throw new Error(`User not found in seeded data: ${userId}`);
       |           ^
     77|   }
     78| 
 ❯ src/integration-tests/location.crud.integration.test.ts:228:32
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[44/373]⎯

 FAIL  |integration| src/integration-tests/location.crud.integration.test.ts > Location Router CRUD Operations (PGlite) > update > should update location with real database persistence
Error: User not found in seeded data: test-user-tim
 ❯ Module.createSeededLocationTestContext src/test/helpers/createSeededLocationTestContext.ts:76:11
     74| 
     75|   if (!user) {
     76|     throw new Error(`User not found in seeded data: ${userId}`);
       |           ^
     77|   }
     78| 
 ❯ src/integration-tests/location.crud.integration.test.ts:271:25
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[45/373]⎯

 FAIL  |integration| src/integration-tests/location.crud.integration.test.ts > Location Router CRUD Operations (PGlite) > update > should prevent cross-organizational updates
Error: User not found in seeded data: test-user-tim
 ❯ Module.createSeededLocationTestContext src/test/helpers/createSeededLocationTestContext.ts:76:11
     74| 
     75|   if (!user) {
     76|     throw new Error(`User not found in seeded data: ${userId}`);
       |           ^
     77|   }
     78| 
 ❯ src/integration-tests/location.crud.integration.test.ts:310:25
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[46/373]⎯

 FAIL  |integration| src/integration-tests/location.crud.integration.test.ts > Location Router CRUD Operations (PGlite) > update > should handle partial updates correctly
Error: User not found in seeded data: test-user-tim
 ❯ Module.createSeededLocationTestContext src/test/helpers/createSeededLocationTestContext.ts:76:11
     74| 
     75|   if (!user) {
     76|     throw new Error(`User not found in seeded data: ${userId}`);
       |           ^
     77|   }
     78| 
 ❯ src/integration-tests/location.crud.integration.test.ts:351:25
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[47/373]⎯

 FAIL  |integration| src/integration-tests/location.crud.integration.test.ts > Location Router CRUD Operations (PGlite) > getById > should get location with complete relationship data
Error: User not found in seeded data: test-user-tim
 ❯ Module.createSeededLocationTestContext src/test/helpers/createSeededLocationTestContext.ts:76:11
     74| 
     75|   if (!user) {
     76|     throw new Error(`User not found in seeded data: ${userId}`);
       |           ^
     77|   }
     78| 
 ❯ src/integration-tests/location.crud.integration.test.ts:383:25
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[48/373]⎯

 FAIL  |integration| src/integration-tests/location.crud.integration.test.ts > Location Router CRUD Operations (PGlite) > getById > should enforce organizational scoping
Error: User not found in seeded data: test-user-tim
 ❯ Module.createSeededLocationTestContext src/test/helpers/createSeededLocationTestContext.ts:76:11
     74| 
     75|   if (!user) {
     76|     throw new Error(`User not found in seeded data: ${userId}`);
       |           ^
     77|   }
     78| 
 ❯ src/integration-tests/location.crud.integration.test.ts:432:25
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[49/373]⎯

 FAIL  |integration| src/integration-tests/location.crud.integration.test.ts > Location Router CRUD Operations (PGlite) > delete > should delete location after proper dependency cleanup
Error: User not found in seeded data: test-user-tim
 ❯ Module.createSeededLocationTestContext src/test/helpers/createSeededLocationTestContext.ts:76:11
     74| 
     75|   if (!user) {
     76|     throw new Error(`User not found in seeded data: ${userId}`);
       |           ^
     77|   }
     78| 
 ❯ src/integration-tests/location.crud.integration.test.ts:471:25
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[50/373]⎯

 FAIL  |integration| src/integration-tests/location.crud.integration.test.ts > Location Router CRUD Operations (PGlite) > delete > should prevent cross-organizational deletion
Error: User not found in seeded data: test-user-tim
 ❯ Module.createSeededLocationTestContext src/test/helpers/createSeededLocationTestContext.ts:76:11
     74| 
     75|   if (!user) {
     76|     throw new Error(`User not found in seeded data: ${userId}`);
       |           ^
     77|   }
     78| 
 ❯ src/integration-tests/location.crud.integration.test.ts:523:25
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[51/373]⎯

 FAIL  |integration| src/integration-tests/location.crud.integration.test.ts > Location Router CRUD Operations (PGlite) > setPinballMapId > should set PinballMap ID with database persistence
Error: User not found in seeded data: test-user-tim
 ❯ Module.createSeededLocationTestContext src/test/helpers/createSeededLocationTestContext.ts:76:11
     74| 
     75|   if (!user) {
     76|     throw new Error(`User not found in seeded data: ${userId}`);
       |           ^
     77|   }
     78| 
 ❯ src/integration-tests/location.crud.integration.test.ts:560:25
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[52/373]⎯

 FAIL  |integration| src/integration-tests/location.crud.integration.test.ts > Location Router CRUD Operations (PGlite) > setPinballMapId > should prevent cross-organizational PinballMap ID updates
Error: User not found in seeded data: test-user-tim
 ❯ Module.createSeededLocationTestContext src/test/helpers/createSeededLocationTestContext.ts:76:11
     74| 
     75|   if (!user) {
     76|     throw new Error(`User not found in seeded data: ${userId}`);
       |           ^
     77|   }
     78| 
 ❯ src/integration-tests/location.crud.integration.test.ts:593:25
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[53/373]⎯

 FAIL  |integration| src/integration-tests/location.integration.test.ts > Location Router - Schema & Performance Tests (PGlite) > Database Schema Validation > should maintain referential integrity
Error: User not found in seeded data: test-user-tim
 ❯ Module.createSeededLocationTestContext src/test/helpers/createSeededLocationTestContext.ts:76:11
     74| 
     75|   if (!user) {
     76|     throw new Error(`User not found in seeded data: ${userId}`);
       |           ^
     77|   }
     78| 
 ❯ src/integration-tests/location.integration.test.ts:62:26
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[54/373]⎯

 FAIL  |integration| src/integration-tests/location.integration.test.ts > Location Router - Schema & Performance Tests (PGlite) > Database Schema Validation > should handle timestamps correctly
Error: User not found in seeded data: test-user-tim
 ❯ Module.createSeededLocationTestContext src/test/helpers/createSeededLocationTestContext.ts:76:11
     74| 
     75|   if (!user) {
     76|     throw new Error(`User not found in seeded data: ${userId}`);
       |           ^
     77|   }
     78| 
 ❯ src/integration-tests/location.integration.test.ts:146:25
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[55/373]⎯

 FAIL  |integration| src/integration-tests/location.integration.test.ts > Location Router - Schema & Performance Tests (PGlite) > Performance & Query Optimization > should handle large datasets efficiently
Error: User not found in seeded data: test-user-tim
 ❯ Module.createSeededLocationTestContext src/test/helpers/createSeededLocationTestContext.ts:76:11
     74| 
     75|   if (!user) {
     76|     throw new Error(`User not found in seeded data: ${userId}`);
       |           ^
     77|   }
     78| 
 ❯ src/integration-tests/location.integration.test.ts:236:25
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[56/373]⎯

 FAIL  |integration| src/integration-tests/location.integration.test.ts > Location Router - Schema & Performance Tests (PGlite) > Performance & Query Optimization > should optimize getPublic aggregation queries
Error: User not found in seeded data: test-user-tim
 ❯ Module.createSeededLocationTestContext src/test/helpers/createSeededLocationTestContext.ts:76:11
     74| 
     75|   if (!user) {
     76|     throw new Error(`User not found in seeded data: ${userId}`);
       |           ^
     77|   }
     78| 
 ❯ src/integration-tests/location.integration.test.ts:291:25
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[57/373]⎯

 FAIL  |integration| src/integration-tests/location.integration.test.ts > Location Router - Schema & Performance Tests (PGlite) > Performance & Query Optimization > should handle concurrent operations efficiently
Error: User not found in seeded data: test-user-tim
 ❯ Module.createSeededLocationTestContext src/test/helpers/createSeededLocationTestContext.ts:76:11
     74| 
     75|   if (!user) {
     76|     throw new Error(`User not found in seeded data: ${userId}`);
       |           ^
     77|   }
     78| 
 ❯ src/integration-tests/location.integration.test.ts:373:25
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[58/373]⎯

 FAIL  |integration| src/integration-tests/location.services.integration.test.ts > Location Router Services Integration (PGlite) > syncWithPinballMap > should handle successful sync with service integration
Error: User not found in seeded data: test-user-tim
 ❯ Module.createSeededLocationTestContext src/test/helpers/createSeededLocationTestContext.ts:76:11
     74| 
     75|   if (!user) {
     76|     throw new Error(`User not found in seeded data: ${userId}`);
       |           ^
     77|   }
     78| 
 ❯ src/integration-tests/location.services.integration.test.ts:48:25
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[59/373]⎯

 FAIL  |integration| src/integration-tests/location.services.integration.test.ts > Location Router Services Integration (PGlite) > syncWithPinballMap > should handle service failures appropriately
Error: User not found in seeded data: test-user-tim
 ❯ Module.createSeededLocationTestContext src/test/helpers/createSeededLocationTestContext.ts:76:11
     74| 
     75|   if (!user) {
     76|     throw new Error(`User not found in seeded data: ${userId}`);
       |           ^
     77|   }
     78| 
 ❯ src/integration-tests/location.services.integration.test.ts:76:25
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[60/373]⎯

 FAIL  |integration| src/integration-tests/location.services.integration.test.ts > Location Router Services Integration (PGlite) > syncWithPinballMap > should prevent cross-organizational sync attempts
Error: User not found in seeded data: test-user-tim
 ❯ Module.createSeededLocationTestContext src/test/helpers/createSeededLocationTestContext.ts:76:11
     74| 
     75|   if (!user) {
     76|     throw new Error(`User not found in seeded data: ${userId}`);
       |           ^
     77|   }
     78| 
 ❯ src/integration-tests/location.services.integration.test.ts:104:32
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[61/373]⎯

 FAIL  |integration| src/integration-tests/location.services.integration.test.ts > Location Router Services Integration (PGlite) > Service Integration Patterns > should maintain service isolation between organizations
Error: User not found in seeded data: test-user-tim
 ❯ Module.createSeededLocationTestContext src/test/helpers/createSeededLocationTestContext.ts:76:11
     74| 
     75|   if (!user) {
     76|     throw new Error(`User not found in seeded data: ${userId}`);
       |           ^
     77|   }
     78| 
 ❯ src/integration-tests/location.services.integration.test.ts:145:32
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[62/373]⎯

 FAIL  |integration| src/integration-tests/location.services.integration.test.ts > Location Router Services Integration (PGlite) > Service Integration Patterns > should handle service dependency injection correctly
Error: User not found in seeded data: test-user-tim
 ❯ Module.createSeededLocationTestContext src/test/helpers/createSeededLocationTestContext.ts:76:11
     74| 
     75|   if (!user) {
     76|     throw new Error(`User not found in seeded data: ${userId}`);
       |           ^
     77|   }
     78| 
 ❯ src/integration-tests/location.services.integration.test.ts:176:25
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[63/373]⎯

 FAIL  |integration| src/integration-tests/machine.location.integration.test.ts > Machine Location Router Integration (PGlite) > moveToLocation > should successfully move machine to a different location
Error: User not found in seeded data: test-user-tim
 ❯ createSeededMachineTestContext src/test/helpers/createSeededMachineTestContext.ts:76:11
     74| 
     75|   if (!user) {
     76|     throw new Error(`User not found in seeded data: ${userId}`);
       |           ^
     77|   }
     78| 
 ❯ setupTestData src/integration-tests/machine.location.integration.test.ts:88:21
 ❯ src/integration-tests/machine.location.integration.test.ts:116:38
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[64/373]⎯

 FAIL  |integration| src/integration-tests/machine.location.integration.test.ts > Machine Location Router Integration (PGlite) > moveToLocation > should handle moves within the same location gracefully
Error: User not found in seeded data: test-user-tim
 ❯ createSeededMachineTestContext src/test/helpers/createSeededMachineTestContext.ts:76:11
     74| 
     75|   if (!user) {
     76|     throw new Error(`User not found in seeded data: ${userId}`);
       |           ^
     77|   }
     78| 
 ❯ setupTestData src/integration-tests/machine.location.integration.test.ts:88:21
 ❯ src/integration-tests/machine.location.integration.test.ts:165:38
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[65/373]⎯

 FAIL  |integration| src/integration-tests/machine.location.integration.test.ts > Machine Location Router Integration (PGlite) > moveToLocation > should move multiple machines between locations correctly
Error: User not found in seeded data: test-user-tim
 ❯ createSeededMachineTestContext src/test/helpers/createSeededMachineTestContext.ts:76:11
     74| 
     75|   if (!user) {
     76|     throw new Error(`User not found in seeded data: ${userId}`);
       |           ^
     77|   }
     78| 
 ❯ setupTestData src/integration-tests/machine.location.integration.test.ts:88:21
 ❯ src/integration-tests/machine.location.integration.test.ts:191:38
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[66/373]⎯

 FAIL  |integration| src/integration-tests/machine.location.integration.test.ts > Machine Location Router Integration (PGlite) > moveToLocation > should enforce organizational scoping for machine validation
Error: User not found in seeded data: test-user-tim
 ❯ createSeededMachineTestContext src/test/helpers/createSeededMachineTestContext.ts:76:11
     74| 
     75|   if (!user) {
     76|     throw new Error(`User not found in seeded data: ${userId}`);
       |           ^
     77|   }
     78| 
 ❯ setupTestData src/integration-tests/machine.location.integration.test.ts:88:21
 ❯ src/integration-tests/machine.location.integration.test.ts:244:38
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[67/373]⎯

 FAIL  |integration| src/integration-tests/machine.location.integration.test.ts > Machine Location Router Integration (PGlite) > moveToLocation > should enforce organizational scoping for location validation
Error: User not found in seeded data: test-user-tim
 ❯ createSeededMachineTestContext src/test/helpers/createSeededMachineTestContext.ts:76:11
     74| 
     75|   if (!user) {
     76|     throw new Error(`User not found in seeded data: ${userId}`);
       |           ^
     77|   }
     78| 
 ❯ setupTestData src/integration-tests/machine.location.integration.test.ts:88:21
 ❯ src/integration-tests/machine.location.integration.test.ts:264:38
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[68/373]⎯

 FAIL  |integration| src/integration-tests/machine.location.integration.test.ts > Machine Location Router Integration (PGlite) > moveToLocation > should handle non-existent machine IDs
Error: User not found in seeded data: test-user-tim
 ❯ createSeededMachineTestContext src/test/helpers/createSeededMachineTestContext.ts:76:11
     74| 
     75|   if (!user) {
     76|     throw new Error(`User not found in seeded data: ${userId}`);
       |           ^
     77|   }
     78| 
 ❯ setupTestData src/integration-tests/machine.location.integration.test.ts:88:21
 ❯ src/integration-tests/machine.location.integration.test.ts:282:38
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[69/373]⎯

 FAIL  |integration| src/integration-tests/machine.location.integration.test.ts > Machine Location Router Integration (PGlite) > moveToLocation > should handle non-existent location IDs
Error: User not found in seeded data: test-user-tim
 ❯ createSeededMachineTestContext src/test/helpers/createSeededMachineTestContext.ts:76:11
     74| 
     75|   if (!user) {
     76|     throw new Error(`User not found in seeded data: ${userId}`);
       |           ^
     77|   }
     78| 
 ❯ setupTestData src/integration-tests/machine.location.integration.test.ts:88:21
 ❯ src/integration-tests/machine.location.integration.test.ts:299:38
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[70/373]⎯

 FAIL  |integration| src/integration-tests/machine.location.integration.test.ts > Machine Location Router Integration (PGlite) > moveToLocation > should return complete machine data with all relationships
Error: User not found in seeded data: test-user-tim
 ❯ createSeededMachineTestContext src/test/helpers/createSeededMachineTestContext.ts:76:11
     74| 
     75|   if (!user) {
     76|     throw new Error(`User not found in seeded data: ${userId}`);
       |           ^
     77|   }
     78| 
 ❯ setupTestData src/integration-tests/machine.location.integration.test.ts:88:21
 ❯ src/integration-tests/machine.location.integration.test.ts:318:38
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[71/373]⎯

 FAIL  |integration| src/integration-tests/machine.location.integration.test.ts > Machine Location Router Integration (PGlite) > moveToLocation > should preserve machine properties during location move
Error: User not found in seeded data: test-user-tim
 ❯ createSeededMachineTestContext src/test/helpers/createSeededMachineTestContext.ts:76:11
     74| 
     75|   if (!user) {
     76|     throw new Error(`User not found in seeded data: ${userId}`);
       |           ^
     77|   }
     78| 
 ❯ setupTestData src/integration-tests/machine.location.integration.test.ts:88:21
 ❯ src/integration-tests/machine.location.integration.test.ts:371:38
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[72/373]⎯

 FAIL  |integration| src/integration-tests/machine.location.integration.test.ts > Machine Location Router Integration (PGlite) > Multi-Tenant Security Verification > should maintain complete isolation between organizations
Error: User not found in seeded data: test-user-tim
 ❯ createSeededMachineTestContext src/test/helpers/createSeededMachineTestContext.ts:76:11
     74| 
     75|   if (!user) {
     76|     throw new Error(`User not found in seeded data: ${userId}`);
       |           ^
     77|   }
     78| 
 ❯ setupTestData src/integration-tests/machine.location.integration.test.ts:88:21
 ❯ src/integration-tests/machine.location.integration.test.ts:419:38
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[73/373]⎯

 FAIL  |integration| src/integration-tests/machine.location.integration.test.ts > Machine Location Router Integration (PGlite) > Database Schema and Query Validation > should properly handle machine relationships in response
Error: User not found in seeded data: test-user-tim
 ❯ createSeededMachineTestContext src/test/helpers/createSeededMachineTestContext.ts:76:11
     74| 
     75|   if (!user) {
     76|     throw new Error(`User not found in seeded data: ${userId}`);
       |           ^
     77|   }
     78| 
 ❯ setupTestData src/integration-tests/machine.location.integration.test.ts:88:21
 ❯ src/integration-tests/machine.location.integration.test.ts:474:38
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[74/373]⎯

 FAIL  |integration| src/integration-tests/machine.location.integration.test.ts > Machine Location Router Integration (PGlite) > Database Schema and Query Validation > should handle database constraints and foreign keys correctly
Error: User not found in seeded data: test-user-tim
 ❯ createSeededMachineTestContext src/test/helpers/createSeededMachineTestContext.ts:76:11
     74| 
     75|   if (!user) {
     76|     throw new Error(`User not found in seeded data: ${userId}`);
       |           ^
     77|   }
     78| 
 ❯ setupTestData src/integration-tests/machine.location.integration.test.ts:88:21
 ❯ src/integration-tests/machine.location.integration.test.ts:512:38
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[75/373]⎯

 FAIL  |integration| src/integration-tests/machine.location.integration.test.ts > Machine Location Router Integration (PGlite) > Database Schema and Query Validation > should handle concurrent location moves correctly
Error: User not found in seeded data: test-user-tim
 ❯ createSeededMachineTestContext src/test/helpers/createSeededMachineTestContext.ts:76:11
     74| 
     75|   if (!user) {
     76|     throw new Error(`User not found in seeded data: ${userId}`);
       |           ^
     77|   }
     78| 
 ❯ setupTestData src/integration-tests/machine.location.integration.test.ts:88:21
 ❯ src/integration-tests/machine.location.integration.test.ts:554:38
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[76/373]⎯

 FAIL  |integration| src/integration-tests/machine.location.integration.test.ts > Machine Location Router Integration (PGlite) > Error Handling and Edge Cases > should return TRPCError instances with proper error codes
Error: User not found in seeded data: test-user-tim
 ❯ createSeededMachineTestContext src/test/helpers/createSeededMachineTestContext.ts:76:11
     74| 
     75|   if (!user) {
     76|     throw new Error(`User not found in seeded data: ${userId}`);
       |           ^
     77|   }
     78| 
 ❯ setupTestData src/integration-tests/machine.location.integration.test.ts:88:21
 ❯ src/integration-tests/machine.location.integration.test.ts:617:38
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[77/373]⎯

 FAIL  |integration| src/integration-tests/machine.location.integration.test.ts > Machine Location Router Integration (PGlite) > Error Handling and Edge Cases > should handle invalid location ID with proper error
Error: User not found in seeded data: test-user-tim
 ❯ createSeededMachineTestContext src/test/helpers/createSeededMachineTestContext.ts:76:11
     74| 
     75|   if (!user) {
     76|     throw new Error(`User not found in seeded data: ${userId}`);
       |           ^
     77|   }
     78| 
 ❯ setupTestData src/integration-tests/machine.location.integration.test.ts:88:21
 ❯ src/integration-tests/machine.location.integration.test.ts:640:38
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[78/373]⎯

 FAIL  |integration| src/integration-tests/machine.location.integration.test.ts > Machine Location Router Integration (PGlite) > Error Handling and Edge Cases > should handle empty string IDs gracefully
Error: User not found in seeded data: test-user-tim
 ❯ createSeededMachineTestContext src/test/helpers/createSeededMachineTestContext.ts:76:11
     74| 
     75|   if (!user) {
     76|     throw new Error(`User not found in seeded data: ${userId}`);
       |           ^
     77|   }
     78| 
 ❯ setupTestData src/integration-tests/machine.location.integration.test.ts:88:21
 ❯ src/integration-tests/machine.location.integration.test.ts:661:38
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[79/373]⎯

 FAIL  |integration| src/integration-tests/machine.location.integration.test.ts > Machine Location Router Integration (PGlite) > Error Handling and Edge Cases > should handle malformed input gracefully
Error: User not found in seeded data: test-user-tim
 ❯ createSeededMachineTestContext src/test/helpers/createSeededMachineTestContext.ts:76:11
     74| 
     75|   if (!user) {
     76|     throw new Error(`User not found in seeded data: ${userId}`);
       |           ^
     77|   }
     78| 
 ❯ setupTestData src/integration-tests/machine.location.integration.test.ts:88:21
 ❯ src/integration-tests/machine.location.integration.test.ts:681:38
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[80/373]⎯

 FAIL  |integration| src/integration-tests/machine.owner.integration.test.ts > machine.owner router integration tests > assignOwner mutation > success scenarios > should assign owner to machine successfully
Error: Missing seeded test users
 ❯ setupTestData src/integration-tests/machine.owner.integration.test.ts:93:13
     91| 
     92|     if (!testUser1 || !testUser2) {
     93|       throw new Error("Missing seeded test users");
       |             ^
     94|     }
     95| 
 ❯ src/integration-tests/machine.owner.integration.test.ts:118:47
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[81/373]⎯

 FAIL  |integration| src/integration-tests/machine.owner.integration.test.ts > machine.owner router integration tests > assignOwner mutation > success scenarios > should remove owner from machine successfully
Error: Missing seeded test users
 ❯ setupTestData src/integration-tests/machine.owner.integration.test.ts:93:13
     91| 
     92|     if (!testUser1 || !testUser2) {
     93|       throw new Error("Missing seeded test users");
       |             ^
     94|     }
     95| 
 ❯ src/integration-tests/machine.owner.integration.test.ts:158:47
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[82/373]⎯

 FAIL  |integration| src/integration-tests/machine.owner.integration.test.ts > machine.owner router integration tests > assignOwner mutation > success scenarios > should handle reassigning owner to different user
Error: Missing seeded test users
 ❯ setupTestData src/integration-tests/machine.owner.integration.test.ts:93:13
     91| 
     92|     if (!testUser1 || !testUser2) {
     93|       throw new Error("Missing seeded test users");
       |             ^
     94|     }
     95| 
 ❯ src/integration-tests/machine.owner.integration.test.ts:198:13
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[83/373]⎯

 FAIL  |integration| src/integration-tests/machine.owner.integration.test.ts > machine.owner router integration tests > assignOwner mutation > error scenarios > should throw NOT_FOUND when machine does not exist
Error: Missing seeded test users
 ❯ setupTestData src/integration-tests/machine.owner.integration.test.ts:93:13
     91| 
     92|     if (!testUser1 || !testUser2) {
     93|       throw new Error("Missing seeded test users");
       |             ^
     94|     }
     95| 
 ❯ src/integration-tests/machine.owner.integration.test.ts:246:38
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[84/373]⎯

 FAIL  |integration| src/integration-tests/machine.owner.integration.test.ts > machine.owner router integration tests > assignOwner mutation > error scenarios > should throw NOT_FOUND when machine belongs to different organization
TypeError: withIsolatedTest(...).returning is not a function
 ❯ src/integration-tests/machine.owner.integration.test.ts:274:12
    272|             where: eq(schema.organizations.id, org2Id),
    273|           });
    274|         }).returning();
       |            ^
    275| 
    276|         // Create a location in the second organization

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[85/373]⎯

 FAIL  |integration| src/integration-tests/machine.owner.integration.test.ts > machine.owner router integration tests > assignOwner mutation > should throw FORBIDDEN when user is not a member of organization
Error: Missing seeded test users
 ❯ setupTestData src/integration-tests/machine.owner.integration.test.ts:93:13
     91| 
     92|     if (!testUser1 || !testUser2) {
     93|       throw new Error("Missing seeded test users");
       |             ^
     94|     }
     95| 
 ❯ src/integration-tests/machine.owner.integration.test.ts:334:34
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[86/373]⎯

 FAIL  |integration| src/integration-tests/machine.owner.integration.test.ts > machine.owner router integration tests > input validation > should accept valid machineId
Error: Missing seeded test users
 ❯ setupTestData src/integration-tests/machine.owner.integration.test.ts:93:13
     91| 
     92|     if (!testUser1 || !testUser2) {
     93|       throw new Error("Missing seeded test users");
       |             ^
     94|     }
     95| 
 ❯ src/integration-tests/machine.owner.integration.test.ts:370:45
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[87/373]⎯

 FAIL  |integration| src/integration-tests/machine.owner.integration.test.ts > machine.owner router integration tests > input validation > should accept optional ownerId
Error: Missing seeded test users
 ❯ setupTestData src/integration-tests/machine.owner.integration.test.ts:93:13
     91| 
     92|     if (!testUser1 || !testUser2) {
     93|       throw new Error("Missing seeded test users");
       |             ^
     94|     }
     95| 
 ❯ src/integration-tests/machine.owner.integration.test.ts:385:45
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[88/373]⎯

 FAIL  |integration| src/integration-tests/machine.owner.integration.test.ts > machine.owner router integration tests > input validation > should handle empty string ownerId as removal
Error: Missing seeded test users
 ❯ setupTestData src/integration-tests/machine.owner.integration.test.ts:93:13
     91| 
     92|     if (!testUser1 || !testUser2) {
     93|       throw new Error("Missing seeded test users");
       |             ^
     94|     }
     95| 
 ❯ src/integration-tests/machine.owner.integration.test.ts:409:45
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[89/373]⎯

 FAIL  |integration| src/integration-tests/machine.owner.integration.test.ts > machine.owner router integration tests > organizational scoping and security > should only find machines within user's organization
Error: Missing seeded test users
 ❯ setupTestData src/integration-tests/machine.owner.integration.test.ts:93:13
     91| 
     92|     if (!testUser1 || !testUser2) {
     93|       throw new Error("Missing seeded test users");
       |             ^
     94|     }
     95| 
 ❯ src/integration-tests/machine.owner.integration.test.ts:435:45
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[90/373]⎯

 FAIL  |integration| src/integration-tests/machine.owner.integration.test.ts > machine.owner router integration tests > organizational scoping and security > should only validate membership within user's organization
Error: Missing seeded test users
 ❯ setupTestData src/integration-tests/machine.owner.integration.test.ts:93:13
     91| 
     92|     if (!testUser1 || !testUser2) {
     93|       throw new Error("Missing seeded test users");
       |             ^
     94|     }
     95| 
 ❯ src/integration-tests/machine.owner.integration.test.ts:452:45
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[91/373]⎯

 FAIL  |integration| src/integration-tests/machine.owner.integration.test.ts > machine.owner router integration tests > organizational scoping and security > should use correct organization context
Error: Missing seeded test users
 ❯ setupTestData src/integration-tests/machine.owner.integration.test.ts:93:13
     91| 
     92|     if (!testUser1 || !testUser2) {
     93|       throw new Error("Missing seeded test users");
       |             ^
     94|     }
     95| 
 ❯ src/integration-tests/machine.owner.integration.test.ts:472:13
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[92/373]⎯

 FAIL  |integration| src/integration-tests/machine.owner.integration.test.ts > machine.owner router integration tests > organizational scoping and security > should enforce organizational boundaries
Error: Missing seeded test users
 ❯ setupTestData src/integration-tests/machine.owner.integration.test.ts:93:13
     91| 
     92|     if (!testUser1 || !testUser2) {
     93|       throw new Error("Missing seeded test users");
       |             ^
     94|     }
     95| 
 ❯ src/integration-tests/machine.owner.integration.test.ts:614:34
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[93/373]⎯

 FAIL  |integration| src/integration-tests/machine.owner.integration.test.ts > machine.owner router integration tests > organizational scoping and security > should return only safe user data in owner relationship
Error: Missing seeded test users
 ❯ setupTestData src/integration-tests/machine.owner.integration.test.ts:93:13
     91| 
     92|     if (!testUser1 || !testUser2) {
     93|       throw new Error("Missing seeded test users");
       |             ^
     94|     }
     95| 
 ❯ src/integration-tests/machine.owner.integration.test.ts:659:45
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[94/373]⎯

 FAIL  |integration| src/integration-tests/machine.owner.integration.test.ts > machine.owner router integration tests > relationship loading > should load machine model relationship
Error: Missing seeded test users
 ❯ setupTestData src/integration-tests/machine.owner.integration.test.ts:93:13
     91| 
     92|     if (!testUser1 || !testUser2) {
     93|       throw new Error("Missing seeded test users");
       |             ^
     94|     }
     95| 
 ❯ src/integration-tests/machine.owner.integration.test.ts:684:45
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[95/373]⎯

 FAIL  |integration| src/integration-tests/machine.owner.integration.test.ts > machine.owner router integration tests > relationship loading > should load machine location relationship
Error: Missing seeded test users
 ❯ setupTestData src/integration-tests/machine.owner.integration.test.ts:93:13
     91| 
     92|     if (!testUser1 || !testUser2) {
     93|       throw new Error("Missing seeded test users");
       |             ^
     94|     }
     95| 
 ❯ src/integration-tests/machine.owner.integration.test.ts:707:45
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[96/373]⎯

 FAIL  |integration| src/integration-tests/machine.owner.integration.test.ts > machine.owner router integration tests > relationship loading > should handle null owner relationship
Error: Missing seeded test users
 ❯ setupTestData src/integration-tests/machine.owner.integration.test.ts:93:13
     91| 
     92|     if (!testUser1 || !testUser2) {
     93|       throw new Error("Missing seeded test users");
       |             ^
     94|     }
     95| 
 ❯ src/integration-tests/machine.owner.integration.test.ts:729:34
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[97/373]⎯

 FAIL  |integration| src/integration-tests/machine.owner.integration.test.ts > machine.owner router integration tests > data integrity and relationships > should maintain referential integrity
Error: Missing seeded test users
 ❯ setupTestData src/integration-tests/machine.owner.integration.test.ts:93:13
     91| 
     92|     if (!testUser1 || !testUser2) {
     93|       throw new Error("Missing seeded test users");
       |             ^
     94|     }
     95| 
 ❯ src/integration-tests/machine.owner.integration.test.ts:748:45
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[98/373]⎯

 FAIL  |integration| src/integration-tests/machine.owner.integration.test.ts > machine.owner router integration tests > data integrity and relationships > should preserve other machine fields during owner assignment
Error: Missing seeded test users
 ❯ setupTestData src/integration-tests/machine.owner.integration.test.ts:93:13
     91| 
     92|     if (!testUser1 || !testUser2) {
     93|       throw new Error("Missing seeded test users");
       |             ^
     94|     }
     95| 
 ❯ src/integration-tests/machine.owner.integration.test.ts:781:45
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[99/373]⎯

 FAIL  |integration| src/integration-tests/model.core.integration.test.ts > Model Router Integration Tests (Consolidated from Router + Integration Duplicates) > getAll > returns models with machine counts using real exists() subqueries
Error: Seeded admin user not found
 ❯ createTestContext src/integration-tests/model.core.integration.test.ts:87:13
     85| 
     86|     if (!adminUser) {
     87|       throw new Error("Seeded admin user not found");
       |             ^
     88|     }
     89| 
 ❯ src/integration-tests/model.core.integration.test.ts:165:25
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[100/373]⎯

 FAIL  |integration| src/integration-tests/model.core.integration.test.ts > Model Router Integration Tests (Consolidated from Router + Integration Duplicates) > getAll > should return global OPDB models when organization has no machines
Error: Seeded admin user not found
 ❯ createTestContext src/integration-tests/model.core.integration.test.ts:87:13
     85| 
     86|     if (!adminUser) {
     87|       throw new Error("Seeded admin user not found");
       |             ^
     88|     }
     89| 
 ❯ src/integration-tests/model.core.integration.test.ts:195:25
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[101/373]⎯

 FAIL  |integration| src/integration-tests/model.core.integration.test.ts > Model Router Integration Tests (Consolidated from Router + Integration Duplicates) > getAll > excludes models from other organizations
Error: Seeded admin user not found
 ❯ createTestContext src/integration-tests/model.core.integration.test.ts:87:13
     85| 
     86|     if (!adminUser) {
     87|       throw new Error("Seeded admin user not found");
       |             ^
     88|     }
     89| 
 ❯ src/integration-tests/model.core.integration.test.ts:228:25
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[102/373]⎯

 FAIL  |integration| src/integration-tests/model.core.integration.test.ts > Model Router Integration Tests (Consolidated from Router + Integration Duplicates) > getAll > returns models sorted by name
Error: Seeded admin user not found
 ❯ createTestContext src/integration-tests/model.core.integration.test.ts:87:13
     85| 
     86|     if (!adminUser) {
     87|       throw new Error("Seeded admin user not found");
       |             ^
     88|     }
     89| 
 ❯ src/integration-tests/model.core.integration.test.ts:281:25
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[103/373]⎯

 FAIL  |integration| src/integration-tests/model.core.integration.test.ts > Model Router Integration Tests (Consolidated from Router + Integration Duplicates) > getById > returns model with machine count for valid ID
Error: Seeded admin user not found
 ❯ createTestContext src/integration-tests/model.core.integration.test.ts:87:13
     85| 
     86|     if (!adminUser) {
     87|       throw new Error("Seeded admin user not found");
       |             ^
     88|     }
     89| 
 ❯ src/integration-tests/model.core.integration.test.ts:353:25
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[104/373]⎯

 FAIL  |integration| src/integration-tests/model.core.integration.test.ts > Model Router Integration Tests (Consolidated from Router + Integration Duplicates) > getById > throws NOT_FOUND for model not in organization
Error: Seeded admin user not found
 ❯ createTestContext src/integration-tests/model.core.integration.test.ts:87:13
     85| 
     86|     if (!adminUser) {
     87|       throw new Error("Seeded admin user not found");
       |             ^
     88|     }
     89| 
 ❯ src/integration-tests/model.core.integration.test.ts:480:25
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[105/373]⎯

 FAIL  |integration| src/integration-tests/model.core.integration.test.ts > Model Router Integration Tests (Consolidated from Router + Integration Duplicates) > getById > throws NOT_FOUND for model with no machines in organization
Error: Seeded admin user not found
 ❯ createTestContext src/integration-tests/model.core.integration.test.ts:87:13
     85| 
     86|     if (!adminUser) {
     87|       throw new Error("Seeded admin user not found");
       |             ^
     88|     }
     89| 
 ❯ src/integration-tests/model.core.integration.test.ts:529:25
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[106/373]⎯

 FAIL  |integration| src/integration-tests/model.core.integration.test.ts > Model Router Integration Tests (Consolidated from Router + Integration Duplicates) > organizational boundaries > enforces strict organizational scoping with real data
Error: Seeded admin user not found
 ❯ createTestContext src/integration-tests/model.core.integration.test.ts:87:13
     85| 
     86|     if (!adminUser) {
     87|       throw new Error("Seeded admin user not found");
       |             ^
     88|     }
     89| 
 ❯ src/integration-tests/model.core.integration.test.ts:563:25
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[107/373]⎯

 FAIL  |integration| src/integration-tests/model.core.integration.test.ts > Model Router Integration Tests (Consolidated from Router + Integration Duplicates) > organizational boundaries > validates organizational access with exists() subqueries
Error: Seeded admin user not found
 ❯ createTestContext src/integration-tests/model.core.integration.test.ts:87:13
     85| 
     86|     if (!adminUser) {
     87|       throw new Error("Seeded admin user not found");
       |             ^
     88|     }
     89| 
 ❯ src/integration-tests/model.core.integration.test.ts:660:39
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[108/373]⎯

 FAIL  |integration| src/integration-tests/model.core.integration.test.ts > Model Router Integration Tests (Consolidated from Router + Integration Duplicates) > machine counting accuracy > counts machines accurately with SQL extras
Error: Seeded admin user not found
 ❯ createTestContext src/integration-tests/model.core.integration.test.ts:87:13
     85| 
     86|     if (!adminUser) {
     87|       throw new Error("Seeded admin user not found");
       |             ^
     88|     }
     89| 
 ❯ src/integration-tests/model.core.integration.test.ts:719:25
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[109/373]⎯

 FAIL  |integration| src/integration-tests/model.core.integration.test.ts > Model Router Integration Tests (Consolidated from Router + Integration Duplicates) > machine counting accuracy > excludes inactive machines from count
Error: Seeded admin user not found
 ❯ createTestContext src/integration-tests/model.core.integration.test.ts:87:13
     85| 
     86|     if (!adminUser) {
     87|       throw new Error("Seeded admin user not found");
       |             ^
     88|     }
     89| 
 ❯ src/integration-tests/model.core.integration.test.ts:769:25
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[110/373]⎯

 FAIL  |integration| src/integration-tests/model.core.integration.test.ts > Model Router Integration Tests (Consolidated from Router + Integration Duplicates) > complex relational queries > handles models with complex machine relationships
Error: Seeded admin user not found
 ❯ createTestContext src/integration-tests/model.core.integration.test.ts:87:13
     85| 
     86|     if (!adminUser) {
     87|       throw new Error("Seeded admin user not found");
       |             ^
     88|     }
     89| 
 ❯ src/integration-tests/model.core.integration.test.ts:824:25
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[111/373]⎯

 FAIL  |integration| src/integration-tests/model.core.integration.test.ts > Model Router Integration Tests (Consolidated from Router + Integration Duplicates) > Cross-Organizational Security Testing (from Router Version) > should enforce organizational boundaries across all operations
Error: Seeded admin user not found
 ❯ createTestContext src/integration-tests/model.core.integration.test.ts:87:13
     85| 
     86|     if (!adminUser) {
     87|       throw new Error("Seeded admin user not found");
       |             ^
     88|     }
     89| 
 ❯ src/integration-tests/model.core.integration.test.ts:896:36
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[112/373]⎯

 FAIL  |integration| src/integration-tests/model.core.integration.test.ts > Model Router Integration Tests (Consolidated from Router + Integration Duplicates) > Real Database Operations & Performance (from Router Version) > should perform accurate machine counting with complex relationships
Error: Seeded admin user not found
 ❯ createTestContext src/integration-tests/model.core.integration.test.ts:87:13
     85| 
     86|     if (!adminUser) {
     87|       throw new Error("Seeded admin user not found");
       |             ^
     88|     }
     89| 
 ❯ src/integration-tests/model.core.integration.test.ts:992:36
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[113/373]⎯

 FAIL  |integration| src/integration-tests/model.core.integration.test.ts > Model Router Integration Tests (Consolidated from Router + Integration Duplicates) > Real Database Operations & Performance (from Router Version) > should handle database errors gracefully with real operations
Error: Seeded admin user not found
 ❯ createTestContext src/integration-tests/model.core.integration.test.ts:87:13
     85| 
     86|     if (!adminUser) {
     87|       throw new Error("Seeded admin user not found");
       |             ^
     88|     }
     89| 
 ❯ src/integration-tests/model.core.integration.test.ts:1057:25
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[114/373]⎯

 FAIL  |integration| src/integration-tests/multi-tenant-isolation.integration.test.ts > Multi-Tenant Isolation > Organization Boundary Enforcement > should enforce organizationId on all tenant-scoped tables
ReferenceError: SEED_TEST_IDS is not defined
 ❯ src/integration-tests/multi-tenant-isolation.integration.test.ts:47:24
     45|       await withIsolatedTest(workerDb, async (db) => {
     46|         // Use seeded organizations for multi-tenant isolation testing
     47|         const org1Id = SEED_TEST_IDS.ORGANIZATIONS.primary;
       |                        ^
     48|         const location1Id = generateTestId("location1");
     49| 
 ❯ src/test/helpers/worker-scoped-db.ts:103:28
 ❯ callback node_modules/src/pglite/session.ts:185:11
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:30

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[115/373]⎯

 FAIL  |integration| src/integration-tests/multi-tenant-isolation.integration.test.ts > Multi-Tenant Isolation > Organization Boundary Enforcement > should prevent querying data across organization boundaries
ReferenceError: SEED_TEST_IDS is not defined
 ❯ src/integration-tests/multi-tenant-isolation.integration.test.ts:73:24
     71|       await withIsolatedTest(workerDb, async (db) => {
     72|         // Use seeded organizations for multi-tenant isolation testing
     73|         const org1Id = SEED_TEST_IDS.ORGANIZATIONS.primary;
       |                        ^
     74|         const org2Id = SEED_TEST_IDS.ORGANIZATIONS.competitor;
     75| 
 ❯ src/test/helpers/worker-scoped-db.ts:103:28
 ❯ callback node_modules/src/pglite/session.ts:185:11
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:30

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[116/373]⎯

 FAIL  |integration| src/integration-tests/notification.schema.test.ts > Notification schema integration > enforces required fields and foreign keys
Error: Failed query: insert into "notifications" ("id", "message", "read", "createdAt", "userId", "type", "entityType", "entityId", "actionUrl", "organizationId") values ($1, $2, default, default, $3, $4, default, default, default, default) returning "id", "message", "read", "createdAt", "userId", "type", "entityType", "entityId", "actionUrl", "organizationId"
params: notification-12-d804999f,Valid notification,test-user-12-10e558e7,ISSUE_CREATED
 ❯ PglitePreparedQuery.queryWithCache node_modules/src/pg-core/session.ts:73:11
 ❯ PglitePreparedQuery.execute node_modules/src/pglite/session.ts:95:18
 ❯ src/integration-tests/notification.schema.test.ts:37:30
     35| 
     36|       // valid notification should work in the main transaction
     37|       const [notification] = await db
       |                              ^
     38|         .insert(notifications)
     39|         .values({
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

Caused by: error: null value in column "organizationId" of relation "notifications" violates not-null constraint
 ❯ ye.Ve node_modules/@electric-sql/pg-protocol/src/parser.ts:432:11
 ❯ ye.nt node_modules/@electric-sql/pg-protocol/src/parser.ts:210:16
 ❯ ye.parse node_modules/@electric-sql/pg-protocol/src/parser.ts:102:25
 ❯ ue.execProtocol node_modules/@electric-sql/pglite/src/pglite.ts:700:26
 ❯ ue.y node_modules/@electric-sql/pglite/src/base.ts:141:12
 ❯ node_modules/@electric-sql/pglite/src/base.ts:278:13

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { length: 356, severity: 'ERROR', code: '23502', detail: 'Failing row contains (notification-12-d804999f, Valid notification, f, 2025-08-22 23:38:57.513, test-user-12-10e558e7, ISSUE_CREATED, null, null, null, null).', hint: undefined, position: undefined, internalPosition: undefined, internalQuery: undefined, where: undefined, schema: 'public', table: 'notifications', dataType: undefined, constraint: undefined, file: 'execMain.c', routine: 'ExecConstraints', query: 'insert into "notifications" ("id", "message", "read", "createdAt", "userId", "type", "entityType", "entityId", "actionUrl", "organizationId") values ($1, $2, default, default, $3, $4, default, default, default, default) returning "id", "message", "read", "createdAt", "userId", "type", "entityType", "entityId", "actionUrl", "organizationId"', params: [ 'notification-12-d804999f', 'Valid notification', 'test-user-12-10e558e7', 'ISSUE_CREATED' ], queryOptions: { rowMode: 'array', parsers: { '1082': 'Function<1082>', '1114': 'Function<1114>', '1115': 'Function<1115>', '1182': 'Function<1182>', '1184': 'Function<1184>', '1185': 'Function<1185>', '1186': 'Function<1186>', '1187': 'Function<1187>', '1231': 'Function<1231>' } } }
⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[117/373]⎯

 FAIL  |integration| src/integration-tests/notification.schema.test.ts > Notification schema integration > cascades on user delete
Error: Failed query: insert into "notifications" ("id", "message", "read", "createdAt", "userId", "type", "entityType", "entityId", "actionUrl", "organizationId") values ($1, $2, default, default, $3, $4, default, default, default, default) returning "id", "message", "read", "createdAt", "userId", "type", "entityType", "entityId", "actionUrl", "organizationId"
params: notification-12-77ab3218,Cascade delete test,cascade-user-12-956d6275,ISSUE_CREATED
 ❯ PglitePreparedQuery.queryWithCache node_modules/src/pg-core/session.ts:73:11
 ❯ PglitePreparedQuery.execute node_modules/src/pglite/session.ts:95:18
 ❯ src/integration-tests/notification.schema.test.ts:92:30
     90| 
     91|       // Create notification for test user
     92|       const [notification] = await db
       |                              ^
     93|         .insert(notifications)
     94|         .values({
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

Caused by: error: null value in column "organizationId" of relation "notifications" violates not-null constraint
 ❯ ye.Ve node_modules/@electric-sql/pg-protocol/src/parser.ts:432:11
 ❯ ye.nt node_modules/@electric-sql/pg-protocol/src/parser.ts:210:16
 ❯ ye.parse node_modules/@electric-sql/pg-protocol/src/parser.ts:102:25
 ❯ ue.execProtocol node_modules/@electric-sql/pglite/src/pglite.ts:700:26
 ❯ ue.y node_modules/@electric-sql/pglite/src/base.ts:141:12
 ❯ node_modules/@electric-sql/pglite/src/base.ts:278:13

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { length: 360, severity: 'ERROR', code: '23502', detail: 'Failing row contains (notification-12-77ab3218, Cascade delete test, f, 2025-08-22 23:38:57.536, cascade-user-12-956d6275, ISSUE_CREATED, null, null, null, null).', hint: undefined, position: undefined, internalPosition: undefined, internalQuery: undefined, where: undefined, schema: 'public', table: 'notifications', dataType: undefined, constraint: undefined, file: 'execMain.c', routine: 'ExecConstraints', query: 'insert into "notifications" ("id", "message", "read", "createdAt", "userId", "type", "entityType", "entityId", "actionUrl", "organizationId") values ($1, $2, default, default, $3, $4, default, default, default, default) returning "id", "message", "read", "createdAt", "userId", "type", "entityType", "entityId", "actionUrl", "organizationId"', params: [ 'notification-12-77ab3218', 'Cascade delete test', 'cascade-user-12-956d6275', 'ISSUE_CREATED' ], queryOptions: { rowMode: 'array', parsers: { '1082': 'Function<1082>', '1114': 'Function<1114>', '1115': 'Function<1115>', '1182': 'Function<1182>', '1184': 'Function<1184>', '1185': 'Function<1185>', '1186': 'Function<1186>', '1187': 'Function<1187>', '1231': 'Function<1231>' } } }
⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[118/373]⎯

 FAIL  |integration| src/integration-tests/notification.schema.test.ts > Notification schema integration > sets default values
Error: Failed query: insert into "notifications" ("id", "message", "read", "createdAt", "userId", "type", "entityType", "entityId", "actionUrl", "organizationId") values ($1, $2, default, default, $3, $4, default, default, default, default) returning "id", "message", "read", "createdAt", "userId", "type", "entityType", "entityId", "actionUrl", "organizationId"
params: notification-12-f80b8550,Default value test,default-test-user-12-b5c656a4,ISSUE_CREATED
 ❯ PglitePreparedQuery.queryWithCache node_modules/src/pg-core/session.ts:73:11
 ❯ PglitePreparedQuery.execute node_modules/src/pglite/session.ts:95:18
 ❯ src/integration-tests/notification.schema.test.ts:133:30
    131|         .returning();
    132| 
    133|       const [notification] = await db
       |                              ^
    134|         .insert(notifications)
    135|         .values({
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

Caused by: error: null value in column "organizationId" of relation "notifications" violates not-null constraint
 ❯ ye.Ve node_modules/@electric-sql/pg-protocol/src/parser.ts:432:11
 ❯ ye.nt node_modules/@electric-sql/pg-protocol/src/parser.ts:210:16
 ❯ ye.parse node_modules/@electric-sql/pg-protocol/src/parser.ts:102:25
 ❯ ue.execProtocol node_modules/@electric-sql/pglite/src/pglite.ts:700:26
 ❯ ue.y node_modules/@electric-sql/pglite/src/base.ts:141:12
 ❯ node_modules/@electric-sql/pglite/src/base.ts:278:13

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { length: 364, severity: 'ERROR', code: '23502', detail: 'Failing row contains (notification-12-f80b8550, Default value test, f, 2025-08-22 23:38:57.538, default-test-user-12-b5c656a4, ISSUE_CREATED, null, null, null, null).', hint: undefined, position: undefined, internalPosition: undefined, internalQuery: undefined, where: undefined, schema: 'public', table: 'notifications', dataType: undefined, constraint: undefined, file: 'execMain.c', routine: 'ExecConstraints', query: 'insert into "notifications" ("id", "message", "read", "createdAt", "userId", "type", "entityType", "entityId", "actionUrl", "organizationId") values ($1, $2, default, default, $3, $4, default, default, default, default) returning "id", "message", "read", "createdAt", "userId", "type", "entityType", "entityId", "actionUrl", "organizationId"', params: [ 'notification-12-f80b8550', 'Default value test', 'default-test-user-12-b5c656a4', 'ISSUE_CREATED' ], queryOptions: { rowMode: 'array', parsers: { '1082': 'Function<1082>', '1114': 'Function<1114>', '1115': 'Function<1115>', '1182': 'Function<1182>', '1184': 'Function<1184>', '1185': 'Function<1185>', '1186': 'Function<1186>', '1187': 'Function<1187>', '1231': 'Function<1231>' } } }
⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[119/373]⎯

 FAIL  |integration| src/integration-tests/pinballMap.integration.test.ts > PinballMap Integration Tests > enableIntegration > should create new config and enable integration
Error: Seeded data not found - worker database not properly initialized
 ❯ getSimpleSeededData src/integration-tests/pinballMap.integration.test.ts:47:11
     45| 
     46|   if (!organization || !location || !user) {
     47|     throw new Error("Seeded data not found - worker database not prope…
       |           ^
     48|   }
     49| 
 ❯ src/integration-tests/pinballMap.integration.test.ts:177:26
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[120/373]⎯

 FAIL  |integration| src/integration-tests/pinballMap.integration.test.ts > PinballMap Integration Tests > enableIntegration > should update existing disabled config to enabled
Error: Seeded data not found - worker database not properly initialized
 ❯ getSimpleSeededData src/integration-tests/pinballMap.integration.test.ts:47:11
     45| 
     46|   if (!organization || !location || !user) {
     47|     throw new Error("Seeded data not found - worker database not prope…
       |           ^
     48|   }
     49| 
 ❯ src/integration-tests/pinballMap.integration.test.ts:203:26
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[121/373]⎯

 FAIL  |integration| src/integration-tests/pinballMap.integration.test.ts > PinballMap Integration Tests > enableIntegration > should require organization:manage permission
Error: Seeded data not found - worker database not properly initialized
 ❯ getSimpleSeededData src/integration-tests/pinballMap.integration.test.ts:47:11
     45| 
     46|   if (!organization || !location || !user) {
     47|     throw new Error("Seeded data not found - worker database not prope…
       |           ^
     48|   }
     49| 
 ❯ src/integration-tests/pinballMap.integration.test.ts:235:26
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[122/373]⎯

 FAIL  |integration| src/integration-tests/pinballMap.integration.test.ts > PinballMap Integration Tests > configureLocation > should configure location when integration enabled
Error: Seeded data not found - worker database not properly initialized
 ❯ getSimpleSeededData src/integration-tests/pinballMap.integration.test.ts:47:11
     45| 
     46|   if (!organization || !location || !user) {
     47|     throw new Error("Seeded data not found - worker database not prope…
       |           ^
     48|   }
     49| 
 ❯ src/integration-tests/pinballMap.integration.test.ts:255:26
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[123/373]⎯

 FAIL  |integration| src/integration-tests/pinballMap.integration.test.ts > PinballMap Integration Tests > configureLocation > should throw error when integration not enabled
Error: Seeded data not found - worker database not properly initialized
 ❯ getSimpleSeededData src/integration-tests/pinballMap.integration.test.ts:47:11
     45| 
     46|   if (!organization || !location || !user) {
     47|     throw new Error("Seeded data not found - worker database not prope…
       |           ^
     48|   }
     49| 
 ❯ src/integration-tests/pinballMap.integration.test.ts:294:26
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[124/373]⎯

 FAIL  |integration| src/integration-tests/pinballMap.integration.test.ts > PinballMap Integration Tests > configureLocation > should enforce organizational boundaries
Error: Seeded data not found - worker database not properly initialized
 ❯ getSimpleSeededData src/integration-tests/pinballMap.integration.test.ts:47:11
     45| 
     46|   if (!organization || !location || !user) {
     47|     throw new Error("Seeded data not found - worker database not prope…
       |           ^
     48|   }
     49| 
 ❯ src/integration-tests/pinballMap.integration.test.ts:314:26
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[125/373]⎯

 FAIL  |integration| src/integration-tests/pinballMap.integration.test.ts > PinballMap Integration Tests > syncLocation > should sync machines from PinballMap API
Error: Seeded data not found - worker database not properly initialized
 ❯ getSimpleSeededData src/integration-tests/pinballMap.integration.test.ts:47:11
     45| 
     46|   if (!organization || !location || !user) {
     47|     throw new Error("Seeded data not found - worker database not prope…
       |           ^
     48|   }
     49| 
 ❯ src/integration-tests/pinballMap.integration.test.ts:350:26
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[126/373]⎯

 FAIL  |integration| src/integration-tests/pinballMap.integration.test.ts > PinballMap Integration Tests > syncLocation > should remove machines not in PinballMap but preserve machines with issues
Error: Seeded data not found - worker database not properly initialized
 ❯ getSimpleSeededData src/integration-tests/pinballMap.integration.test.ts:47:11
     45| 
     46|   if (!organization || !location || !user) {
     47|     throw new Error("Seeded data not found - worker database not prope…
       |           ^
     48|   }
     49| 
 ❯ src/integration-tests/pinballMap.integration.test.ts:414:26
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[127/373]⎯

 FAIL  |integration| src/integration-tests/pinballMap.integration.test.ts > PinballMap Integration Tests > syncLocation > should handle PinballMap API errors gracefully
Error: Seeded data not found - worker database not properly initialized
 ❯ getSimpleSeededData src/integration-tests/pinballMap.integration.test.ts:47:11
     45| 
     46|   if (!organization || !location || !user) {
     47|     throw new Error("Seeded data not found - worker database not prope…
       |           ^
     48|   }
     49| 
 ❯ src/integration-tests/pinballMap.integration.test.ts:530:26
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[128/373]⎯

 FAIL  |integration| src/integration-tests/pinballMap.integration.test.ts > PinballMap Integration Tests > getSyncStatus > should return enabled status with configured locations
Error: Seeded data not found - worker database not properly initialized
 ❯ getSimpleSeededData src/integration-tests/pinballMap.integration.test.ts:47:11
     45| 
     46|   if (!organization || !location || !user) {
     47|     throw new Error("Seeded data not found - worker database not prope…
       |           ^
     48|   }
     49| 
 ❯ src/integration-tests/pinballMap.integration.test.ts:572:26
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[129/373]⎯

 FAIL  |integration| src/integration-tests/pinballMap.integration.test.ts > PinballMap Integration Tests > getSyncStatus > should return disabled status when integration not enabled
Error: Seeded data not found - worker database not properly initialized
 ❯ getSimpleSeededData src/integration-tests/pinballMap.integration.test.ts:47:11
     45| 
     46|   if (!organization || !location || !user) {
     47|     throw new Error("Seeded data not found - worker database not prope…
       |           ^
     48|   }
     49| 
 ❯ src/integration-tests/pinballMap.integration.test.ts:611:26
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[130/373]⎯

 FAIL  |integration| src/integration-tests/pinballMap.integration.test.ts > PinballMap Integration Tests > getSyncStatus > should enforce organizational boundaries
Error: Seeded data not found - worker database not properly initialized
 ❯ getSimpleSeededData src/integration-tests/pinballMap.integration.test.ts:47:11
     45| 
     46|   if (!organization || !location || !user) {
     47|     throw new Error("Seeded data not found - worker database not prope…
       |           ^
     48|   }
     49| 
 ❯ src/integration-tests/pinballMap.integration.test.ts:629:26
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[131/373]⎯

 FAIL  |integration| src/integration-tests/schema-data-integrity.integration.test.ts > Schema Data Integrity > Issue Relations > should cascade delete comments when issue is deleted
ReferenceError: organizationId is not defined
 ❯ src/integration-tests/schema-data-integrity.integration.test.ts:462:11
    460|         await db.insert(schema.comments).values({
    461|           id: commentId,
    462|           organizationId,
       |           ^
    463|           issueId: testIssueId,
    464|           authorId: testUser1Id,
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[132/373]⎯

 FAIL  |integration| src/integration-tests/schema-migration-validation.integration.test.ts > Schema Migration Validation > Schema Structure Validation > should support essential database operations
ReferenceError: SEED_TEST_IDS is not defined
 ❯ createTestContext src/integration-tests/schema-migration-validation.integration.test.ts:32:28
     30|   async function createTestContext(_db: TestDatabase) {
     31|     // Use seeded primary organization for schema validation tests
     32|     const organizationId = SEED_TEST_IDS.ORGANIZATIONS.primary;
       |                            ^
     33| 
     34|     const testLocationId = generateTestId("test-location");
 ❯ src/integration-tests/schema-migration-validation.integration.test.ts:75:58
 ❯ src/test/helpers/worker-scoped-db.ts:103:28
 ❯ callback node_modules/src/pglite/session.ts:185:11
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:30

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[133/373]⎯

 FAIL  |integration| src/integration-tests/schema-migration-validation.integration.test.ts > Schema Migration Validation > Index Performance Validation > should have efficient organizationId indexes for multi-tenancy
ReferenceError: SEED_TEST_IDS is not defined
 ❯ createTestContext src/integration-tests/schema-migration-validation.integration.test.ts:32:28
     30|   async function createTestContext(_db: TestDatabase) {
     31|     // Use seeded primary organization for schema validation tests
     32|     const organizationId = SEED_TEST_IDS.ORGANIZATIONS.primary;
       |                            ^
     33| 
     34|     const testLocationId = generateTestId("test-location");
 ❯ src/integration-tests/schema-migration-validation.integration.test.ts:110:58
 ❯ src/test/helpers/worker-scoped-db.ts:103:28
 ❯ callback node_modules/src/pglite/session.ts:185:11
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:30

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[134/373]⎯

 FAIL  |integration| src/integration-tests/schema-migration-validation.integration.test.ts > Schema Migration Validation > Index Performance Validation > should efficiently query multi-tenant data
ReferenceError: SEED_TEST_IDS is not defined
 ❯ createTestContext src/integration-tests/schema-migration-validation.integration.test.ts:32:28
     30|   async function createTestContext(_db: TestDatabase) {
     31|     // Use seeded primary organization for schema validation tests
     32|     const organizationId = SEED_TEST_IDS.ORGANIZATIONS.primary;
       |                            ^
     33| 
     34|     const testLocationId = generateTestId("test-location");
 ❯ src/integration-tests/schema-migration-validation.integration.test.ts:145:42
 ❯ src/test/helpers/worker-scoped-db.ts:103:28
 ❯ callback node_modules/src/pglite/session.ts:185:11
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:30

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[135/373]⎯

 FAIL  |integration| src/integration-tests/schema-migration-validation.integration.test.ts > Schema Migration Validation > Foreign Key Relationship Validation > should handle foreign key relationships correctly
ReferenceError: SEED_TEST_IDS is not defined
 ❯ createTestContext src/integration-tests/schema-migration-validation.integration.test.ts:32:28
     30|   async function createTestContext(_db: TestDatabase) {
     31|     // Use seeded primary organization for schema validation tests
     32|     const organizationId = SEED_TEST_IDS.ORGANIZATIONS.primary;
       |                            ^
     33| 
     34|     const testLocationId = generateTestId("test-location");
 ❯ src/integration-tests/schema-migration-validation.integration.test.ts:179:42
 ❯ src/test/helpers/worker-scoped-db.ts:103:28
 ❯ callback node_modules/src/pglite/session.ts:185:11
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:30

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[136/373]⎯

 FAIL  |jsdom| src/components/issues/__tests__/IssueDetailView.auth.integration.test.tsx > IssueDetailView - Auth Integration Tests > 👑 Admin User (Full Permissions) > should allow admin actions when clicked
Error: [2mexpect([22m[31melement[39m[2m).toBeEnabled()[22m

Received element is not enabled:
  [31m<button
  class="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-sizeMedium MuiButton-outlinedSizeMedium MuiButton-colorPrimary MuiButton-fullWidth Mui-disabled MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-sizeMedium MuiButton-outlinedSizeMedium MuiButton-colorPrimary MuiButton-fullWidth css-14vdjio-MuiButtonBase-root-MuiButton-root"
  data-testid="edit-issue-button"
  disabled=""
  tabindex="-1"
  title="You don't have permission to: Edit existing issues"
  type="button"
/>[39m

Ignored nodes: comments, script, style
[36m<html>[39m
  [36m<head>[39m
    [36m<meta[39m
      [33mcontent[39m=[32m""[39m
      [33mname[39m=[32m"emotion-insertion-point"[39m
    [36m/>[39m
  [36m</head>[39m
  [36m<body>[39m
    [36m<div>[39m
      [36m<div[39m
        [33mclass[39m=[32m"MuiContainer-root MuiContainer-maxWidthLg css-xsov46-MuiContainer-root"[39m
        [33mdata-testid[39m=[32m"desktop-layout"[39m
      [36m>[39m
        [36m<div[39m
          [33mclass[39m=[32m"MuiGrid-root MuiGrid-container MuiGrid-direction-xs-row MuiGrid-spacing-xs-3 css-1u8xl8z-MuiGrid-root"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"MuiGrid-root MuiGrid-direction-xs-row MuiGrid-grid-xs-12 MuiGrid-grid-md-8 css-q5srq4-MuiGrid-root"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation1 css-s66fnd-MuiPaper-root"[39m
              [33mstyle[39m=[32m"--Paper-shadow: 0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12);"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"MuiBox-root css-0"[39m
              [36m>[39m
                [36m<h1[39m
                  [33mclass[39m=[32m"MuiTypography-root MuiTypography-h4 MuiTypography-gutterBottom css-1it4a80-MuiTypography-root"[39m
                  [33mdata-testid[39m=[32m"issue-title"[39m
                [36m>[39m
                  [0mAuth Integration Test Issue[0m
                [36m</h1>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"MuiStack-root css-1pl8fbw-MuiStack-root"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"MuiChip-root MuiChip-outlined MuiChip-sizeMedium MuiChip-colorPrimary MuiChip-outlinedPrimary css-mjbe4w-MuiChip-root"[39m
                    [33mdata-testid[39m=[32m"issue-status"[39m
                  [36m>[39m
                    [36m<span[39m
                      [33mclass[39m=[32m"MuiChip-label MuiChip-labelMedium css-16cgrcw-MuiChip-label"[39m
                    [36m>[39m
                      [0mOpen[0m
                    [36m</span>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"MuiChip-root MuiChip-outlined MuiChip-sizeMedium MuiChip-colorSecondary MuiChip-outlinedSecondary css-n2mi7k-MuiChip-root"[39m
                    [33mdata-testid[39m=[32m"issue-priority"[39m
                  [36m>[39m
                    [36m<span[39m
                      [33mclass[39m=[32m"MuiChip-label MuiChip-labelMedium css-16cgrcw-MuiChip-label"[39m
                    [36m>[39m
                      [0mHigh[0m
                    [36m</span>[39m
                  [36m</div>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"MuiBox-root css-i3pbo"[39m
                [36m>[39m
                  [36m<h6[39m
                    [33mclass[39m=[32m"MuiTypography-root MuiTypography-h6 MuiTypography-gutterBottom css-1wmifpn-MuiTypography-root"[39m
                  [36m>[39m
                    [0mDescription[0m
                  [36m</h6>[39m
                  [36m<p[39m
                    [33mclass[39m=[32m"MuiTypography-root MuiTypography-body1 css-vmq5eu-MuiTypography-root"[39m
                    [33mdata-testid[39m=[32m"issue-description"[39m
                  [36m>[39m
                    [0mTesting real auth component interactions[0m
                  [36m</p>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"MuiPaper-root MuiPaper-outlined MuiPaper-rounded MuiCard-root css-1h0qqai-MuiPaper-root-MuiCard-root"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"MuiCardContent-root css-1lt5qva-MuiCardContent-root"[39m
                  [36m>[39m
                    [36m<h6[39m
                      [33mclass[39m=[32m"MuiTypography-root MuiTypography-h6 MuiTypography-gutterBottom css-1wmifpn-MuiTypography-root"[39m
                    [36m>[39m
                      [0mMachine Information[0m
                    [36m</h6>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"MuiBox-root css-0"[39m
                      [33mdata-testid[39m=[32m"machine-info"[39m
                    [36m>[39m
                      [36m<div[39m
                        [33mclass[39m=[32m"MuiBox-root css-1qm1lh"[39m
                      [36m>[39m
                        [36m<p[39m
                          [33mclass[39m=[32m"MuiTypography-root MuiTypography-body2 css-1wle3ir-MuiTypography-root"[39m
                        [36m>[39m
                          [0mGame[0m
                        [36m</p>[39m
                        [36m<p[39m
                          [33mclass[39m=[32m"MuiTypography-root MuiTypography-body1 css-rizt0-MuiTypography-root"[39m
                          [33mdata-testid[39m=[32m"machine-name"[39m
                        [36m>[39m
                          [0mTest Game[0m
                        [36m</p>[39m
                        [36m<p[39m
                          [33mclass[39m=[32m"MuiTypography-root MuiTypography-body2 css-1wle3ir-MuiTypography-root"[39m
                        [36m>[39m
                          [0mby [0m
                          [0mTest Manufacturer[0m
                        [36m</p>[39m
                      [36m</div>[39m
                      [36m<div[39m
                        [33mclass[39m=[32m"MuiBox-root css-1qm1lh"[39m
                      [36m>[39m
                        [36m<p[39m
                          [33mclass[39m=[32m"MuiTypography-root MuiTypography-body2 css-1wle3ir-MuiTypography-root"[39m
                        [36m>[39m
                          [0mLocation[0m
                        [36m</p>[39m
                        [36m<p[39m
                          [33mclass[39m=[32m"MuiTypography-root MuiTypography-body1 css-rizt0-MuiTypography-root"[39m
                          [33mdata-testid[39m=[32m"machine-location"[39m
                        [36m>[39m
                          [0mTest Location[0m
                        [36m</p>[39m
                        [36m<p[39m
                          [33mclass[39m=[32m"MuiTypography-root MuiTypography-body2 css-1wle3ir-MuiTypography-root"[39m
                        [36m>[39m
                          [0m123 Test St[0m
                        [36m</p>[39m
                      [36m</div>[39m
                      [36m<div[39m
                        [33mclass[39m=[32m"MuiBox-root css-0"[39m
                      [36m>[39m
 ...
 ❯ src/components/issues/__tests__/IssueDetailView.auth.integration.test.tsx:493:28
    491|       await waitFor(() => {
    492|         const editButton = screen.getByRole("button", { name: /edit/i …
    493|         expect(editButton).toBeEnabled();
       |                            ^
    494|       });
    495| 
 ❯ runWithExpensiveErrorDiagnosticsDisabled node_modules/@testing-library/dom/dist/config.js:47:12
 ❯ checkCallback node_modules/@testing-library/dom/dist/wait-for.js:124:77
 ❯ Timeout.checkRealTimersCallback node_modules/@testing-library/dom/dist/wait-for.js:118:16

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[137/373]⎯

 FAIL  |jsdom| src/components/issues/__tests__/IssueDetailView.auth.integration.test.tsx > IssueDetailView - Auth Integration Tests > ⚡ Auth State Changes > should update UI when permissions change
Error: [2mexpect([22m[31melement[39m[2m).toBeEnabled()[22m

Received element is not enabled:
  [31m<button
  class="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-sizeMedium MuiButton-outlinedSizeMedium MuiButton-colorPrimary MuiButton-fullWidth Mui-disabled MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-sizeMedium MuiButton-outlinedSizeMedium MuiButton-colorPrimary MuiButton-fullWidth css-14vdjio-MuiButtonBase-root-MuiButton-root"
  data-testid="edit-issue-button"
  disabled=""
  tabindex="-1"
  title="You don't have permission to: Edit existing issues"
  type="button"
/>[39m

Ignored nodes: comments, script, style
[36m<html>[39m
  [36m<head>[39m
    [36m<meta[39m
      [33mcontent[39m=[32m""[39m
      [33mname[39m=[32m"emotion-insertion-point"[39m
    [36m/>[39m
  [36m</head>[39m
  [36m<body>[39m
    [36m<div>[39m
      [36m<div[39m
        [33mclass[39m=[32m"MuiContainer-root MuiContainer-maxWidthLg css-xsov46-MuiContainer-root"[39m
        [33mdata-testid[39m=[32m"desktop-layout"[39m
      [36m>[39m
        [36m<div[39m
          [33mclass[39m=[32m"MuiGrid-root MuiGrid-container MuiGrid-direction-xs-row MuiGrid-spacing-xs-3 css-1u8xl8z-MuiGrid-root"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"MuiGrid-root MuiGrid-direction-xs-row MuiGrid-grid-xs-12 MuiGrid-grid-md-8 css-q5srq4-MuiGrid-root"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation1 css-s66fnd-MuiPaper-root"[39m
              [33mstyle[39m=[32m"--Paper-shadow: 0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12);"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"MuiBox-root css-0"[39m
              [36m>[39m
                [36m<h1[39m
                  [33mclass[39m=[32m"MuiTypography-root MuiTypography-h4 MuiTypography-gutterBottom css-1it4a80-MuiTypography-root"[39m
                  [33mdata-testid[39m=[32m"issue-title"[39m
                [36m>[39m
                  [0mAuth Integration Test Issue[0m
                [36m</h1>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"MuiStack-root css-1pl8fbw-MuiStack-root"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"MuiChip-root MuiChip-outlined MuiChip-sizeMedium MuiChip-colorPrimary MuiChip-outlinedPrimary css-mjbe4w-MuiChip-root"[39m
                    [33mdata-testid[39m=[32m"issue-status"[39m
                  [36m>[39m
                    [36m<span[39m
                      [33mclass[39m=[32m"MuiChip-label MuiChip-labelMedium css-16cgrcw-MuiChip-label"[39m
                    [36m>[39m
                      [0mOpen[0m
                    [36m</span>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"MuiChip-root MuiChip-outlined MuiChip-sizeMedium MuiChip-colorSecondary MuiChip-outlinedSecondary css-n2mi7k-MuiChip-root"[39m
                    [33mdata-testid[39m=[32m"issue-priority"[39m
                  [36m>[39m
                    [36m<span[39m
                      [33mclass[39m=[32m"MuiChip-label MuiChip-labelMedium css-16cgrcw-MuiChip-label"[39m
                    [36m>[39m
                      [0mHigh[0m
                    [36m</span>[39m
                  [36m</div>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"MuiBox-root css-i3pbo"[39m
                [36m>[39m
                  [36m<h6[39m
                    [33mclass[39m=[32m"MuiTypography-root MuiTypography-h6 MuiTypography-gutterBottom css-1wmifpn-MuiTypography-root"[39m
                  [36m>[39m
                    [0mDescription[0m
                  [36m</h6>[39m
                  [36m<p[39m
                    [33mclass[39m=[32m"MuiTypography-root MuiTypography-body1 css-vmq5eu-MuiTypography-root"[39m
                    [33mdata-testid[39m=[32m"issue-description"[39m
                  [36m>[39m
                    [0mTesting real auth component interactions[0m
                  [36m</p>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"MuiPaper-root MuiPaper-outlined MuiPaper-rounded MuiCard-root css-1h0qqai-MuiPaper-root-MuiCard-root"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"MuiCardContent-root css-1lt5qva-MuiCardContent-root"[39m
                  [36m>[39m
                    [36m<h6[39m
                      [33mclass[39m=[32m"MuiTypography-root MuiTypography-h6 MuiTypography-gutterBottom css-1wmifpn-MuiTypography-root"[39m
                    [36m>[39m
                      [0mMachine Information[0m
                    [36m</h6>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"MuiBox-root css-0"[39m
                      [33mdata-testid[39m=[32m"machine-info"[39m
                    [36m>[39m
                      [36m<div[39m
                        [33mclass[39m=[32m"MuiBox-root css-1qm1lh"[39m
                      [36m>[39m
                        [36m<p[39m
                          [33mclass[39m=[32m"MuiTypography-root MuiTypography-body2 css-1wle3ir-MuiTypography-root"[39m
                        [36m>[39m
                          [0mGame[0m
                        [36m</p>[39m
                        [36m<p[39m
                          [33mclass[39m=[32m"MuiTypography-root MuiTypography-body1 css-rizt0-MuiTypography-root"[39m
                          [33mdata-testid[39m=[32m"machine-name"[39m
                        [36m>[39m
                          [0mTest Game[0m
                        [36m</p>[39m
                        [36m<p[39m
                          [33mclass[39m=[32m"MuiTypography-root MuiTypography-body2 css-1wle3ir-MuiTypography-root"[39m
                        [36m>[39m
                          [0mby [0m
                          [0mTest Manufacturer[0m
                        [36m</p>[39m
                      [36m</div>[39m
                      [36m<div[39m
                        [33mclass[39m=[32m"MuiBox-root css-1qm1lh"[39m
                      [36m>[39m
                        [36m<p[39m
                          [33mclass[39m=[32m"MuiTypography-root MuiTypography-body2 css-1wle3ir-MuiTypography-root"[39m
                        [36m>[39m
                          [0mLocation[0m
                        [36m</p>[39m
                        [36m<p[39m
                          [33mclass[39m=[32m"MuiTypography-root MuiTypography-body1 css-rizt0-MuiTypography-root"[39m
                          [33mdata-testid[39m=[32m"machine-location"[39m
                        [36m>[39m
                          [0mTest Location[0m
                        [36m</p>[39m
                        [36m<p[39m
                          [33mclass[39m=[32m"MuiTypography-root MuiTypography-body2 css-1wle3ir-MuiTypography-root"[39m
                        [36m>[39m
                          [0m123 Test St[0m
                        [36m</p>[39m
                      [36m</div>[39m
                      [36m<div[39m
                        [33mclass[39m=[32m"MuiBox-root css-0"[39m
                      [36m>[39m
 ...
 ❯ src/components/issues/__tests__/IssueDetailView.auth.integration.test.tsx:622:28
    620|       await waitFor(() => {
    621|         const editButton = screen.getByRole("button", { name: /edit/i …
    622|         expect(editButton).toBeEnabled();
       |                            ^
    623|       });
    624|     });
 ❯ runWithExpensiveErrorDiagnosticsDisabled node_modules/@testing-library/dom/dist/config.js:47:12
 ❯ checkCallback node_modules/@testing-library/dom/dist/wait-for.js:124:77
 ❯ Timeout.checkRealTimersCallback node_modules/@testing-library/dom/dist/wait-for.js:118:16

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[138/373]⎯

 FAIL  |node| src/lib/common/__tests__/organizationValidation.test.ts > organizationValidation > Utility functions > extractOrganizationId > should extract organization ID from direct property
AssertionError: expected 'mock-org-1' to be 'org-1' // Object.is equality

Expected: [32m"org-1"[39m
Received: [31m"[7mmock-[27morg-1"[39m

 ❯ src/lib/common/__tests__/organizationValidation.test.ts:586:24
    584|         const result = extractOrganizationId(resource);
    585| 
    586|         expect(result).toBe("org-1");
       |                        ^
    587|       });
    588| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[139/373]⎯

 FAIL  |node| src/lib/common/__tests__/organizationValidation.test.ts > organizationValidation > Utility functions > extractOrganizationId > should extract organization ID from location property
AssertionError: expected 'mock-org-1' to be 'org-1' // Object.is equality

Expected: [32m"org-1"[39m
Received: [31m"[7mmock-[27morg-1"[39m

 ❯ src/lib/common/__tests__/organizationValidation.test.ts:596:24
    594|         const result = extractOrganizationId(resource);
    595| 
    596|         expect(result).toBe("org-1");
       |                        ^
    597|       });
    598| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[140/373]⎯

 FAIL  |node| src/lib/common/__tests__/organizationValidation.test.ts > organizationValidation > Utility functions > extractOrganizationId > should extract organization ID from issue property
AssertionError: expected 'mock-org-1' to be 'org-1' // Object.is equality

Expected: [32m"org-1"[39m
Received: [31m"[7mmock-[27morg-1"[39m

 ❯ src/lib/common/__tests__/organizationValidation.test.ts:606:24
    604|         const result = extractOrganizationId(resource);
    605| 
    606|         expect(result).toBe("org-1");
       |                        ^
    607|       });
    608| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[141/373]⎯

 FAIL  |node| src/lib/common/__tests__/organizationValidation.test.ts > organizationValidation > Router Pattern Functions > createOrganizationScope > should create organization scope where clause
AssertionError: expected { organizationId: 'mock-org-1' } to deeply equal { organizationId: 'org-1' }

[32m- Expected[39m
[31m+ Received[39m

[2m  {[22m
[32m-   "organizationId": "org-1",[39m
[31m+   "organizationId": "mock-org-1",[39m
[2m  }[22m

 ❯ src/lib/common/__tests__/organizationValidation.test.ts:876:24
    874|   const result = createOrganizationScope(SEED_TEST_IDS.MOCK_PATTERNS.O…
    875| 
    876|         expect(result).toEqual({
       |                        ^
    877|           organizationId: "org-1",
    878|         });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[142/373]⎯

 FAIL  |node| src/lib/common/__tests__/organizationValidation.test.ts > organizationValidation > Router Pattern Functions > createOrganizationScopeWith > should create organization scope with additional conditions
AssertionError: expected { name: 'Test', active: true, …(1) } to deeply equal { name: 'Test', active: true, …(1) }

[32m- Expected[39m
[31m+ Received[39m

[2m  {[22m
[2m    "active": true,[22m
[2m    "name": "Test",[22m
[32m-   "organizationId": "org-1",[39m
[31m+   "organizationId": "mock-org-1",[39m
[2m  }[22m

 ❯ src/lib/common/__tests__/organizationValidation.test.ts:887:24
    885|   const result = createOrganizationScopeWith(SEED_TEST_IDS.MOCK_PATTER…
    886| 
    887|         expect(result).toEqual({
       |                        ^
    888|           name: "Test",
    889|           active: true,

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[143/373]⎯

 FAIL  |node| src/lib/common/__tests__/organizationValidation.test.ts > organizationValidation > Router Pattern Functions > validateRouterEntityOwnership > should validate entity ownership
AssertionError: expected false to be true // Object.is equality

[32m- Expected[39m
[31m+ Received[39m

[32m- true[39m
[31m+ false[39m

 ❯ src/lib/common/__tests__/organizationValidation.test.ts:908:32
    906|         );
    907| 
    908|         expect(result.isValid).toBe(true);
       |                                ^
    909|       });
    910| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[144/373]⎯

 FAIL  |node| src/lib/common/__tests__/organizationValidation.test.ts > organizationValidation > Router Pattern Functions > validateEntityExistsAndOwned > should return entity when validation passes
Error: Access denied: Test Entity belongs to different organization
 ❯ validateEntityExistsAndOwned src/lib/common/organizationValidation.ts:610:19
    608| 
    609|   if (!result.isValid) {
    610|     const error = new Error(result.error) as OrganizationValidationErr…
       |                   ^
    611|     if (result.errorCode) {
    612|       error.code = result.errorCode;
 ❯ src/lib/common/__tests__/organizationValidation.test.ts:1001:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[145/373]⎯

 FAIL  |node| src/lib/common/__tests__/organizationValidation.test.ts > organizationValidation > Router Pattern Functions > validateRelatedEntitiesOwnership > should validate all entities belong to same organization
AssertionError: expected false to be true // Object.is equality

[32m- Expected[39m
[31m+ Received[39m

[32m- true[39m
[31m+ false[39m

 ❯ src/lib/common/__tests__/organizationValidation.test.ts:1072:32
    1070|         const result = validateRelatedEntitiesOwnership(entities, "org…
    1071| 
    1072|         expect(result.isValid).toBe(true);
       |                                ^
    1073|       });
    1074| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[146/373]⎯

 FAIL  |node| src/lib/common/__tests__/organizationValidation.test.ts > organizationValidation > Router Pattern Functions > validateRelatedEntitiesOwnership > should skip global entities (no organizationId)
AssertionError: expected false to be true // Object.is equality

[32m- Expected[39m
[31m+ Received[39m

[32m- true[39m
[31m+ false[39m

 ❯ src/lib/common/__tests__/organizationValidation.test.ts:1091:32
    1089|         const result = validateRelatedEntitiesOwnership(entities, "org…
    1090| 
    1091|         expect(result.isValid).toBe(true);
       |                                ^
    1092|       });
    1093| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[147/373]⎯

 FAIL  |node| src/lib/common/__tests__/organizationValidation.test.ts > organizationValidation > Router Pattern Functions > validateRelatedEntitiesOwnership > should reject entity from different organization
AssertionError: expected 'Access denied: Location belongs to di…' to be 'Access denied: Machine belongs to dif…' // Object.is equality

Expected: [32m"Access denied: [7mMachine[27m belongs to different organization"[39m
Received: [31m"Access denied: [7mLocation[27m belongs to different organization"[39m

 ❯ src/lib/common/__tests__/organizationValidation.test.ts:1111:30
    1109| 
    1110|         expect(result.isValid).toBe(false);
    1111|         expect(result.error).toBe(
       |                              ^
    1112|           "Access denied: Machine belongs to different organization",
    1113|         );

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[148/373]⎯

 FAIL  |node| src/lib/common/__tests__/organizationValidation.test.ts > organizationValidation > Router Pattern Functions > validateMultipleEntityOwnership > should validate all entities belong to organization
AssertionError: expected false to be true // Object.is equality

[32m- Expected[39m
[31m+ Received[39m

[32m- true[39m
[31m+ false[39m

 ❯ src/lib/common/__tests__/organizationValidation.test.ts:1131:32
    1129|         );
    1130| 
    1131|         expect(result.isValid).toBe(true);
       |                                ^
    1132|       });
    1133| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[149/373]⎯

 FAIL  |node| src/lib/common/__tests__/organizationValidation.test.ts > organizationValidation > Router Pattern Functions > validateMultipleEntityOwnership > should reject when any entity is null
AssertionError: expected 'Access denied: Test Entity at index 0…' to be 'Test Entity at index 1 not found' // Object.is equality

Expected: [32m"Test Entity at index [7m1 not found[27m"[39m
Received: [31m"[7mAccess denied: [27mTest Entity at index [7m0 belongs to different organization[27m"[39m

 ❯ src/lib/common/__tests__/organizationValidation.test.ts:1144:30
    1142| 
    1143|         expect(result.isValid).toBe(false);
    1144|         expect(result.error).toBe("Test Entity at index 1 not found");
       |                              ^
    1145|         expect(result.errorCode).toBe("NOT_FOUND");
    1146|       });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[150/373]⎯

 FAIL  |node| src/lib/common/__tests__/organizationValidation.test.ts > organizationValidation > Router Pattern Functions > validateMultipleEntityOwnership > should reject when any entity belongs to different organization
AssertionError: expected 'Access denied: Test Entity at index 0…' to be 'Access denied: Test Entity at index 1…' // Object.is equality

Expected: [32m"Access denied: Test Entity at index [7m1[27m belongs to different organization"[39m
Received: [31m"Access denied: Test Entity at index [7m0[27m belongs to different organization"[39m

 ❯ src/lib/common/__tests__/organizationValidation.test.ts:1161:30
    1159| 
    1160|         expect(result.isValid).toBe(false);
    1161|         expect(result.error).toBe(
       |                              ^
    1162|           "Access denied: Test Entity at index 1 belongs to different …
    1163|         );

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[151/373]⎯

 FAIL  |node| src/lib/issues/__tests__/filterUtils.test.ts > filterUtils > validateFilters > removes empty search string
AssertionError: expected '' to be undefined

[32m- Expected:[39m 
undefined

[31m+ Received:[39m 
""

 ❯ src/lib/issues/__tests__/filterUtils.test.ts:164:29
    162|       const result = validateFilters({ search: "   " });
    163|       
    164|       expect(result.search).toBeUndefined();
       |                             ^
    165|     });
    166| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[152/373]⎯

 FAIL  |node| src/server/api/__tests__/trpc.permission.test.ts > tRPC Permission Middleware - ENHANCED WITH ORGANIZATIONAL BOUNDARY SECURITY > requirePermissionForSession - Core Functionality > should allow access when user has required permission
TRPCError: Cannot read properties of undefined (reading 'map')
 ❯ src/server/api/trpc.base.ts:380:58
    378|             id: membership.role.id,
    379|             name: membership.role.name,
    380|             permissions: membership.role.rolePermissions.map(
       |                                                          ^
    381|               (rp) => rp.permission,
    382|             ),
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ src/server/api/trpc.base.ts:238:22
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ procedure node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:673:20
 ❯ node_modules/@trpc/server/src/unstable-core-do-not-import/router.ts:473:20
 ❯ src/server/api/__tests__/trpc.permission.test.ts:159:22

Caused by: TypeError: Cannot read properties of undefined (reading 'map')
 ❯ src/server/api/trpc.base.ts:380:58
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ src/server/api/trpc.base.ts:238:22
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ procedure node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:673:20
 ❯ node_modules/@trpc/server/src/unstable-core-do-not-import/router.ts:473:20
 ❯ src/server/api/__tests__/trpc.permission.test.ts:159:22

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[153/373]⎯

 FAIL  |node| src/server/api/__tests__/trpc.permission.test.ts > tRPC Permission Middleware - ENHANCED WITH ORGANIZATIONAL BOUNDARY SECURITY > requirePermissionForSession - Core Functionality > should deny access when user lacks required permission
AssertionError: expected [Function] to throw error including 'Missing required permission: test:per…' but got 'Cannot read properties of undefined (…'

Expected: [32m"Missing required permission: test:permission"[39m
Received: [31m"Cannot read properties of undefined (reading 'map')"[39m

 ❯ src/server/api/__tests__/trpc.permission.test.ts:183:7
    181|       // Act & Assert
    182|       await expect(caller.testRequirePermission()).rejects.toThrow(TRP…
    183|       await expect(caller.testRequirePermission()).rejects.toThrow(
       |       ^
    184|         "Missing required permission: test:permission",
    185|       );

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[154/373]⎯

 FAIL  |node| src/server/api/__tests__/trpc.permission.test.ts > tRPC Permission Middleware - ENHANCED WITH ORGANIZATIONAL BOUNDARY SECURITY > requirePermissionForSession - Core Functionality > should deny access when user has no permissions
AssertionError: expected 'INTERNAL_SERVER_ERROR' to be 'FORBIDDEN' // Object.is equality

Expected: [32m"FORBIDDEN"[39m
Received: [31m"INTERNAL_SERVER_ERROR"[39m

 ❯ src/server/api/__tests__/trpc.permission.test.ts:209:43
    207|       } catch (error) {
    208|         expect(error).toBeInstanceOf(TRPCError);
    209|         expect((error as TRPCError).code).toBe("FORBIDDEN");
       |                                           ^
    210|       }
    211|     });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[155/373]⎯

 FAIL  |node| src/server/api/__tests__/trpc.permission.test.ts > tRPC Permission Middleware - ENHANCED WITH ORGANIZATIONAL BOUNDARY SECURITY > CRITICAL - Cross-Organizational Permission Isolation > CRITICAL - Should prevent cross-organizational permission escalation
AssertionError: expected [Function] to throw error including 'Missing required permission: test:per…' but got 'Cannot read properties of undefined (…'

Expected: [32m"Missing required permission: test:permission"[39m
Received: [31m"Cannot read properties of undefined (reading 'map')"[39m

 ❯ src/server/api/__tests__/trpc.permission.test.ts:235:7
    233|       // Act & Assert: Should be denied even though user has admin:del…
    234|       await expect(caller.testRequirePermission()).rejects.toThrow(TRP…
    235|       await expect(caller.testRequirePermission()).rejects.toThrow(
       |       ^
    236|         "Missing required permission: test:permission",
    237|       );

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[156/373]⎯

 FAIL  |node| src/server/api/__tests__/trpc.permission.test.ts > tRPC Permission Middleware - ENHANCED WITH ORGANIZATIONAL BOUNDARY SECURITY > CRITICAL - Cross-Organizational Permission Isolation > CRITICAL - Should validate organizational context in permission checks
AssertionError: promise rejected "TRPCError: Cannot read properties of unde… { code: '…' }" instead of resolving
 ❯ src/server/api/__tests__/trpc.permission.test.ts:271:57
    269| 
    270|       // Act & Assert: Both should succeed in their own context
    271|       await expect(primaryCaller.testRequirePermission()).resolves.toE…
       |                                                         ^
    272|       await expect(competitorCaller.testRequirePermission()).resolves.…
    273|     });

Caused by: TRPCError: Cannot read properties of undefined (reading 'map')
 ❯ src/server/api/trpc.base.ts:380:58
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ src/server/api/trpc.base.ts:238:22
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ procedure node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:673:20
 ❯ node_modules/@trpc/server/src/unstable-core-do-not-import/router.ts:473:20
 ❯ src/server/api/__tests__/trpc.permission.test.ts:271:7

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: 'INTERNAL_SERVER_ERROR' }
Caused by: TypeError: Cannot read properties of undefined (reading 'map')
 ❯ src/server/api/trpc.base.ts:380:58
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ src/server/api/trpc.base.ts:238:22
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ procedure node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:673:20
 ❯ node_modules/@trpc/server/src/unstable-core-do-not-import/router.ts:473:20
 ❯ src/server/api/__tests__/trpc.permission.test.ts:271:7

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[157/373]⎯

 FAIL  |node| src/server/api/__tests__/trpc.permission.test.ts > tRPC Permission Middleware - ENHANCED WITH ORGANIZATIONAL BOUNDARY SECURITY > CRITICAL - Cross-Organizational Permission Isolation > CRITICAL - Should prevent role-based attacks across organizations
AssertionError: expected [Function] to throw error including 'Role access denied: organizational bo…' but got 'Cannot read properties of undefined (…'

Expected: [32m"Role access denied: organizational boundary violation"[39m
Received: [31m"Cannot read properties of undefined (reading 'map')"[39m

 ❯ src/server/api/__tests__/trpc.permission.test.ts:298:7
    296|       // Act & Assert: Should be denied
    297|       await expect(caller.testRequirePermission()).rejects.toThrow(TRP…
    298|       await expect(caller.testRequirePermission()).rejects.toThrow(
       |       ^
    299|         "Role access denied: organizational boundary violation",
    300|       );

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[158/373]⎯

 FAIL  |node| src/server/api/__tests__/trpc.permission.test.ts > tRPC Permission Middleware - ENHANCED WITH ORGANIZATIONAL BOUNDARY SECURITY > CRITICAL - Cross-Organizational Permission Isolation > CRITICAL - Should enforce permission matrix boundaries across organizations
AssertionError: promise rejected "TRPCError: Cannot read properties of unde… { code: '…' }" instead of resolving
 ❯ src/server/api/__tests__/trpc.permission.test.ts:356:54
    354|         // Act & Assert
    355|         if (testCase.shouldSucceed) {
    356|           await expect(caller.testRequirePermission()).resolves.toEqua…
       |                                                      ^
    357|             message: "Permission granted",
    358|           });

Caused by: TRPCError: Cannot read properties of undefined (reading 'map')
 ❯ src/server/api/trpc.base.ts:380:58
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ src/server/api/trpc.base.ts:238:22
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ procedure node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:673:20
 ❯ node_modules/@trpc/server/src/unstable-core-do-not-import/router.ts:473:20
 ❯ src/server/api/__tests__/trpc.permission.test.ts:356:11

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: 'INTERNAL_SERVER_ERROR' }
Caused by: TypeError: Cannot read properties of undefined (reading 'map')
 ❯ src/server/api/trpc.base.ts:380:58
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ src/server/api/trpc.base.ts:238:22
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ procedure node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:673:20
 ❯ node_modules/@trpc/server/src/unstable-core-do-not-import/router.ts:473:20
 ❯ src/server/api/__tests__/trpc.permission.test.ts:356:11

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[159/373]⎯

 FAIL  |node| src/server/api/__tests__/trpc.permission.test.ts > tRPC Permission Middleware - ENHANCED WITH ORGANIZATIONAL BOUNDARY SECURITY > Security Edge Cases and Attack Vectors > should handle invalid organizational context gracefully
AssertionError: expected [Function] to throw error including 'Invalid organizational context' but got 'Cannot read properties of undefined (…'

Expected: [32m"Invalid organizational context"[39m
Received: [31m"Cannot read properties of undefined (reading 'map')"[39m

 ❯ src/server/api/__tests__/trpc.permission.test.ts:384:7
    382|       // Act & Assert
    383|       await expect(caller.testRequirePermission()).rejects.toThrow(TRP…
    384|       await expect(caller.testRequirePermission()).rejects.toThrow(
       |       ^
    385|         "Invalid organizational context",
    386|       );

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[160/373]⎯

 FAIL  |node| src/server/api/__tests__/trpc.permission.test.ts > tRPC Permission Middleware - ENHANCED WITH ORGANIZATIONAL BOUNDARY SECURITY > Security Edge Cases and Attack Vectors > should prevent session hijacking with org context validation
AssertionError: expected [Function] to throw error including 'Organization context mismatch' but got 'Cannot read properties of undefined (…'

Expected: [32m"Organization context mismatch"[39m
Received: [31m"Cannot read properties of undefined (reading 'map')"[39m

 ❯ src/server/api/__tests__/trpc.permission.test.ts:412:7
    410|       // Act & Assert
    411|       await expect(caller.testRequirePermission()).rejects.toThrow(TRP…
    412|       await expect(caller.testRequirePermission()).rejects.toThrow(
       |       ^
    413|         "Organization context mismatch",
    414|       );

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[161/373]⎯

 FAIL  |node| src/server/api/__tests__/trpc.permission.test.ts > tRPC Permission Middleware - ENHANCED WITH ORGANIZATIONAL BOUNDARY SECURITY > Security Edge Cases and Attack Vectors > should handle null/undefined organizational context securely
AssertionError: expected [Function] to throw error including 'Missing organizational context' but got 'Cannot read properties of undefined (…'

Expected: [32m"Missing organizational context"[39m
Received: [31m"Cannot read properties of undefined (reading 'map')"[39m

 ❯ src/server/api/__tests__/trpc.permission.test.ts:435:7
    433|       // Act & Assert
    434|       await expect(caller.testRequirePermission()).rejects.toThrow(TRP…
    435|       await expect(caller.testRequirePermission()).rejects.toThrow(
       |       ^
    436|         "Missing organizational context",
    437|       );

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[162/373]⎯

 FAIL  |node| src/server/auth/__tests__/permissions.test.ts > Permission System Core Functions - ENHANCED WITH ORGANIZATIONAL SCOPING > hasPermission > should return true when user has the required permission
TypeError: Cannot read properties of undefined (reading 'map')
 ❯ hasPermission src/server/auth/permissions.ts:61:48
     59| 
     60|   const permissionService = new PermissionService(db);
     61|   const rolePermissions = role.rolePermissions.map((rp) => rp.permissi…
       |                                                ^
     62|   const expandedPermissions =
     63|     permissionService.expandPermissionsWithDependencies(rolePermission…
 ❯ src/server/auth/__tests__/permissions.test.ts:58:22

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[163/373]⎯

 FAIL  |node| src/server/auth/__tests__/permissions.test.ts > Permission System Core Functions - ENHANCED WITH ORGANIZATIONAL SCOPING > hasPermission > should return false when user does not have the required permission
TypeError: Cannot read properties of undefined (reading 'map')
 ❯ hasPermission src/server/auth/permissions.ts:61:48
     59| 
     60|   const permissionService = new PermissionService(db);
     61|   const rolePermissions = role.rolePermissions.map((rp) => rp.permissi…
       |                                                ^
     62|   const expandedPermissions =
     63|     permissionService.expandPermissionsWithDependencies(rolePermission…
 ❯ src/server/auth/__tests__/permissions.test.ts:90:22

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[164/373]⎯

 FAIL  |node| src/server/auth/__tests__/permissions.test.ts > Permission System Core Functions - ENHANCED WITH ORGANIZATIONAL SCOPING > hasPermission > should handle system roles with admin permissions
AssertionError: expected false to be true // Object.is equality

[32m- Expected[39m
[31m+ Received[39m

[32m- true[39m
[31m+ false[39m

 ❯ src/server/auth/__tests__/permissions.test.ts:150:22
    148| 
    149|       // Assert
    150|       expect(result).toBe(true);
       |                      ^
    151|     });
    152|   });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[165/373]⎯

 FAIL  |node| src/server/auth/__tests__/permissions.test.ts > Permission System Core Functions - ENHANCED WITH ORGANIZATIONAL SCOPING > requirePermission > should not throw when user has required permission
AssertionError: promise rejected "TypeError: Cannot read properties of unde…" instead of resolving
 ❯ src/server/auth/__tests__/permissions.test.ts:182:7
    180|       await expect(
    181|         requirePermission(membership, permission, mockContext.db),
    182|       ).resolves.not.toThrow();
       |       ^
    183|     });
    184| 

Caused by: TypeError: Cannot read properties of undefined (reading 'map')
 ❯ hasPermission src/server/auth/permissions.ts:61:48
 ❯ requirePermission src/server/auth/permissions.ts:81:9

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[166/373]⎯

 FAIL  |node| src/server/auth/__tests__/permissions.test.ts > Permission System Core Functions - ENHANCED WITH ORGANIZATIONAL SCOPING > requirePermission > should throw FORBIDDEN error when user lacks required permission
AssertionError: expected error to be instance of TRPCError

[32m- Expected:[39m 
[Function TRPCError]

[31m+ Received:[39m 
TypeError {
  "message": "Cannot read properties of undefined (reading 'map')",
}

 ❯ src/server/auth/__tests__/permissions.test.ts:202:7
    200| 
    201|       // Act & Assert
    202|       await expect(
       |       ^
    203|         requirePermission(membership, permission, mockContext.db),
    204|       ).rejects.toThrow(TRPCError);

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[167/373]⎯

 FAIL  |node| src/server/auth/__tests__/permissions.test.ts > Permission System Core Functions - ENHANCED WITH ORGANIZATIONAL SCOPING > requirePermission > should throw FORBIDDEN error with correct error code
AssertionError: expected TypeError: Cannot read properties of unde… to be an instance of TRPCError
 ❯ src/server/auth/__tests__/permissions.test.ts:231:23
    229|         expect.fail("Should have thrown TRPCError");
    230|       } catch (error) {
    231|         expect(error).toBeInstanceOf(TRPCError);
       |                       ^
    232|         expect((error as TRPCError).code).toBe("FORBIDDEN");
    233|         expect((error as TRPCError).message).toBe(

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[168/373]⎯

 FAIL  |node| src/server/auth/__tests__/permissions.test.ts > Permission System Core Functions - ENHANCED WITH ORGANIZATIONAL SCOPING > getUserPermissions > should return all permissions for a user's role
TypeError: Cannot read properties of undefined (reading 'map')
 ❯ getUserPermissions src/server/auth/permissions.ts:129:48
    127| 
    128|   const permissionService = new PermissionService(db);
    129|   const rolePermissions = role.rolePermissions.map((rp) => rp.permissi…
       |                                                ^
    130|   return permissionService.expandPermissionsWithDependencies(rolePermi…
    131| }
 ❯ src/server/auth/__tests__/permissions.test.ts:280:22

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[169/373]⎯

 FAIL  |node| src/server/auth/__tests__/permissions.test.ts > Permission System Core Functions - ENHANCED WITH ORGANIZATIONAL SCOPING > getUserPermissions > should return empty array when role has no permissions
TypeError: Cannot read properties of undefined (reading 'map')
 ❯ getUserPermissions src/server/auth/permissions.ts:129:48
    127| 
    128|   const permissionService = new PermissionService(db);
    129|   const rolePermissions = role.rolePermissions.map((rp) => rp.permissi…
       |                                                ^
    130|   return permissionService.expandPermissionsWithDependencies(rolePermi…
    131| }
 ❯ src/server/auth/__tests__/permissions.test.ts:306:22

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[170/373]⎯

 FAIL  |node| src/server/auth/__tests__/permissions.test.ts > Permission System Core Functions - ENHANCED WITH ORGANIZATIONAL SCOPING > getUserPermissions > should handle admin role with multiple permissions
TypeError: Cannot read properties of undefined (reading 'findMany')
 ❯ src/server/auth/__tests__/permissions.test.ts:360:50
    358| 
    359|       // Mock the Drizzle query for permissions
    360|       vi.mocked(mockContext.db.query.permissions.findMany).mockResolve…
       |                                                  ^
    361|         adminPermissions.map((name, index) => ({
    362|           id: `perm-${(index + 1).toString()}`,

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[171/373]⎯

 FAIL  |node| src/server/auth/__tests__/permissions.test.ts > Permission System Core Functions - ENHANCED WITH ORGANIZATIONAL SCOPING > CRITICAL - Cross-Organizational Permission Boundaries > CRITICAL - Should prevent accessing roles from other organizations
AssertionError: expected "spy" to be called with arguments: [ { where: Any<Function>, …(1) } ][90m

Received: 

[1m  1st spy call:

[22m[2m  [[22m
[2m    {[22m
[32m-     "where": Any<Function>,[90m
[31m+     "columns": {[90m
[31m+       "name": true,[90m
[31m+     },[90m
[31m+     "where": SQL {[90m
[31m+       "decoder": {[90m
[31m+         "mapFromDriverValue": [Function mapFromDriverValue],[90m
[31m+       },[90m
[31m+       "queryChunks": [[90m
[31m+         StringChunk {[90m
[31m+           "value": [[90m
[31m+             "",[90m
[31m+           ],[90m
[31m+         },[90m
[31m+         PgText {[90m
[31m+           "columnType": "PgText",[90m
[31m+           "config": {[90m
[31m+             "columnType": "PgText",[90m
[31m+             "dataType": "string",[90m
[31m+             "default": undefined,[90m
[31m+             "enumValues": undefined,[90m
[31m+             "generated": undefined,[90m
[31m+             "hasDefault": false,[90m
[31m+             "isUnique": false,[90m
[31m+             "keyAsName": false,[90m
[31m+             "name": "id",[90m
[31m+             "notNull": true,[90m
[31m+             "primaryKey": true,[90m
[31m+             "uniqueName": "roles_id_unique",[90m
[31m+             "uniqueType": undefined,[90m
[31m+           },[90m
[31m+           "dataType": "string",[90m
[31m+           "default": undefined,[90m
[31m+           "defaultFn": undefined,[90m
[31m+           "enumValues": undefined,[90m
[31m+           "generated": undefined,[90m
[31m+           "generatedIdentity": undefined,[90m
[31m+           "hasDefault": false,[90m
[31m+           "isUnique": false,[90m
[31m+           "keyAsName": false,[90m
[31m+           "name": "id",[90m
[31m+           "notNull": true,[90m
[31m+           "onUpdateFn": undefined,[90m
[31m+           "primary": true,[90m
[31m+           "table": PgTable {[90m
[31m+             "createdAt": PgTimestamp {[90m
[31m+               "columnType": "PgTimestamp",[90m
[31m+               "config": {[90m
[31m+                 "columnType": "PgTimestamp",[90m
[31m+                 "dataType": "date",[90m
[31m+                 "default": SQL {[90m
[31m+                   "decoder": {[90m
[31m+                     "mapFromDriverValue": [Function mapFromDriverValue],[90m
[31m+                   },[90m
[31m+                   "queryChunks": [[90m
[31m+                     StringChunk {[90m
[31m+                       "value": [[90m
[31m+                         "now()",[90m
[31m+                       ],[90m
[31m+                     },[90m
[31m+                   ],[90m
[31m+                   "shouldInlineParams": false,[90m
[31m+                   "usedTables": [],[90m
[31m+                 },[90m
[31m+                 "generated": undefined,[90m
[31m+                 "hasDefault": true,[90m
[31m+                 "isUnique": false,[90m
[31m+                 "keyAsName": false,[90m
[31m+                 "name": "createdAt",[90m
[31m+                 "notNull": true,[90m
[31m+                 "precision": undefined,[90m
[31m+                 "primaryKey": false,[90m
[31m+                 "uniqueName": "roles_createdAt_unique",[90m
[31m+                 "uniqueType": undefined,[90m
[31m+                 "withTimezone": false,[90m
[31m+               },[90m
[31m+               "dataType": "date",[90m
[31m+               "default": SQL {[90m
[31m+                 "decoder": {[90m
[31m+                   "mapFromDriverValue": [Function mapFromDriverValue],[90m
[31m+                 },[90m
[31m+                 "queryChunks": [[90m
[31m+                   StringChunk {[90m
[31m+                     "value": [[90m
[31m+                       "now()",[90m
[31m+                     ],[90m
[31m+                   },[90m
[31m+                 ],[90m
[31m+                 "shouldInlineParams": false,[90m
[31m+                 "usedTables": [],[90m
[31m+               },[90m
[31m+               "defaultFn": undefined,[90m
[31m+               "enumValues": undefined,[90m
[31m+               "generated": undefined,[90m
[31m+               "generatedIdentity": undefined,[90m
[31m+               "hasDefault": true,[90m
[31m+               "isUnique": false,[90m
[31m+               "keyAsName": false,[90m
[31m+               "mapFromDriverValue": [Function mapFromDriverValue],[90m
[31m+               "mapToDriverValue": [Function mapToDriverValue],[90m
[31m+               "name": "createdAt",[90m
[31m+               "notNull": true,[90m
[31m+               "onUpdateFn": undefined,[90m
[31m+               "precision": undefined,[90m
[31m+               "primary": false,[90m
[31m+               "table": [Circular],[90m
[31m+               "uniqueName": "roles_createdAt_unique",[90m
[31m+               "uniqueType": undefined,[90m
[31m+               "withTimezone": false,[90m
[31m+             },[90m
[31m+             "enableRLS": [Function enableRLS],[90m
[31m+             "id": [Circular],[90m
[31m+             "isDefault": PgBoolean {[90m
[31m+               "columnType": "PgBoolean",[90m
[31m+               "config": {[90m
[31m+                 "columnType": "PgBoolean",[90m
[31m+                 "dataType": "boolean",[90m
[31m+                 "default": false,[90m
[31m+                 "generated": undefined,[90m
[31m+                 "hasDefault": true,[90m
[31m+                 "isUnique": false,[90m
[31m+                 "keyAsName": false,[90m
[31m+                 "name": "isDefault",[90m
[31m+                 "notNull": true,[90m
[31m+                 "primaryKey": false,[90m
[31m+                 "uniqueName": "roles_isDefault_unique",[90m
[31m+                 "uniqueType": undefined,[90m
[31m+               },[90m
[31m+               "dataType": "boolean",[90m
[31m+               "default": false,[90m
[31m+               "defaultFn": undefined,[90m
[31m+               "enumValues": undefined,[90m
[31m+               "generated": undefined,[90m
[31m+               "generatedIdentity": undefined,[90m
[31m+               "hasDefault": true,[90m
[31m+               "isUnique": false,[90m
[31m+               "keyAsName": false,[90m
[31m+               "name": "isDefault",[90m
[31m+               "notNull": true,[90m
[31m+               "onUpdateFn": undefined,[90m
[31m+               "primary": false,[90m
[31m+               "table": [Circular],[90m
[31m+               "uniqueName": "roles_isDefault_unique",[90m
[31m+               "uniqueType": undefined,[90m
[31m+             },[90m
[31m+             "isSystem": PgBoolean {[90m
[31m+               "columnType": "PgBoolean",[90m
[31m+               "config": {[90m
[31m+                 "columnType": "PgBoolean",[90m
[31m+                 "dataType": "boolean",[90m
[31m+                 "default": false,[90m
[31m+                 "generated": undefined,[90m
[31m+                 "hasDefault": true,[90m
[31m+                 "isUnique": false,[90m
[31m+                 "keyAsName": false,[90m
[31m+                 "name": "isSystem",[90m
[31m+                 "notNull": true,[90m
[31m+                 "primaryKey": false,[90m
[31m+                 "uniqueName": "roles_isSystem_unique",[90m
[31m+                 "uniqueType": undefined,[90m
[31m+               },[90m
[31m+               "dataType": "boolean",[90m
[31m+               "default": false,[90m
[31m+               "defaultFn": undefined,[90m
[31m+               "enumValues": undefined,[90m
[31m+               "generated": undefined,[90m
[31m+               "generatedIdentity": undefined,[90m
[31m+               "hasDefault": true,[90m
[31m+               "isUnique": false,[90m
[31m+               "keyAsName": false,[90m
[31m+               "name": "isSystem",[90m
[31m+               "notNull": true,[90m
[31m+               "onUpdateFn": undefined,[90m
[31m+               "primary": false,[90m
[31m+               "table": [Circular],[90m
[31m+               "uniqueName": "roles_isSystem_unique",[90m
[31m+               "uniqueType": undefined,[90m
[31m+             },[90m
[31m+             "name": PgText {[90m
[31m+               "columnType": "PgText",[90m
[31m+               "config": {[90m
[31m+                 "columnType": "PgText",[90m
[31m+                 "dataType": "string",[90m
[31m+                 "default": undefined,[90m
[31m+                 "enumValues": undefined,[90m
[31m+                 "generated": undefined,[90m
[31m+                 "hasDefault": false,[90m
[31m+                 "isUnique": false,[90m
[31m+                 "keyAsName": false,[90m
[31m+                 "name": "name",[90m
[31m+                 "notNull": true,[90m
[31m+                 "primaryKey": false,[90m
[31m+                 "uniqueName": "roles_name_unique",[90m
[31m+                 "uniqueType": undefined,[90m
[31m+               },[90m
[31m+               "dataType": "string",[90m
[31m+               "default": undefined,[90m
[31m+               "defaultFn": undefined,[90m
[31m+               "enumValues": undefined,[90m
[31m+               "generated": undefined,[90m
[31m+               "generatedIdentity": undefined,[90m
[31m+               "hasDefault": false,[90m
[31m+               "isUnique": false,[90m
[31m+               "keyAsName": false,[90m
[31m+               "name": "name",[90m
[31m+               "notNull": true,[90m
[31m+               "onUpdateFn": undefined,[90m
[31m+               "primary": false,[90m
[31m+               "table": [Circular],[90m
[31m+               "uniqueName": "roles_name_unique",[90m
[31m+               "uniqueType": undefined,[90m
[31m+             },[90m
[31m+             "organizationId": PgText {[90m
[31m+               "columnType": "PgText",[90m
[31m+               "config": {[90m
[31m+                 "columnType": "PgText",[90m
[31m+                 "dataType": "string",[90m
[31m+                 "default": undefined,[90m
[31m+                 "enumValues": undefined,[90m
[31m+                 "generated": undefined,[90m
[31m+                 "hasDefault": false,[90m
[31m+                 "isUnique": false,[90m
[31m+                 "keyAsName": false,[90m
[31m+                 "name": "organizationId",[90m
[31m+                 "notNull": true,[90m
[31m+                 "primaryKey": false,[90m
[31m+                 "uniqueName": "roles_organizationId_unique",[90m
[31m+                 "uniqueType": undefined,[90m
[31m+               },[90m
[31m+               "dataType": "string",[90m
[31m+               "default": undefined,[90m
[31m+               "defaultFn": undefined,[90m
[31m+               "enumValues": undefined,[90m
[31m+               "generated": undefined,[90m
[31m+               "generatedIdentity": undefined,[90m
[31m+               "hasDefault": false,[90m
[31m+               "isUnique": false,[90m
[31m+               "keyAsName": false,[90m
[31m+               "name": "organizationId",[90m
[31m+               "notNull": true,[90m
[31m+               "onUpdateFn": undefined,[90m
[31m+               "primary": false,[90m
[31m+               "table": [Circular],[90m
[31m+               "uniqueName": "roles_organizationId_unique",[90m
[31m+               "uniqueType": undefined,[90m
[31m+             },[90m
[31m+             "updatedAt": PgTimestamp {[90m
[31m+               "columnType": "PgTimestamp",[90m
[31m+               "config": {[90m
[31m+                 "columnType": "PgTimestamp",[90m
[31m+                 "dataType": "date",[90m
[31m+                 "default": SQL {[90m
[31m+                   "decoder": {[90m
[31m+                     "mapFromDriverValue": [Function mapFromDriverValue],[90m
[31m+                   },[90m
[31m+                   "queryChunks": [[90m
[31m+                     StringChunk {[90m
[31m+                       "value": [[90m
[31m+                         "now()",[90m
[31m+                       ],[90m
[31m+                     },[90m
[31m+                   ],[90m
[31m+                   "shouldInlineParams": false,[90m
[31m+                   "usedTables": [],[90m
[31m+                 },[90m
[31m+                 "generated": undefined,[90m
[31m+                 "hasDefault": true,[90m
[31m+                 "isUnique": false,[90m
[31m+                 "keyAsName": false,[90m
[31m+                 "name": "updatedAt",[90m
[31m+                 "notNull": true,[90m
[31m+                 "precision": undefined,[90m
[31m+                 "primaryKey": false,[90m
[31m+                 "uniqueName": "roles_updatedAt_unique",[90m
[31m+                 "uniqueType": undefined,[90m
[31m+                 "withTimezone": false,[90m
[31m+               },[90m
[31m+               "dataType": "date",[90m
[31m+               "default": SQL {[90m
[31m+                 "decoder": {[90m
[31m+                   "mapFromDriverValue": [Function mapFromDriverValue],[90m
[31m+                 },[90m
[31m+                 "queryChunks": [[90m
[31m+                   StringChunk {[90m
[31m+                     "value": [[90m
[31m+                       "now()",[90m
[31m+                     ],[90m
[31m+                   },[90m
[31m+                 ],[90m
[31m+                 "shouldInlineParams": false,[90m
[31m+                 "usedTables": [],[90m
[31m+               },[90m
[31m+               "defaultFn": undefined,[90m
[31m+               "enumValues": undefined,[90m
[31m+               "generated": undefined,[90m
[31m+               "generatedIdentity": undefined,[90m
[31m+               "hasDefault": true,[90m
[31m+               "isUnique": false,[90m
[31m+               "keyAsName": false,[90m
[31m+               "mapFromDriverValue": [Function mapFromDriverValue],[90m
[31m+               "mapToDriverValue": [Function mapToDriverValue],[90m
[31m+               "name": "updatedAt",[90m
[31m+               "notNull": true,[90m
[31m+               "onUpdateFn": undefined,[90m
[31m+               "precision": undefined,[90m
[31m+               "primary": false,[90m
[31m+               "table": [Circular],[90m
[31m+               "uniqueName": "roles_updatedAt_unique",[90m
[31m+               "uniqueType": undefined,[90m
[31m+               "withTimezone": false,[90m
[31m+             },[90m
[31m+             Symbol(drizzle:Name): "roles",[90m
[31m+             Symbol(drizzle:OriginalName): "roles",[90m
[31m+             Symbol(drizzle:Schema): undefined,[90m
[31m+             Symbol(drizzle:Columns): {[90m
[31m+               "createdAt": PgTimestamp {[90m
[31m+                 "columnType": "PgTimestamp",[90m
[31m+                 "config": {[90m
[31m+                   "columnType": "PgTimestamp",[90m
[31m+                   "dataType": "date",[90m
[31m+                   "default": SQL {[90m
[31m+                     "decoder": {[90m
[31m+                       "mapFromDriverValue": [Function mapFromDriverValue],[90m
[31m+                     },[90m
[31m+                     "queryChunks": [[90m
[31m+                       StringChunk {[90m
[31m+                         "value": [[90m
[31m+                           "now()",[90m
[31m+                         ],[90m
[31m+                       },[90m
[31m+                     ],[90m
[31m+                     "shouldInlineParams": false,[90m
[31m+                     "usedTables": [],[90m
[31m+                   },[90m
[31m+                   "generated": undefined,[90m
[31m+                   "hasDefault": true,[90m
[31m+                   "isUnique": false,[90m
[31m+                   "keyAsName": false,[90m
[31m+                   "name": "createdAt",[90m
[31m+                   "notNull": true,[90m
[31m+                   "precision": undefined,[90m
[31m+                   "primaryKey": false,[90m
[31m+                   "uniqueName": "roles_createdAt_unique",[90m
[31m+                   "uniqueType": undefined,[90m
[31m+                   "withTimezone": false,[90m
[31m+                 },[90m
[31m+                 "dataType": "date",[90m
[31m+                 "default": SQL {[90m
[31m+                   "decoder": {[90m
[31m+                     "mapFromDriverValue": [Function mapFromDriverValue],[90m
[31m+                   },[90m
[31m+                   "queryChunks": [[90m
[31m+                     StringChunk {[90m
[31m+                       "value": [[90m
[31m+                         "now()",[90m
[31m+                       ],[90m
[31m+                     },[90m
[31m+                   ],[90m
[31m+                   "shouldInlineParams": false,[90m
[31m+                   "usedTables": [],[90m
[31m+                 },[90m
[31m+                 "defaultFn": undefined,[90m
[31m+                 "enumValues": undefined,[90m
[31m+                 "generated": undefined,[90m
[31m+                 "generatedIdentity": undefined,[90m
[31m+                 "hasDefault": true,[90m
[31m+                 "isUnique": false,[90m
[31m+                 "keyAsName": false,[90m
[31m+                 "mapFromDriverValue": [Function mapFromDriverValue],[90m
[31m+                 "mapToDriverValue": [Function mapToDriverValue],[90m
[31m+                 "name": "createdAt",[90m
[31m+                 "notNull": true,[90m
[31m+                 "onUpdateFn": undefined,[90m
[31m+                 "precision": undefined,[90m
[31m+                 "primary": false,[90m
[31m+                 "table": [Circular],[90m
[31m+                 "uniqueName": "roles_createdAt_unique",[90m
[31m+                 "uniqueType": undefined,[90m
[31m+                 "withTimezone": false,[90m
[31m+               },[90m
[31m+               "id": [Circular],[90m
[31m+               "isDefault": PgBoolean {[90m
[31m+                 "columnType": "PgBoolean",[90m
[31m+                 "config": {[90m
[31m+                   "columnType": "PgBoolean",[90m
[31m+                   "dataType": "boolean",[90m
[31m+                   "default": false,[90m
[31m+                   "generated": undefined,[90m
[31m+                   "hasDefault": true,[90m
[31m+                   "isUnique": false,[90m
[31m+                   "keyAsName": false,[90m
[31m+                   "name": "isDefault",[90m
[31m+                   "notNull": true,[90m
[31m+                   "primaryKey": false,[90m
[31m+                   "uniqueName": "roles_isDefault_unique",[90m
[31m+                   "uniqueType": undefined,[90m
[31m+                 },[90m
[31m+                 "dataType": "boolean",[90m
[31m+                 "default": false,[90m
[31m+                 "defaultFn": undefined,[90m
[31m+                 "enumValues": undefined,[90m
[31m+                 "generated": undefined,[90m
[31m+                 "generatedIdentity": undefined,[90m
[31m+                 "hasDefault": true,[90m
[31m+                 "isUnique": false,[90m
[31m+                 "keyAsName": false,[90m
[31m+                 "name": "isDefault",[90m
[31m+                 "notNull": true,[90m
[31m+                 "onUpdateFn": undefined,[90m
[31m+                 "primary": false,[90m
[31m+                 "table": [Circular],[90m
[31m+                 "uniqueName": "roles_isDefault_unique",[90m
[31m+                 "uniqueType": undefined,[90m
[31m+               },[90m
[31m+               "isSystem": PgBoolean {[90m
[31m+                 "columnType": "PgBoolean",[90m
[31m+                 "config": {[90m
[31m+                   "columnType": "PgBoolean",[90m
[31m+                   "dataType": "boolean",[90m
[31m+                   "default": false,[90m
[31m+                   "generated": undefined,[90m
[31m+                   "hasDefault": true,[90m
[31m+                   "isUnique": false,[90m
[31m+                   "keyAsName": false,[90m
[31m+                   "name": "isSystem",[90m
[31m+                   "notNull": true,[90m
[31m+                   "primaryKey": false,[90m
[31m+                   "uniqueName": "roles_isSystem_unique",[90m
[31m+                   "uniqueType": undefined,[90m
[31m+                 },[90m
[31m+                 "dataType": "boolean",[90m
[31m+                 "default": false,[90m
[31m+                 "defaultFn": undefined,[90m
[31m+                 "enumValues": undefined,[90m
[31m+                 "generated": undefined,[90m
[31m+                 "generatedIdentity": undefined,[90m
[31m+                 "hasDefault": true,[90m
[31m+                 "isUnique": false,[90m
[31m+                 "keyAsName": false,[90m
[31m+                 "name": "isSystem",[90m
[31m+                 "notNull": true,[90m
[31m+                 "onUpdateFn": undefined,[90m
[31m+                 "primary": false,[90m
[31m+                 "table": [Circular],[90m
[31m+                 "uniqueName": "roles_isSystem_unique",[90m
[31m+                 "uniqueType": undefined,[90m
[31m+               },[90m
[31m+               "name": PgText {[90m
[31m+                 "columnType": "PgText",[90m
[31m+                 "config": {[90m
[31m+                   "columnType": "PgText",[90m
[31m+                   "dataType": "string",[90m
[31m+                   "default": undefined,[90m
[31m+                   "enumValues": undefined,[90m
[31m+                   "generated": undefined,[90m
[31m+                   "hasDefault": false,[90m
[31m+                   "isUnique": false,[90m
[31m+                   "keyAsName": false,[90m
[31m+                   "name": "name",[90m
[31m+                   "notNull": true,[90m
[31m+                   "primaryKey": false,[90m
[31m+                   "uniqueName": "roles_name_unique",[90m
[31m+                   "uniqueType": undefined,[90m
[31m+                 },[90m
[31m+                 "dataType": "string",[90m
[31m+                 "default": undefined,[90m
[31m+                 "defaultFn": undefined,[90m
[31m+                 "enumValues": undefined,[90m
[31m+                 "generated": undefined,[90m
[31m+                 "generatedIdentity": undefined,[90m
[31m+                 "hasDefault": false,[90m
[31m+                 "isUnique": false,[90m
[31m+                 "keyAsName": false,[90m
[31m+                 "name": "name",[90m
[31m+                 "notNull": true,[90m
[31m+                 "onUpdateFn": undefined,[90m
[31m+                 "primary": false,[90m
[31m+                 "table": [Circular],[90m
[31m+                 "uniqueName": "roles_name_unique",[90m
[31m+                 "uniqueType": undefined,[90m
[31m+               },[90m
[31m+               "organizationId": PgText {[90m
[31m+                 "columnType": "PgText",[90m
[31m+                 "config": {[90m
[31m+                   "columnType": "PgText",[90m
[31m+                   "dataType": "string",[90m
[31m+                   "default": undefined,[90m
[31m+                   "enumValues": undefined,[90m
[31m+                   "generated": undefined,[90m
[31m+                   "hasDefault": false,[90m
[31m+                   "isUnique": false,[90m
[31m+                   "keyAsName": false,[90m
[31m+                   "name": "organizationId",[90m
[31m+                   "notNull": true,[90m
[31m+                   "primaryKey": false,[90m
[31m+                   "uniqueName": "roles_organizationId_unique",[90m
[31m+                   "uniqueType": undefined,[90m
[31m+                 },[90m
[31m+                 "dataType": "string",[90m
[31m+                 "default": undefined,[90m
[31m+                 "defaultFn": undefined,[90m
[31m+                 "enumValues": undefined,[90m
[31m+                 "generated": undefined,[90m
[31m+                 "generatedIdentity": undefined,[90m
[31m+                 "hasDefault": false,[90m
[31m+                 "isUnique": false,[90m
[31m+                 "keyAsName": false,[90m
[31m+                 "name": "organizationId",[90m
[31m+                 "notNull": true,[90m
[31m+                 "onUpdateFn": undefined,[90m
[31m+                 "primary": false,[90m
[31m+                 "table": [Circular],[90m
[31m+                 "uniqueName": "roles_organizationId_unique",[90m
[31m+                 "uniqueType": undefined,[90m
[31m+               },[90m
[31m+               "updatedAt": PgTimestamp {[90m
[31m+                 "columnType": "PgTimestamp",[90m
[31m+                 "config": {[90m
[31m+                   "columnType": "PgTimestamp",[90m
[31m+                   "dataType": "date",[90m
[31m+                   "default": SQL {[90m
[31m+                     "decoder": {[90m
[31m+                       "mapFromDriverValue": [Function mapFromDriverValue],[90m
[31m+                     },[90m
[31m+                     "queryChunks": [[90m
[31m+                       StringChunk {[90m
[31m+                         "value": [[90m
[31m+                           "now()",[90m
[31m+                         ],[90m
[31m+                       },[90m
[31m+                     ],[90m
[31m+                     "shouldInlineParams": false,[90m
[31m+                     "usedTables": [],[90m
[31m+                   },[90m
[31m+                   "generated": undefined,[90m
[31m+                   "hasDefault": true,[90m
[31m+                   "isUnique": false,[90m
[31m+                   "keyAsName": false,[90m
[31m+                   "name": "updatedAt",[90m
[31m+                   "notNull": true,[90m
[31m+                   "precision": undefined,[90m
[31m+                   "primaryKey": false,[90m
[31m+                   "uniqueName": "roles_updatedAt_unique",[90m
[31m+                   "uniqueType": undefined,[90m
[31m+                   "withTimezone": false,[90m
[31m+                 },[90m
[31m+                 "dataType": "date",[90m
[31m+                 "default": SQL {[90m
[31m+                   "decoder": {[90m
[31m+                     "mapFromDriverValue": [Function mapFromDriverValue],[90m
[31m+                   },[90m
[31m+                   "queryChunks": [[90m
[31m+                     StringChunk {[90m
[31m+                       "value": [[90m
[31m+                         "now()",[90m
[31m+                       ],[90m
[31m+                     },[90m
[31m+                   ],[90m
[31m+                   "shouldInlineParams": false,[90m
[31m+                   "usedTables": [],[90m
[31m+                 },[90m
[31m+                 "defaultFn": undefined,[90m
[31m+                 "enumValues": undefined,[90m
[31m+                 "generated": undefined,[90m
[31m+                 "generatedIdentity": undefined,[90m
[31m+                 "hasDefault": true,[90m
[31m+                 "isUnique": false,[90m
[31m+                 "keyAsName": false,[90m
[31m+                 "mapFromDriverValue": [Function mapFromDriverValue],[90m
[31m+                 "mapToDriverValue": [Function mapToDriverValue],[90m
[31m+                 "name": "updatedAt",[90m
[31m+                 "notNull": true,[90m
[31m+                 "onUpdateFn": undefined,[90m
[31m+                 "precision": undefined,[90m
[31m+                 "primary": false,[90m
[31m+                 "table": [Circular],[90m
[31m+                 "uniqueName": "roles_updatedAt_unique",[90m
[31m+                 "uniqueType": undefined,[90m
[31m+                 "withTimezone": false,[90m
[31m+               },[90m
[31m+             },[90m
[31m+             Symbol(drizzle:ExtraConfigColumns): {[90m
[31m+               "createdAt": ExtraConfigColumn {[90m
[31m+                 "columnType": "PgTimestamp",[90m
[31m+                 "config": {[90m
[31m+                   "columnType": "PgTimestamp",[90m
[31m+                   "dataType": "date",[90m
[31m+                   "default": SQL {[90m
[31m+                     "decoder": {[90m
[31m+                       "mapFromDriverValue": [Function mapFromDriverValue],[90m
[31m+                     },[90m
[31m+                     "queryChunks": [[90m
[31m+                       StringChunk {[90m
[31m+                         "value": [[90m
[31m+                           "now()",[90m
[31m+                         ],[90m
[31m+                       },[90m
[31m+                     ],[90m
[31m+                     "shouldInlineParams": false,[90m
[31m+                     "usedTables": [],[90m
[31m+                   },[90m
[31m+                   "generated": undefined,[90m
[31m+                   "hasDefault": true,[90m
[31m+                   "isUnique": false,[90m
[31m+                   "keyAsName": false,[90m
[31m+                   "name": "createdAt",[90m
[31m+                   "notNull": true,[90m
[31m+                   "precision": undefined,[90m
[31m+                   "primaryKey": false,[90m
[31m+                   "uniqueName": "roles_createdAt_unique",[90m
[31m+                   "uniqueType": undefined,[90m
[31m+                   "withTimezone": false,[90m
[31m+                 },[90m
[31m+                 "dataType": "date",[90m
[31m+                 "default": SQL {[90m
[31m+                   "decoder": {[90m
[31m+                     "mapFromDriverValue": [Function mapFromDriverValue],[90m
[31m+                   },[90m
[31m+                   "queryChunks": [[90m
[31m+                     StringChunk {[90m
[31m+                       "value": [[90m
[31m+                         "now()",[90m
[31m+                       ],[90m
[31m+                     },[90m
[31m+                   ],[90m
[31m+                   "shouldInlineParams": false,[90m
[31m+                   "usedTables": [],[90m
[31m+                 },[90m
[31m+                 "defaultConfig": {[90m
[31m+                   "nulls": "last",[90m
[31m+                   "opClass": undefined,[90m
[31m+                   "order": "asc",[90m
[31m+                 },[90m
[31m+                 "defaultFn": undefined,[90m
[31m+                 "enumValues": undefined,[90m
[31m+                 "generated": undefined,[90m
[31m+                 "generatedIdentity": undefined,[90m
[31m+                 "hasDefault": true,[90m
[31m+                 "indexConfig": {[90m
[31m+                   "nulls": "last",[90m
[31m+                   "opClass": undefined,[90m
[31m+                   "order": "asc",[90m
[31m+                 },[90m
[31m+                 "isUnique": false,[90m
[31m+                 "keyAsName": false,[90m
[31m+                 "name": "createdAt",[90m
[31m+                 "notNull": true,[90m
[31m+                 "onUpdateFn": undefined,[90m
[31m+                 "primary": false,[90m
[31m+                 "table": [Circular],[90m
[31m+                 "uniqueName": "roles_createdAt_unique",[90m
[31m+                 "uniqueType": undefined,[90m
[31m+               },[90m
[31m+               "id": ExtraConfigColumn {[90m
[31m+                 "columnType": "PgText",[90m
[31m+                 "config": {[90m
[31m+                   "columnType": "PgText",[90m
[31m+                   "dataType": "string",[90m
[31m+                   "default": undefined,[90m
[31m+                   "enumValues": undefined,[90m
[31m+                   "generated": undefined,[90m
[31m+                   "hasDefault": false,[90m
[31m+                   "isUnique": false,[90m
[31m+                   "keyAsName": false,[90m
[31m+                   "name": "id",[90m
[31m+                   "notNull": true,[90m
[31m+                   "primaryKey": true,[90m
[31m+                   "uniqueName": "roles_id_unique",[90m
[31m+                   "uniqueType": undefined,[90m
[31m+                 },[90m
[31m+                 "dataType": "string",[90m
[31m+                 "default": undefined,[90m
[31m+                 "defaultConfig": {[90m
[31m+                   "nulls": "last",[90m
[31m+                   "opClass": undefined,[90m
[31m+                   "order": "asc",[90m
[31m+                 },[90m
[31m+                 "defaultFn": undefined,[90m
[31m+                 "enumValues": undefined,[90m
[31m+                 "generated": undefined,[90m
[31m+                 "generatedIdentity": undefined,[90m
[31m+                 "hasDefault": false,[90m
[31m+                 "indexConfig": {[90m
[31m+                   "nulls": "last",[90m
[31m+                   "opClass": undefined,[90m
[31m+                   "order": "asc",[90m
[31m+                 },[90m
[31m+                 "isUnique": false,[90m
[31m+                 "keyAsName": false,[90m
[31m+                 "name": "id",[90m
[31m+                 "notNull": true,[90m
[31m+                 "onUpdateFn": undefined,[90m
[31m+                 "primary": true,[90m
[31m+                 "table": [Circular],[90m
[31m+                 "uniqueName": "roles_id_unique",[90m
[31m+                 "uniqueType": undefined,[90m
[31m+               },[90m
[31m+               "isDefault": ExtraConfigColumn {[90m
[31m+                 "columnType": "PgBoolean",[90m
[31m+                 "config": {[90m
[31m+                   "columnType": "PgBoolean",[90m
[31m+                   "dataType": "boolean",[90m
[31m+                   "default": false,[90m
[31m+                   "generated": undefined,[90m
[31m+                   "hasDefault": true,[90m
[31m+                   "isUnique": false,[90m
[31m+                   "keyAsName": false,[90m
[31m+                   "name": "isDefault",[90m
[31m+                   "notNull": true,[90m
[31m+                   "primaryKey": false,[90m
[31m+                   "uniqueName": "roles_isDefault_unique",[90m
[31m+                   "uniqueType": undefined,[90m
[31m+                 },[90m
[31m+                 "dataType": "boolean",[90m
[31m+                 "default": false,[90m
[31m+                 "defaultConfig": {[90m
[31m+                   "nulls": "last",[90m
[31m+                   "opClass": undefined,[90m
[31m+                   "order": "asc",[90m
[31m+                 },[90m
[31m+                 "defaultFn": undefined,[90m
[31m+                 "enumValues": undefined,[90m
[31m+                 "generated": undefined,[90m
[31m+                 "generatedIdentity": undefined,[90m
[31m+                 "hasDefault": true,[90m
[31m+                 "indexConfig": {[90m
[31m+                   "nulls": "last",[90m
[31m+                   "opClass": undefined,[90m
[31m+                   "order": "asc",[90m
[31m+                 },[90m
[31m+                 "isUnique": false,[90m
[31m+                 "keyAsName": false,[90m
[31m+                 "name": "isDefault",[90m
[31m+                 "notNull": true,[90m
[31m+                 "onUpdateFn": undefined,[90m
[31m+                 "primary": false,[90m
[31m+                 "table": [Circular],[90m
[31m+                 "uniqueName": "roles_isDefault_unique",[90m
[31m+                 "uniqueType": undefined,[90m
[31m+               },[90m
[31m+               "isSystem": ExtraConfigColumn {[90m
[31m+                 "columnType": "PgBoolean",[90m
[31m+                 "config": {[90m
[31m+                   "columnType": "PgBoolean",[90m
[31m+                   "dataType": "boolean",[90m
[31m+                   "default": false,[90m
[31m+                   "generated": undefined,[90m
[31m+                   "hasDefault": true,[90m
[31m+                   "isUnique": false,[90m
[31m+                   "keyAsName": false,[90m
[31m+                   "name": "isSystem",[90m
[31m+                   "notNull": true,[90m
[31m+                   "primaryKey": false,[90m
[31m+                   "uniqueName": "roles_isSystem_unique",[90m
[31m+                   "uniqueType": undefined,[90m
[31m+                 },[90m
[31m+                 "dataType": "boolean",[90m
[31m+                 "default": false,[90m
[31m+                 "defaultConfig": {[90m
[31m+                   "nulls": "last",[90m
[31m+                   "opClass": undefined,[90m
[31m+                   "order": "asc",[90m
[31m+                 },[90m
[31m+                 "defaultFn": undefined,[90m
[31m+                 "enumValues": undefined,[90m
[31m+                 "generated": undefined,[90m
[31m+                 "generatedIdentity": undefined,[90m
[31m+                 "hasDefault": true,[90m
[31m+                 "indexConfig": {[90m
[31m+                   "nulls": "last",[90m
[31m+                   "opClass": undefined,[90m
[31m+                   "order": "asc",[90m
[31m+                 },[90m
[31m+                 "isUnique": false,[90m
[31m+                 "keyAsName": false,[90m
[31m+                 "name": "isSystem",[90m
[31m+                 "notNull": true,[90m
[31m+                 "onUpdateFn": undefined,[90m
[31m+                 "primary": false,[90m
[31m+                 "table": [Circular],[90m
[31m+                 "uniqueName": "roles_isSystem_unique",[90m
[31m+                 "uniqueType": undefined,[90m
[31m+               },[90m
[31m+               "name": ExtraConfigColumn {[90m
[31m+                 "columnType": "PgText",[90m
[31m+                 "config": {[90m
[31m+                   "columnType": "PgText",[90m
[31m+                   "dataType": "string",[90m
[31m+                   "default": undefined,[90m
[31m+                   "enumValues": undefined,[90m
[31m+                   "generated": undefined,[90m
[31m+                   "hasDefault": false,[90m
[31m+                   "isUnique": false,[90m
[31m+                   "keyAsName": false,[90m
[31m+                   "name": "name",[90m
[31m+                   "notNull": true,[90m
[31m+                   "primaryKey": false,[90m
[31m+                   "uniqueName": "roles_name_unique",[90m
[31m+                   "uniqueType": undefined,[90m
[31m+                 },[90m
[31m+                 "dataType": "string",[90m
[31m+                 "default": undefined,[90m
[31m+                 "defaultConfig": {[90m
[31m+                   "nulls": "last",[90m
[31m+                   "opClass": undefined,[90m
[31m+                   "order": "asc",[90m
[31m+                 },[90m
[31m+                 "defaultFn": undefined,[90m
[31m+                 "enumValues": undefined,[90m
[31m+                 "generated": undefined,[90m
[31m+                 "generatedIdentity": undefined,[90m
[31m+                 "hasDefault": false,[90m
[31m+                 "indexConfig": {[90m
[31m+                   "nulls": "last",[90m
[31m+                   "opClass": undefined,[90m
[31m+                   "order": "asc",[90m
[31m+                 },[90m
[31m+                 "isUnique": false,[90m
[31m+                 "keyAsName": false,[90m
[31m+                 "name": "name",[90m
[31m+                 "notNull": true,[90m
[31m+                 "onUpdateFn": undefined,[90m
[31m+                 "primary": false,[90m
[31m+                 "table": [Circular],[90m
[31m+                 "uniqueName": "roles_name_unique",[90m
[31m+                 "uniqueType": undefined,[90m
[31m+               },[90m
[31m+               "organizationId": ExtraConfigColumn {[90m
[31m+                 "columnType": "PgText",[90m
[31m+                 "config": {[90m
[31m+                   "columnType": "PgText",[90m
[31m+                   "dataType": "string",[90m
[31m+                   "default": undefined,[90m
[31m+                   "enumValues": undefined,[90m
[31m+                   "generated": undefined,[90m
[31m+                   "hasDefault": false,[90m
[31m+                   "isUnique": false,[90m
[31m+                   "keyAsName": false,[90m
[31m+                   "name": "organizationId",[90m
[31m+                   "notNull": true,[90m
[31m+                   "primaryKey": false,[90m
[31m+                   "uniqueName": "roles_organizationId_unique",[90m
[31m+                   "uniqueType": undefined,[90m
[31m+                 },[90m
[31m+                 "dataType": "string",[90m
[31m+                 "default": undefined,[90m
[31m+                 "defaultConfig": {[90m
[31m+                   "nulls": "last",[90m
[31m+                   "opClass": undefined,[90m
[31m+                   "order": "asc",[90m
[31m+                 },[90m
[31m+                 "defaultFn": undefined,[90m
[31m+                 "enumValues": undefined,[90m
[31m+                 "generated": undefined,[90m
[31m+                 "generatedIdentity": undefined,[90m
[31m+                 "hasDefault": false,[90m
[31m+                 "indexConfig": {[90m
[31m+                   "nulls": "last",[90m
[31m+                   "opClass": undefined,[90m
[31m+                   "order": "asc",[90m
[31m+                 },[90m
[31m+                 "isUnique": false,[90m
[31m+                 "keyAsName": false,[90m
[31m+                 "name": "organizationId",[90m
[31m+                 "notNull": true,[90m
[31m+                 "onUpdateFn": undefined,[90m
[31m+                 "primary": false,[90m
[31m+                 "table": [Circular],[90m
[31m+                 "uniqueName": "roles_organizationId_unique",[90m
[31m+                 "uniqueType": undefined,[90m
[31m+               },[90m
[31m+               "updatedAt": ExtraConfigColumn {[90m
[31m+                 "columnType": "PgTimestamp",[90m
[31m+                 "config": {[90m
[31m+                   "columnType": "PgTimestamp",[90m
[31m+                   "dataType": "date",[90m
[31m+                   "default": SQL {[90m
[31m+                     "decoder": {[90m
[31m+                       "mapFromDriverValue": [Function mapFromDriverValue],[90m
[31m+                     },[90m
[31m+                     "queryChunks": [[90m
[31m+                       StringChunk {[90m
[31m+                         "value": [[90m
[31m+                           "now()",[90m
[31m+                         ],[90m
[31m+                       },[90m
[31m+                     ],[90m
[31m+                     "shouldInlineParams": false,[90m
[31m+                     "usedTables": [],[90m
[31m+                   },[90m
[31m+                   "generated": undefined,[90m
[31m+                   "hasDefault": true,[90m
[31m+                   "isUnique": false,[90m
[31m+                   "keyAsName": false,[90m
[31m+                   "name": "updatedAt",[90m
[31m+                   "notNull": true,[90m
[31m+                   "precision": undefined,[90m
[31m+                   "primaryKey": false,[90m
[31m+                   "uniqueName": "roles_updatedAt_unique",[90m
[31m+                   "uniqueType": undefined,[90m
[31m+                   "withTimezone": false,[90m
[31m+                 },[90m
[31m+                 "dataType": "date",[90m
[31m+                 "default": SQL {[90m
[31m+                   "decoder": {[90m
[31m+                     "mapFromDriverValue": [Function mapFromDriverValue],[90m
[31m+                   },[90m
[31m+                   "queryChunks": [[90m
[31m+                     StringChunk {[90m
[31m+                       "value": [[90m
[31m+                         "now()",[90m
[31m+                       ],[90m
[31m+                     },[90m
[31m+                   ],[90m
[31m+                   "shouldInlineParams": false,[90m
[31m+                   "usedTables": [],[90m
[31m+                 },[90m
[31m+                 "defaultConfig": {[90m
[31m+                   "nulls": "last",[90m
[31m+                   "opClass": undefined,[90m
[31m+                   "order": "asc",[90m
[31m+                 },[90m
[31m+                 "defaultFn": undefined,[90m
[31m+                 "enumValues": undefined,[90m
[31m+                 "generated": undefined,[90m
[31m+                 "generatedIdentity": undefined,[90m
[31m+                 "hasDefault": true,[90m
[31m+                 "indexConfig": {[90m
[31m+                   "nulls": "last",[90m
[31m+                   "opClass": undefined,[90m
[31m+                   "order": "asc",[90m
[31m+                 },[90m
[31m+                 "isUnique": false,[90m
[31m+                 "keyAsName": false,[90m
[31m+                 "name": "updatedAt",[90m
[31m+                 "notNull": true,[90m
[31m+                 "onUpdateFn": undefined,[90m
[31m+                 "primary": false,[90m
[31m+                 "table": [Circular],[90m
[31m+                 "uniqueName": "roles_updatedAt_unique",[90m
[31m+                 "uniqueType": undefined,[90m
[31m+               },[90m
[31m+             },[90m
[31m+             Symbol(drizzle:BaseName): "roles",[90m
[31m+             Symbol(drizzle:IsAlias): false,[90m
[31m+             Symbol(drizzle:IsDrizzleTable): true,[90m
[31m+             Symbol(drizzle:ExtraConfigBuilder): [Function anonymous],[90m
[31m+             Symbol(drizzle:PgInlineForeignKeys): [],[90m
[31m+             Symbol(drizzle:EnableRLS): false,[90m
[31m+           },[90m
[31m+           "uniqueName": "roles_id_unique",[90m
[31m+           "uniqueType": undefined,[90m
[31m+         },[90m
[31m+         StringChunk {[90m
[31m+           "value": [[90m
[31m+             " = ",[90m
[31m+           ],[90m
[31m+         },[90m
[31m+         Param {[90m
[31m+           "brand": undefined,[90m
[31m+           "encoder": PgText {[90m
[31m+             "columnType": "PgText",[90m
[31m+             "config": {[90m
[31m+               "columnType": "PgText",[90m
[31m+               "dataType": "string",[90m
[31m+               "default": undefined,[90m
[31m+               "enumValues": undefined,[90m
[31m+               "generated": undefined,[90m
[31m+               "hasDefault": false,[90m
[31m+               "isUnique": false,[90m
[31m+               "keyAsName": false,[90m
[31m+               "name": "id",[90m
[31m+               "notNull": true,[90m
[31m+               "primaryKey": true,[90m
[31m+               "uniqueName": "roles_id_unique",[90m
[31m+               "uniqueType": undefined,[90m
[31m+             },[90m
[31m+             "dataType": "string",[90m
[31m+             "default": undefined,[90m
[31m+             "defaultFn": undefined,[90m
[31m+             "enumValues": undefined,[90m
[31m+             "generated": undefined,[90m
[31m+             "generatedIdentity": undefined,[90m
[31m+             "hasDefault": false,[90m
[31m+             "isUnique": false,[90m
[31m+             "keyAsName": false,[90m
[31m+             "name": "id",[90m
[31m+             "notNull": true,[90m
[31m+             "onUpdateFn": undefined,[90m
[31m+             "primary": true,[90m
[31m+             "table": PgTable {[90m
[31m+               "createdAt": PgTimestamp {[90m
[31m+                 "columnType": "PgTimestamp",[90m
[31m+                 "config": {[90m
[31m+                   "columnType": "PgTimestamp",[90m
[31m+                   "dataType": "date",[90m
[31m+                   "default": SQL {[90m
[31m+                     "decoder": {[90m
[31m+                       "mapFromDriverValue": [Function mapFromDriverValue],[90m
[31m+                     },[90m
[31m+                     "queryChunks": [[90m
[31m+                       StringChunk {[90m
[31m+                         "value": [[90m
[31m+                           "now()",[90m
[31m+                         ],[90m
[31m+                       },[90m
[31m+                     ],[90m
[31m+                     "shouldInlineParams": false,[90m
[31m+                     "usedTables": [],[90m
[31m+                   },[90m
[31m+                   "generated": undefined,[90m
[31m+                   "hasDefault": true,[90m
[31m+                   "isUnique": false,[90m
[31m+                   "keyAsName": false,[90m
[31m+                   "name": "createdAt",[90m
[31m+                   "notNull": true,[90m
[31m+                   "precision": undefined,[90m
[31m+                   "primaryKey": false,[90m
[31m+                   "uniqueName": "roles_createdAt_unique",[90m
[31m+                   "uniqueType": undefined,[90m
[31m+                   "withTimezone": false,[90m
[31m+                 },[90m
[31m+                 "dataType": "date",[90m
[31m+                 "default": SQL {[90m
[31m+                   "decoder": {[90m
[31m+                     "mapFromDriverValue": [Function mapFromDriverValue],[90m
[31m+                   },[90m
[31m+                   "queryChunks": [[90m
[31m+                     StringChunk {[90m
[31m+                       "value": [[90m
[31m+                         "now()",[90m
[31m+                       ],[90m
[31m+                     },[90m
[31m+                   ],[90m
[31m+                   "shouldInlineParams": false,[90m
[31m+                   "usedTables": [],[90m
[31m+                 },[90m
[31m+                 "defaultFn": undefined,[90m
[31m+                 "enumValues": undefined,[90m
[31m+                 "generated": undefined,[90m
[31m+                 "generatedIdentity": undefined,[90m
[31m+                 "hasDefault": true,[90m
[31m+                 "isUnique": false,[90m
[31m+                 "keyAsName": false,[90m
[31m+                 "mapFromDriverValue": [Function mapFromDriverValue],[90m
[31m+                 "mapToDriverValue": [Function mapToDriverValue],[90m
[31m+                 "name": "createdAt",[90m
[31m+                 "notNull": true,[90m
[31m+                 "onUpdateFn": undefined,[90m
[31m+                 "precision": undefined,[90m
[31m+                 "primary": false,[90m
[31m+                 "table": [Circular],[90m
[31m+                 "uniqueName": "roles_createdAt_unique",[90m
[31m+                 "uniqueType": undefined,[90m
[31m+                 "withTimezone": false,[90m
[31m+               },[90m
[31m+               "enableRLS": [Function enableRLS],[90m
[31m+               "id": [Circular],[90m
[31m+               "isDefault": PgBoolean {[90m
[31m+                 "columnType": "PgBoolean",[90m
[31m+                 "config": {[90m
[31m+                   "columnType": "PgBoolean",[90m
[31m+                   "dataType": "boolean",[90m
[31m+                   "default": false,[90m
[31m+                   "generated": undefined,[90m
[31m+                   "hasDefault": true,[90m
[31m+                   "isUnique": false,[90m
[31m+                   "keyAsName": false,[90m
[31m+                   "name": "isDefault",[90m
[31m+                   "notNull": true,[90m
[31m+                   "primaryKey": false,[90m
[31m+                   "uniqueName": "roles_isDefault_unique",[90m
[31m+                   "uniqueType": undefined,[90m
[31m+                 },[90m
[31m+                 "dataType": "boolean",[90m
[31m+                 "default": false,[90m
[31m+                 "defaultFn": undefined,[90m
[31m+                 "enumValues": undefined,[90m
[31m+                 "generated": undefined,[90m
[31m+                 "generatedIdentity": undefined,[90m
[31m+                 "hasDefault": true,[90m
[31m+                 "isUnique": false,[90m
[31m+                 "keyAsName": false,[90m
[31m+                 "name": "isDefault",[90m
[31m+                 "notNull": true,[90m
[31m+                 "onUpdateFn": undefined,[90m
[31m+                 "primary": false,[90m
[31m+                 "table": [Circular],[90m
[31m+                 "uniqueName": "roles_isDefault_unique",[90m
[31m+                 "uniqueType": undefined,[90m
[31m+               },[90m
[31m+               "isSystem": PgBoolean {[90m
[31m+                 "columnType": "PgBoolean",[90m
[31m+                 "config": {[90m
[31m+                   "columnType": "PgBoolean",[90m
[31m+                   "dataType": "boolean",[90m
[31m+                   "default": false,[90m
[31m+                   "generated": undefined,[90m
[31m+                   "hasDefault": true,[90m
[31m+                   "isUnique": false,[90m
[31m+                   "keyAsName": false,[90m
[31m+                   "name": "isSystem",[90m
[31m+                   "notNull": true,[90m
[31m+                   "primaryKey": false,[90m
[31m+                   "uniqueName": "roles_isSystem_unique",[90m
[31m+                   "uniqueType": undefined,[90m
[31m+                 },[90m
[31m+                 "dataType": "boolean",[90m
[31m+                 "default": false,[90m
[31m+                 "defaultFn": undefined,[90m
[31m+                 "enumValues": undefined,[90m
[31m+                 "generated": undefined,[90m
[31m+                 "generatedIdentity": undefined,[90m
[31m+                 "hasDefault": true,[90m
[31m+                 "isUnique": false,[90m
[31m+                 "keyAsName": false,[90m
[31m+                 "name": "isSystem",[90m
[31m+                 "notNull": true,[90m
[31m+                 "onUpdateFn": undefined,[90m
[31m+                 "primary": false,[90m
[31m+                 "table": [Circular],[90m
[31m+                 "uniqueName": "roles_isSystem_unique",[90m
[31m+                 "uniqueType": undefined,[90m
[31m+               },[90m
[31m+               "name": PgText {[90m
[31m+                 "columnType": "PgText",[90m
[31m+                 "config": {[90m
[31m+                   "columnType": "PgText",[90m
[31m+                   "dataType": "string",[90m
[31m+                   "default": undefined,[90m
[31m+                   "enumValues": undefined,[90m
[31m+                   "generated": undefined,[90m
[31m+                   "hasDefault": false,[90m
[31m+                   "isUnique": false,[90m
[31m+                   "keyAsName": false,[90m
[31m+                   "name": "name",[90m
[31m+                   "notNull": true,[90m
[31m+                   "primaryKey": false,[90m
[31m+                   "uniqueName": "roles_name_unique",[90m
[31m+                   "uniqueType": undefined,[90m
[31m+                 },[90m
[31m+                 "dataType": "string",[90m
[31m+                 "default": undefined,[90m
[31m+                 "defaultFn": undefined,[90m
[31m+                 "enumValues": undefined,[90m
[31m+                 "generated": undefined,[90m
[31m+                 "generatedIdentity": undefined,[90m
[31m+                 "hasDefault": false,[90m
[31m+                 "isUnique": false,[90m
[31m+                 "keyAsName": false,[90m
[31m+                 "name": "name",[90m
[31m+                 "notNull": true,[90m
[31m+                 "onUpdateFn": undefined,[90m
[31m+                 "primary": false,[90m
[31m+                 "table": [Circular],[90m
[31m+                 "uniqueName": "roles_name_unique",[90m
[31m+                 "uniqueType": undefined,[90m
[31m+               },[90m
[31m+               "organizationId": PgText {[90m
[31m+                 "columnType": "PgText",[90m
[31m+                 "config": {[90m
[31m+                   "columnType": "PgText",[90m
[31m+                   "dataType": "string",[90m
[31m+                   "default": undefined,[90m
[31m+                   "enumValues": undefined,[90m
[31m+                   "generated": undefined,[90m
[31m+                   "hasDefault": false,[90m
[31m+                   "isUnique": false,[90m
[31m+                   "keyAsName": false,[90m
[31m+                   "name": "organizationId",[90m
[31m+                   "notNull": true,[90m
[31m+                   "primaryKey": false,[90m
[31m+                   "uniqueName": "roles_organizationId_unique",[90m
[31m+                   "uniqueType": undefined,[90m
[31m+                 },[90m
[31m+                 "dataType": "string",[90m
[31m+                 "default": undefined,[90m
[31m+                 "defaultFn": undefined,[90m
[31m+                 "enumValues": undefined,[90m
[31m+                 "generated": undefined,[90m
[31m+                 "generatedIdentity": undefined,[90m
[31m+                 "hasDefault": false,[90m
[31m+                 "isUnique": false,[90m
[31m+                 "keyAsName": false,[90m
[31m+                 "name": "organizationId",[90m
[31m+                 "notNull": true,[90m
[31m+                 "onUpdateFn": undefined,[90m
[31m+                 "primary": false,[90m
[31m+                 "table": [Circular],[90m
[31m+                 "uniqueName": "roles_organizationId_unique",[90m
[31m+                 "uniqueType": undefined,[90m
[31m+               },[90m
[31m+               "updatedAt": PgTimestamp {[90m
[31m+                 "columnType": "PgTimestamp",[90m
[31m+                 "config": {[90m
[31m+                   "columnType": "PgTimestamp",[90m
[31m+                   "dataType": "date",[90m
[31m+                   "default": SQL {[90m
[31m+                     "decoder": {[90m
[31m+                       "mapFromDriverValue": [Function mapFromDriverValue],[90m
[31m+                     },[90m
[31m+                     "queryChunks": [[90m
[31m+                       StringChunk {[90m
[31m+                         "value": [[90m
[31m+                           "now()",[90m
[31m+                         ],[90m
[31m+                       },[90m
[31m+                     ],[90m
[31m+                     "shouldInlineParams": false,[90m
[31m+                     "usedTables": [],[90m
[31m+                   },[90m
[31m+                   "generated": undefined,[90m
[31m+                   "hasDefault": true,[90m
[31m+                   "isUnique": false,[90m
[31m+                   "keyAsName": false,[90m
[31m+                   "name": "updatedAt",[90m
[31m+                   "notNull": true,[90m
[31m+                   "precision": undefined,[90m
[31m+                   "primaryKey": false,[90m
[31m+                   "uniqueName": "roles_updatedAt_unique",[90m
[31m+                   "uniqueType": undefined,[90m
[31m+                   "withTimezone": false,[90m
[31m+                 },[90m
[31m+                 "dataType": "date",[90m
[31m+                 "default": SQL {[90m
[31m+                   "decoder": {[90m
[31m+                     "mapFromDriverValue": [Function mapFromDriverValue],[90m
[31m+                   },[90m
[31m+                   "queryChunks": [[90m
[31m+                     StringChunk {[90m
[31m+                       "value": [[90m
[31m+                         "now()",[90m
[31m+                       ],[90m
[31m+                     },[90m
[31m+                   ],[90m
[31m+                   "shouldInlineParams": false,[90m
[31m+                   "usedTables": [],[90m
[31m+                 },[90m
[31m+                 "defaultFn": undefined,[90m
[31m+                 "enumValues": undefined,[90m
[31m+                 "generated": undefined,[90m
[31m+                 "generatedIdentity": undefined,[90m
[31m+                 "hasDefault": true,[90m
[31m+                 "isUnique": false,[90m
[31m+                 "keyAsName": false,[90m
[31m+                 "mapFromDriverValue": [Function mapFromDriverValue],[90m
[31m+                 "mapToDriverValue": [Function mapToDriverValue],[90m
[31m+                 "name": "updatedAt",[90m
[31m+                 "notNull": true,[90m
[31m+                 "onUpdateFn": undefined,[90m
[31m+                 "precision": undefined,[90m
[31m+                 "primary": false,[90m
[31m+                 "table": [Circular],[90m
[31m+                 "uniqueName": "roles_updatedAt_unique",[90m
[31m+                 "uniqueType": undefined,[90m
[31m+                 "withTimezone": false,[90m
[31m+               },[90m
[31m+               Symbol(drizzle:Name): "roles",[90m
[31m+               Symbol(drizzle:OriginalName): "roles",[90m
[31m+               Symbol(drizzle:Schema): undefined,[90m
[31m+               Symbol(drizzle:Columns): {[90m
[31m+                 "createdAt": PgTimestamp {[90m
[31m+                   "columnType": "PgTimestamp",[90m
[31m+                   "config": {[90m
[31m+                     "columnType": "PgTimestamp",[90m
[31m+                     "dataType": "date",[90m
[31m+                     "default": SQL {[90m
[31m+                       "decoder": {[90m
[31m+                         "mapFromDriverValue": [Function mapFromDriverValue],[90m
[31m+                       },[90m
[31m+                       "queryChunks": [[90m
[31m+                         StringChunk {[90m
[31m+                           "value": [[90m
[31m+                             "now()",[90m
[31m+                           ],[90m
[31m+                         },[90m
[31m+                       ],[90m
[31m+                       "shouldInlineParams": false,[90m
[31m+                       "usedTables": [],[90m
[31m+                     },[90m
[31m+                     "generated": undefined,[90m
[31m+                     "hasDefault": true,[90m
[31m+                     "isUnique": false,[90m
[31m+                     "keyAsName": false,[90m
[31m+                     "name": "createdAt",[90m
[31m+                     "notNull": true,[90m
[31m+                     "precision": undefined,[90m
[31m+                     "primaryKey": false,[90m
[31m+                     "uniqueName": "roles_createdAt_unique",[90m
[31m+                     "uniqueType": undefined,[90m
[31m+                     "withTimezone": false,[90m
[31m+                   },[90m
[31m+                   "dataType": "date",[90m
[31m+                   "default": SQL {[90m
[31m+                     "decoder": {[90m
[31m+                       "mapFromDriverValue": [Function mapFromDriverValue],[90m
[31m+                     },[90m
[31m+                     "queryChunks": [[90m
[31m+                       StringChunk {[90m
[31m+                         "value": [[90m
[31m+                           "now()",[90m
[31m+                         ],[90m
[31m+                       },[90m
[31m+                     ],[90m
[31m+                     "shouldInlineParams": false,[90m
[31m+                     "usedTables": [],[90m
[31m+                   },[90m
[31m+                   "defaultFn": undefined,[90m
[31m+                   "enumValues": undefined,[90m
[31m+                   "generated": undefined,[90m
[31m+                   "generatedIdentity": undefined,[90m
[31m+                   "hasDefault": true,[90m
[31m+                   "isUnique": false,[90m
[31m+                   "keyAsName": false,[90m
[31m+                   "mapFromDriverValue": [Function mapFromDriverValue],[90m
[31m+                   "mapToDriverValue": [Function mapToDriverValue],[90m
[31m+                   "name": "createdAt",[90m
[31m+                   "notNull": true,[90m
[31m+                   "onUpdateFn": undefined,[90m
[31m+                   "precision": undefined,[90m
[31m+                   "primary": false,[90m
[31m+                   "table": [Circular],[90m
[31m+                   "uniqueName": "roles_createdAt_unique",[90m
[31m+                   "uniqueType": undefined,[90m
[31m+                   "withTimezone": false,[90m
[31m+                 },[90m
[31m+                 "id": [Circular],[90m
[31m+                 "isDefault": PgBoolean {[90m
[31m+                   "columnType": "PgBoolean",[90m
[31m+                   "config": {[90m
[31m+                     "columnType": "PgBoolean",[90m
[31m+                     "dataType": "boolean",[90m
[31m+                     "default": false,[90m
[31m+                     "generated": undefined,[90m
[31m+                     "hasDefault": true,[90m
[31m+                     "isUnique": false,[90m
[31m+                     "keyAsName": false,[90m
[31m+                     "name": "isDefault",[90m
[31m+                     "notNull": true,[90m
[31m+                     "primaryKey": false,[90m
[31m+                     "uniqueName": "roles_isDefault_unique",[90m
[31m+                     "uniqueType": undefined,[90m
[31m+                   },[90m
[31m+                   "dataType": "boolean",[90m
[31m+                   "default": false,[90m
[31m+                   "defaultFn": undefined,[90m
[31m+                   "enumValues": undefined,[90m
[31m+                   "generated": undefined,[90m
[31m+                   "generatedIdentity": undefined,[90m
[31m+                   "hasDefault": true,[90m
[31m+                   "isUnique": false,[90m
[31m+                   "keyAsName": false,[90m
[31m+                   "name": "isDefault",[90m
[31m+                   "notNull": true,[90m
[31m+                   "onUpdateFn": undefined,[90m
[31m+                   "primary": false,[90m
[31m+                   "table": [Circular],[90m
[31m+                   "uniqueName": "roles_isDefault_unique",[90m
[31m+                   "uniqueType": undefined,[90m
[31m+                 },[90m
[31m+                 "isSystem": PgBoolean {[90m
[31m+                   "columnType": "PgBoolean",[90m
[31m+                   "config": {[90m
[31m+                     "columnType": "PgBoolean",[90m
[31m+                     "dataType": "boolean",[90m
[31m+                     "default": false,[90m
[31m+                     "generated": undefined,[90m
[31m+                     "hasDefault": true,[90m
[31m+                     "isUnique": false,[90m
[31m+                     "keyAsName": false,[90m
[31m+                     "name": "isSystem",[90m
[31m+                     "notNull": true,[90m
[31m+                     "primaryKey": false,[90m
[31m+                     "uniqueName": "roles_isSystem_unique",[90m
[31m+                     "uniqueType": undefined,[90m
[31m+                   },[90m
[31m+                   "dataType": "boolean",[90m
[31m+                   "default": false,[90m
[31m+                   "defaultFn": undefined,[90m
[31m+                   "enumValues": undefined,[90m
[31m+                   "generated": undefined,[90m
[31m+                   "generatedIdentity": undefined,[90m
[31m+                   "hasDefault": true,[90m
[31m+                   "isUnique": false,[90m
[31m+                   "keyAsName": false,[90m
[31m+                   "name": "isSystem",[90m
[31m+                   "notNull": true,[90m
[31m+                   "onUpdateFn": undefined,[90m
[31m+                   "primary": false,[90m
[31m+                   "table": [Circular],[90m
[31m+                   "uniqueName": "roles_isSystem_unique",[90m
[31m+                   "uniqueType": undefined,[90m
[31m+                 },[90m
[31m+                 "name": PgText {[90m
[31m+                   "columnType": "PgText",[90m
[31m+                   "config": {[90m
[31m+                     "columnType": "PgText",[90m
[31m+                     "dataType": "string",[90m
[31m+                     "default": undefined,[90m
[31m+                     "enumValues": undefined,[90m
[31m+                     "generated": undefined,[90m
[31m+                     "hasDefault": false,[90m
[31m+                     "isUnique": false,[90m
[31m+                     "keyAsName": false,[90m
[31m+                     "name": "name",[90m
[31m+                     "notNull": true,[90m
[31m+                     "primaryKey": false,[90m
[31m+                     "uniqueName": "roles_name_unique",[90m
[31m+                     "uniqueType": undefined,[90m
[31m+                   },[90m
[31m+                   "dataType": "string",[90m
[31m+                   "default": undefined,[90m
[31m+                   "defaultFn": undefined,[90m
[31m+                   "enumValues": undefined,[90m
[31m+                   "generated": undefined,[90m
[31m+                   "generatedIdentity": undefined,[90m
[31m+                   "hasDefault": false,[90m
[31m+                   "isUnique": false,[90m
[31m+                   "keyAsName": false,[90m
[31m+                   "name": "name",[90m
[31m+                   "notNull": true,[90m
[31m+                   "onUpdateFn": undefined,[90m
[31m+                   "primary": false,[90m
[31m+                   "table": [Circular],[90m
[31m+                   "uniqueName": "roles_name_unique",[90m
[31m+                   "uniqueType": undefined,[90m
[31m+                 },[90m
[31m+                 "organizationId": PgText {[90m
[31m+                   "columnType": "PgText",[90m
[31m+                   "config": {[90m
[31m+                     "columnType": "PgText",[90m
[31m+                     "dataType": "string",[90m
[31m+                     "default": undefined,[90m
[31m+                     "enumValues": undefined,[90m
[31m+                     "generated": undefined,[90m
[31m+                     "hasDefault": false,[90m
[31m+                     "isUnique": false,[90m
[31m+                     "keyAsName": false,[90m
[31m+                     "name": "organizationId",[90m
[31m+                     "notNull": true,[90m
[31m+                     "primaryKey": false,[90m
[31m+                     "uniqueName": "roles_organizationId_unique",[90m
[31m+                     "uniqueType": undefined,[90m
[31m+                   },[90m
[31m+                   "dataType": "string",[90m
[31m+                   "default": undefined,[90m
[31m+                   "defaultFn": undefined,[90m
[31m+                   "enumValues": undefined,[90m
[31m+                   "generated": undefined,[90m
[31m+                   "generatedIdentity": undefined,[90m
[31m+                   "hasDefault": false,[90m
[31m+                   "isUnique": false,[90m
[31m+                   "keyAsName": false,[90m
[31m+                   "name": "organizationId",[90m
[31m+                   "notNull": true,[90m
[31m+                   "onUpdateFn": undefined,[90m
[31m+                   "primary": false,[90m
[31m+                   "table": [Circular],[90m
[31m+                   "uniqueName": "roles_organizationId_unique",[90m
[31m+                   "uniqueType": undefined,[90m
[31m+                 },[90m
[31m+                 "updatedAt": PgTimestamp {[90m
[31m+                   "columnType": "PgTimestamp",[90m
[31m+                   "config": {[90m
[31m+                     "columnType": "PgTimestamp",[90m
[31m+                     "dataType": "date",[90m
[31m+                     "default": SQL {[90m
[31m+                       "decoder": {[90m
[31m+                         "mapFromDriverValue": [Function mapFromDriverValue],[90m
[31m+                       },[90m
[31m+                       "queryChunks": [[90m
[31m+                         StringChunk {[90m
[31m+                           "value": [[90m
[31m+                             "now()",[90m
[31m+                           ],[90m
[31m+                         },[90m
[31m+                       ],[90m
[31m+                       "shouldInlineParams": false,[90m
[31m+                       "usedTables": [],[90m
[31m+                     },[90m
[31m+                     "generated": undefined,[90m
[31m+                     "hasDefault": true,[90m
[31m+                     "isUnique": false,[90m
[31m+                     "keyAsName": false,[90m
[31m+                     "name": "updatedAt",[90m
[31m+                     "notNull": true,[90m
[31m+                     "precision": undefined,[90m
[31m+                     "primaryKey": false,[90m
[31m+                     "uniqueName": "roles_updatedAt_unique",[90m
[31m+                     "uniqueType": undefined,[90m
[31m+                     "withTimezone": false,[90m
[31m+                   },[90m
[31m+                   "dataType": "date",[90m
[31m+                   "default": SQL {[90m
[31m+                     "decoder": {[90m
[31m+                       "mapFromDriverValue": [Function mapFromDriverValue],[90m
[31m+                     },[90m
[31m+                     "queryChunks": [[90m
[31m+                       StringChunk {[90m
[31m+                         "value": [[90m
[31m+                           "now()",[90m
[31m+                         ],[90m
[31m+                       },[90m
[31m+                     ],[90m
[31m+                     "shouldInlineParams": false,[90m
[31m+                     "usedTables": [],[90m
[31m+                   },[90m
[31m+                   "defaultFn": undefined,[90m
[31m+                   "enumValues": undefined,[90m
[31m+                   "generated": undefined,[90m
[31m+                   "generatedIdentity": undefined,[90m
[31m+                   "hasDefault": true,[90m
[31m+                   "isUnique": false,[90m
[31m+                   "keyAsName": false,[90m
[31m+                   "mapFromDriverValue": [Function mapFromDriverValue],[90m
[31m+                   "mapToDriverValue": [Function mapToDriverValue],[90m
[31m+                   "name": "updatedAt",[90m
[31m+                   "notNull": true,[90m
[31m+                   "onUpdateFn": undefined,[90m
[31m+                   "precision": undefined,[90m
[31m+                   "primary": false,[90m
[31m+                   "table": [Circular],[90m
[31m+                   "uniqueName": "roles_updatedAt_unique",[90m
[31m+                   "uniqueType": undefined,[90m
[31m+                   "withTimezone": false,[90m
[31m+                 },[90m
[31m+               },[90m
[31m+               Symbol(drizzle:ExtraConfigColumns): {[90m
[31m+                 "createdAt": ExtraConfigColumn {[90m
[31m+                   "columnType": "PgTimestamp",[90m
[31m+                   "config": {[90m
[31m+                     "columnType": "PgTimestamp",[90m
[31m+                     "dataType": "date",[90m
[31m+                     "default": SQL {[90m
[31m+                       "decoder": {[90m
[31m+                         "mapFromDriverValue": [Function mapFromDriverValue],[90m
[31m+                       },[90m
[31m+                       "queryChunks": [[90m
[31m+                         StringChunk {[90m
[31m+                           "value": [[90m
[31m+                             "now()",[90m
[31m+                           ],[90m
[31m+                         },[90m
[31m+                       ],[90m
[31m+                       "shouldInlineParams": false,[90m
[31m+                       "usedTables": [],[90m
[31m+                     },[90m
[31m+                     "generated": undefined,[90m
[31m+                     "hasDefault": true,[90m
[31m+                     "isUnique": false,[90m
[31m+                     "keyAsName": false,[90m
[31m+                     "name": "createdAt",[90m
[31m+                     "notNull": true,[90m
[31m+                     "precision": undefined,[90m
[31m+                     "primaryKey": false,[90m
[31m+                     "uniqueName": "roles_createdAt_unique",[90m
[31m+                     "uniqueType": undefined,[90m
[31m+                     "withTimezone": false,[90m
[31m+                   },[90m
[31m+                   "dataType": "date",[90m
[31m+                   "default": SQL {[90m
[31m+                     "decoder": {[90m
[31m+                       "mapFromDriverValue": [Function mapFromDriverValue],[90m
[31m+                     },[90m
[31m+                     "queryChunks": [[90m
[31m+                       StringChunk {[90m
[31m+                         "value": [[90m
[31m+                           "now()",[90m
[31m+                         ],[90m
[31m+                       },[90m
[31m+                     ],[90m
[31m+                     "shouldInlineParams": false,[90m
[31m+                     "usedTables": [],[90m
[31m+                   },[90m
[31m+                   "defaultConfig": {[90m
[31m+                     "nulls": "last",[90m
[31m+                     "opClass": undefined,[90m
[31m+                     "order": "asc",[90m
[31m+                   },[90m
[31m+                   "defaultFn": undefined,[90m
[31m+                   "enumValues": undefined,[90m
[31m+                   "generated": undefined,[90m
[31m+                   "generatedIdentity": undefined,[90m
[31m+                   "hasDefault": true,[90m
[31m+                   "indexConfig": {[90m
[31m+                     "nulls": "last",[90m
[31m+                     "opClass": undefined,[90m
[31m+                     "order": "asc",[90m
[31m+                   },[90m
[31m+                   "isUnique": false,[90m
[31m+                   "keyAsName": false,[90m
[31m+                   "name": "createdAt",[90m
[31m+                   "notNull": true,[90m
[31m+                   "onUpdateFn": undefined,[90m
[31m+                   "primary": false,[90m
[31m+                   "table": [Circular],[90m
[31m+                   "uniqueName": "roles_createdAt_unique",[90m
[31m+                   "uniqueType": undefined,[90m
[31m+                 },[90m
[31m+                 "id": ExtraConfigColumn {[90m
[31m+                   "columnType": "PgText",[90m
[31m+                   "config": {[90m
[31m+                     "columnType": "PgText",[90m
[31m+                     "dataType": "string",[90m
[31m+                     "default": undefined,[90m
[31m+                     "enumValues": undefined,[90m
[31m+                     "generated": undefined,[90m
[31m+                     "hasDefault": false,[90m
[31m+                     "isUnique": false,[90m
[31m+                     "keyAsName": false,[90m
[31m+                     "name": "id",[90m
[31m+                     "notNull": true,[90m
[31m+                     "primaryKey": true,[90m
[31m+                     "uniqueName": "roles_id_unique",[90m
[31m+                     "uniqueType": undefined,[90m
[31m+                   },[90m
[31m+                   "dataType": "string",[90m
[31m+                   "default": undefined,[90m
[31m+                   "defaultConfig": {[90m
[31m+                     "nulls": "last",[90m
[31m+                     "opClass": undefined,[90m
[31m+                     "order": "asc",[90m
[31m+                   },[90m
[31m+                   "defaultFn": undefined,[90m
[31m+                   "enumValues": undefined,[90m
[31m+                   "generated": undefined,[90m
[31m+                   "generatedIdentity": undefined,[90m
[31m+                   "hasDefault": false,[90m
[31m+                   "indexConfig": {[90m
[31m+                     "nulls": "last",[90m
[31m+                     "opClass": undefined,[90m
[31m+                     "order": "asc",[90m
[31m+                   },[90m
[31m+                   "isUnique": false,[90m
[31m+                   "keyAsName": false,[90m
[31m+                   "name": "id",[90m
[31m+                   "notNull": true,[90m
[31m+                   "onUpdateFn": undefined,[90m
[31m+                   "primary": true,[90m
[31m+                   "table": [Circular],[90m
[31m+                   "uniqueName": "roles_id_unique",[90m
[31m+                   "uniqueType": undefined,[90m
[31m+                 },[90m
[31m+                 "isDefault": ExtraConfigColumn {[90m
[31m+                   "columnType": "PgBoolean",[90m
[31m+                   "config": {[90m
[31m+                     "columnType": "PgBoolean",[90m
[31m+                     "dataType": "boolean",[90m
[31m+                     "default": false,[90m
[31m+                     "generated": undefined,[90m
[31m+                     "hasDefault": true,[90m
[31m+                     "isUnique": false,[90m
[31m+                     "keyAsName": false,[90m
[31m+                     "name": "isDefault",[90m
[31m+                     "notNull": true,[90m
[31m+                     "primaryKey": false,[90m
[31m+                     "uniqueName": "roles_isDefault_unique",[90m
[31m+                     "uniqueType": undefined,[90m
[31m+                   },[90m
[31m+                   "dataType": "boolean",[90m
[31m+                   "default": false,[90m
[31m+                   "defaultConfig": {[90m
[31m+                     "nulls": "last",[90m
[31m+                     "opClass": undefined,[90m
[31m+                     "order": "asc",[90m
[31m+                   },[90m
[31m+                   "defaultFn": undefined,[90m
[31m+                   "enumValues": undefined,[90m
[31m+                   "generated": undefined,[90m
[31m+                   "generatedIdentity": undefined,[90m
[31m+                   "hasDefault": true,[90m
[31m+                   "indexConfig": {[90m
[31m+                     "nulls": "last",[90m
[31m+                     "opClass": undefined,[90m
[31m+                     "order": "asc",[90m
[31m+                   },[90m
[31m+                   "isUnique": false,[90m
[31m+                   "keyAsName": false,[90m
[31m+                   "name": "isDefault",[90m
[31m+                   "notNull": true,[90m
[31m+                   "onUpdateFn": undefined,[90m
[31m+                   "primary": false,[90m
[31m+                   "table": [Circular],[90m
[31m+                   "uniqueName": "roles_isDefault_unique",[90m
[31m+                   "uniqueType": undefined,[90m
[31m+                 },[90m
[31m+                 "isSystem": ExtraConfigColumn {[90m
[31m+                   "columnType": "PgBoolean",[90m
[31m+                   "config": {[90m
[31m+                     "columnType": "PgBoolean",[90m
[31m+                     "dataType": "boolean",[90m
[31m+                     "default": false,[90m
[31m+                     "generated": undefined,[90m
[31m+                     "hasDefault": true,[90m
[31m+                     "isUnique": false,[90m
[31m+                     "keyAsName": false,[90m
[31m+                     "name": "isSystem",[90m
[31m+                     "notNull": true,[90m
[31m+                     "primaryKey": false,[90m
[31m+                     "uniqueName": "roles_isSystem_unique",[90m
[31m+                     "uniqueType": undefined,[90m
[31m+                   },[90m
[31m+                   "dataType": "boolean",[90m
[31m+                   "default": false,[90m
[31m+                   "defaultConfig": {[90m
[31m+                     "nulls": "last",[90m
[31m+                     "opClass": undefined,[90m
[31m+                     "order": "asc",[90m
[31m+                   },[90m
[31m+                   "defaultFn": undefined,[90m
[31m+                   "enumValues": undefined,[90m
[31m+                   "generated": undefined,[90m
[31m+                   "generatedIdentity": undefined,[90m
[31m+                   "hasDefault": true,[90m
[31m+                   "indexConfig": {[90m
[31m+                     "nulls": "last",[90m
[31m+                     "opClass": undefined,[90m
[31m+                     "order": "asc",[90m
[31m+                   },[90m
[31m+                   "isUnique": false,[90m
[31m+                   "keyAsName": false,[90m
[31m+                   "name": "isSystem",[90m
[31m+                   "notNull": true,[90m
[31m+                   "onUpdateFn": undefined,[90m
[31m+                   "primary": false,[90m
[31m+                   "table": [Circular],[90m
[31m+                   "uniqueName": "roles_isSystem_unique",[90m
[31m+                   "uniqueType": undefined,[90m
[31m+                 },[90m
[31m+                 "name": ExtraConfigColumn {[90m
[31m+                   "columnType": "PgText",[90m
[31m+                   "config": {[90m
[31m+                     "columnType": "PgText",[90m
[31m+                     "dataType": "string",[90m
[31m+                     "default": undefined,[90m
[31m+                     "enumValues": undefined,[90m
[31m+                     "generated": undefined,[90m
[31m+                     "hasDefault": false,[90m
[31m+                     "isUnique": false,[90m
[31m+                     "keyAsName": false,[90m
[31m+                     "name": "name",[90m
[31m+                     "notNull": true,[90m
[31m+                     "primaryKey": false,[90m
[31m+                     "uniqueName": "roles_name_unique",[90m
[31m+                     "uniqueType": undefined,[90m
[31m+                   },[90m
[31m+                   "dataType": "string",[90m
[31m+                   "default": undefined,[90m
[31m+                   "defaultConfig": {[90m
[31m+                     "nulls": "last",[90m
[31m+                     "opClass": undefined,[90m
[31m+                     "order": "asc",[90m
[31m+                   },[90m
[31m+                   "defaultFn": undefined,[90m
[31m+                   "enumValues": undefined,[90m
[31m+                   "generated": undefined,[90m
[31m+                   "generatedIdentity": undefined,[90m
[31m+                   "hasDefault": false,[90m
[31m+                   "indexConfig": {[90m
[31m+                     "nulls": "last",[90m
[31m+                     "opClass": undefined,[90m
[31m+                     "order": "asc",[90m
[31m+                   },[90m
[31m+                   "isUnique": false,[90m
[31m+                   "keyAsName": false,[90m
[31m+                   "name": "name",[90m
[31m+                   "notNull": true,[90m
[31m+                   "onUpdateFn": undefined,[90m
[31m+                   "primary": false,[90m
[31m+                   "table": [Circular],[90m
[31m+                   "uniqueName": "roles_name_unique",[90m
[31m+                   "uniqueType": undefined,[90m
[31m+                 },[90m
[31m+                 "organizationId": ExtraConfigColumn {[90m
[31m+                   "columnType": "PgText",[90m
[31m+                   "config": {[90m
[31m+                     "columnType": "PgText",[90m
[31m+                     "dataType": "string",[90m
[31m+                     "default": undefined,[90m
[31m+                     "enumValues": undefined,[90m
[31m+                     "generated": undefined,[90m
[31m+                     "hasDefault": false,[90m
[31m+                     "isUnique": false,[90m
[31m+                     "keyAsName": false,[90m
[31m+                     "name": "organizationId",[90m
[31m+                     "notNull": true,[90m
[31m+                     "primaryKey": false,[90m
[31m+                     "uniqueName": "roles_organizationId_unique",[90m
[31m+                     "uniqueType": undefined,[90m
[31m+                   },[90m
[31m+                   "dataType": "string",[90m
[31m+                   "default": undefined,[90m
[31m+                   "defaultConfig": {[90m
[31m+                     "nulls": "last",[90m
[31m+                     "opClass": undefined,[90m
[31m+                     "order": "asc",[90m
[31m+                   },[90m
[31m+                   "defaultFn": undefined,[90m
[31m+                   "enumValues": undefined,[90m
[31m+                   "generated": undefined,[90m
[31m+                   "generatedIdentity": undefined,[90m
[31m+                   "hasDefault": false,[90m
[31m+                   "indexConfig": {[90m
[31m+                     "nulls": "last",[90m
[31m+                     "opClass": undefined,[90m
[31m+                     "order": "asc",[90m
[31m+                   },[90m
[31m+                   "isUnique": false,[90m
[31m+                   "keyAsName": false,[90m
[31m+                   "name": "organizationId",[90m
[31m+                   "notNull": true,[90m
[31m+                   "onUpdateFn": undefined,[90m
[31m+                   "primary": false,[90m
[31m+                   "table": [Circular],[90m
[31m+                   "uniqueName": "roles_organizationId_unique",[90m
[31m+                   "uniqueType": undefined,[90m
[31m+                 },[90m
[31m+                 "updatedAt": ExtraConfigColumn {[90m
[31m+                   "columnType": "PgTimestamp",[90m
[31m+                   "config": {[90m
[31m+                     "columnType": "PgTimestamp",[90m
[31m+                     "dataType": "date",[90m
[31m+                     "default": SQL {[90m
[31m+                       "decoder": {[90m
[31m+                         "mapFromDriverValue": [Function mapFromDriverValue],[90m
[31m+                       },[90m
[31m+                       "queryChunks": [[90m
[31m+                         StringChunk {[90m
[31m+                           "value": [[90m
[31m+                             "now()",[90m
[31m+                           ],[90m
[31m+                         },[90m
[31m+                       ],[90m
[31m+                       "shouldInlineParams": false,[90m
[31m+                       "usedTables": [],[90m
[31m+                     },[90m
[31m+                     "generated": undefined,[90m
[31m+                     "hasDefault": true,[90m
[31m+                     "isUnique": false,[90m
[31m+                     "keyAsName": false,[90m
[31m+                     "name": "updatedAt",[90m
[31m+                     "notNull": true,[90m
[31m+                     "precision": undefined,[90m
[31m+                     "primaryKey": false,[90m
[31m+                     "uniqueName": "roles_updatedAt_unique",[90m
[31m+                     "uniqueType": undefined,[90m
[31m+                     "withTimezone": false,[90m
[31m+                   },[90m
[31m+                   "dataType": "date",[90m
[31m+                   "default": SQL {[90m
[31m+                     "decoder": {[90m
[31m+                       "mapFromDriverValue": [Function mapFromDriverValue],[90m
[31m+                     },[90m
[31m+                     "queryChunks": [[90m
[31m+                       StringChunk {[90m
[31m+                         "value": [[90m
[31m+                           "now()",[90m
[31m+                         ],[90m
[31m+                       },[90m
[31m+                     ],[90m
[31m+                     "shouldInlineParams": false,[90m
[31m+                     "usedTables": [],[90m
[31m+                   },[90m
[31m+                   "defaultConfig": {[90m
[31m+                     "nulls": "last",[90m
[31m+                     "opClass": undefined,[90m
[31m+                     "order": "asc",[90m
[31m+                   },[90m
[31m+                   "defaultFn": undefined,[90m
[31m+                   "enumValues": undefined,[90m
[31m+                   "generated": undefined,[90m
[31m+                   "generatedIdentity": undefined,[90m
[31m+                   "hasDefault": true,[90m
[31m+                   "indexConfig": {[90m
[31m+                     "nulls": "last",[90m
[31m+                     "opClass": undefined,[90m
[31m+                     "order": "asc",[90m
[31m+                   },[90m
[31m+                   "isUnique": false,[90m
[31m+                   "keyAsName": false,[90m
[31m+                   "name": "updatedAt",[90m
[31m+                   "notNull": true,[90m
[31m+                   "onUpdateFn": undefined,[90m
[31m+                   "primary": false,[90m
[31m+                   "table": [Circular],[90m
[31m+                   "uniqueName": "roles_updatedAt_unique",[90m
[31m+                   "uniqueType": undefined,[90m
[31m+                 },[90m
[31m+               },[90m
[31m+               Symbol(drizzle:BaseName): "roles",[90m
[31m+               Symbol(drizzle:IsAlias): false,[90m
[31m+               Symbol(drizzle:IsDrizzleTable): true,[90m
[31m+               Symbol(drizzle:ExtraConfigBuilder): [Function anonymous],[90m
[31m+               Symbol(drizzle:PgInlineForeignKeys): [],[90m
[31m+               Symbol(drizzle:EnableRLS): false,[90m
[31m+             },[90m
[31m+             "uniqueName": "roles_id_unique",[90m
[31m+             "uniqueType": undefined,[90m
[31m+           },[90m
[31m+           "value": "mock-role-1",[90m
[31m+         },[90m
[31m+         StringChunk {[90m
[31m+           "value": [[90m
[31m+             "",[90m
[31m+           ],[90m
[31m+         },[90m
[31m+       ],[90m
[31m+       "shouldInlineParams": false,[90m
[31m+       "usedTables": [],[90m
[31m+     },[90m
[2m      "with": {[22m
[32m-       "permissions": true,[90m
[31m+       "rolePermissions": {[90m
[31m+         "with": {[90m
[31m+           "permission": {[90m
[31m+             "columns": {[90m
[31m+               "name": true,[90m
[31m+             },[90m
[31m+           },[90m
[31m+         },[90m
[31m+       },[90m
[2m      },[22m
[2m    },[22m
[2m  ][22m
[39m[90m

Number of calls: [1m1[22m
[39m
 ❯ src/server/auth/__tests__/permissions.test.ts:401:52
    399|       // Assert - Should return false because role from other org is n…
    400|       expect(result).toBe(false);
    401|       expect(mockContext.db.query.roles.findFirst).toHaveBeenCalledWit…
       |                                                    ^
    402|         where: expect.any(Function),
    403|         with: { permissions: true },

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[172/373]⎯

 FAIL  |node| src/server/auth/__tests__/permissions.test.ts > Permission System Core Functions - ENHANCED WITH ORGANIZATIONAL SCOPING > CRITICAL - Cross-Organizational Permission Boundaries > CRITICAL - Should enforce organizational scoping in role queries
AssertionError: expected false to be true // Object.is equality

[32m- Expected[39m
[31m+ Received[39m

[32m- true[39m
[31m+ false[39m

 ❯ src/server/auth/__tests__/permissions.test.ts:441:22
    439| 
    440|       // Assert
    441|       expect(result).toBe(true);
       |                      ^
    442|       expect(mockContext.db.query.roles.findFirst).toHaveBeenCalledWit…
    443|         where: expect.any(Function),

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[173/373]⎯

 FAIL  |node| src/server/auth/__tests__/permissions.test.ts > Permission System Core Functions - ENHANCED WITH ORGANIZATIONAL SCOPING > CRITICAL - Cross-Organizational Permission Boundaries > CRITICAL - Should validate role belongs to expected organization
TypeError: Cannot read properties of undefined (reading 'map')
 ❯ hasPermission src/server/auth/permissions.ts:61:48
     59| 
     60|   const permissionService = new PermissionService(db);
     61|   const rolePermissions = role.rolePermissions.map((rp) => rp.permissi…
       |                                                ^
     62|   const expandedPermissions =
     63|     permissionService.expandPermissionsWithDependencies(rolePermission…
 ❯ src/server/auth/__tests__/permissions.test.ts:511:22

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[174/373]⎯

 FAIL  |node| src/server/auth/__tests__/permissions.test.ts > Permission System Core Functions - ENHANCED WITH ORGANIZATIONAL SCOPING > Permission Matrix Security Validation > should validate complete permission matrix for organizational boundaries
TypeError: Cannot read properties of undefined (reading 'map')
 ❯ hasPermission src/server/auth/permissions.ts:61:48
     59| 
     60|   const permissionService = new PermissionService(db);
     61|   const rolePermissions = role.rolePermissions.map((rp) => rp.permissi…
       |                                                ^
     62|   const expandedPermissions =
     63|     permissionService.expandPermissionsWithDependencies(rolePermission…
 ❯ src/server/auth/__tests__/permissions.test.ts:576:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[175/373]⎯

 FAIL  |node| src/server/auth/__tests__/permissions.test.ts > Permission System Core Functions - ENHANCED WITH ORGANIZATIONAL SCOPING > Permission System Edge Cases > should handle empty permission string
TypeError: Cannot read properties of undefined (reading 'map')
 ❯ hasPermission src/server/auth/permissions.ts:61:48
     59| 
     60|   const permissionService = new PermissionService(db);
     61|   const rolePermissions = role.rolePermissions.map((rp) => rp.permissi…
       |                                                ^
     62|   const expandedPermissions =
     63|     permissionService.expandPermissionsWithDependencies(rolePermission…
 ❯ src/server/auth/__tests__/permissions.test.ts:624:22

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[176/373]⎯

 FAIL  |node| src/server/auth/__tests__/permissions.test.ts > Permission System Core Functions - ENHANCED WITH ORGANIZATIONAL SCOPING > Permission System Edge Cases > should handle role without organizationId (legacy/system roles)
TypeError: Cannot read properties of undefined (reading 'map')
 ❯ hasPermission src/server/auth/permissions.ts:61:48
     59| 
     60|   const permissionService = new PermissionService(db);
     61|   const rolePermissions = role.rolePermissions.map((rp) => rp.permissi…
       |                                                ^
     62|   const expandedPermissions =
     63|     permissionService.expandPermissionsWithDependencies(rolePermission…
 ❯ src/server/auth/__tests__/permissions.test.ts:674:22

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[177/373]⎯

 FAIL  |node| src/server/db/__tests__/drizzle-singleton.test.ts > Drizzle Client Singleton Pattern > Singleton Behavior > should create a single instance in development mode
AssertionError: expected undefined to be true // Object.is equality

[32m- Expected:[39m 
true

[31m+ Received:[39m 
undefined

 ❯ src/server/db/__tests__/drizzle-singleton.test.ts:117:39
    115|       // Should return the same instance (singleton behavior)
    116|       expect(client1).toBe(client2);
    117|       expect(client1.__isMockDrizzle).toBe(true);
       |                                       ^
    118| 
    119|       // Should only create postgres connection once

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[178/373]⎯

 FAIL  |node| src/server/db/__tests__/drizzle-singleton.test.ts > Drizzle Client Singleton Pattern > Singleton Behavior > should create fresh instances in production mode
AssertionError: expected { select: [Function spy], …(10) } not to be { select: [Function spy], …(10) } // Object.is equality

[2mCompared values have no visual difference.[22m

 ❯ src/server/db/__tests__/drizzle-singleton.test.ts:134:27
    132| 
    133|       // Should return different instances (no singleton)
    134|       expect(client1).not.toBe(client2);
       |                           ^
    135|       expect(client1.__isMockDrizzle).toBe(true);
    136|       expect(client2.__isMockDrizzle).toBe(true);

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[179/373]⎯

 FAIL  |node| src/server/db/__tests__/drizzle-singleton.test.ts > Drizzle Client Singleton Pattern > Singleton Behavior > should reuse connections across hot reloads in development
AssertionError: expected undefined to be true // Object.is equality

[32m- Expected:[39m 
true

[31m+ Received:[39m 
undefined

 ❯ src/server/db/__tests__/drizzle-singleton.test.ts:160:39
    158| 
    159|       // Should create new drizzle instances but reuse postgres connec…
    160|       expect(client1.__isMockDrizzle).toBe(true);
       |                                       ^
    161|       expect(client2.__isMockDrizzle).toBe(true);
    162| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[180/373]⎯

 FAIL  |node| src/server/db/__tests__/drizzle-singleton.test.ts > Drizzle Client Singleton Pattern > Singleton Behavior > should properly isolate singleton instances between tests
AssertionError: expected undefined to be true // Object.is equality

[32m- Expected:[39m 
true

[31m+ Received:[39m 
undefined

 ❯ src/server/db/__tests__/drizzle-singleton.test.ts:174:38
    172|       const client = createDrizzleClient();
    173| 
    174|       expect(client.__isMockDrizzle).toBe(true);
       |                                      ^
    175|       expect(mockPostgres).toHaveBeenCalledTimes(1);
    176| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[181/373]⎯

 FAIL  |node| src/server/db/__tests__/drizzle-singleton.test.ts > Drizzle Client Singleton Pattern > Connection Configuration > SSL Configuration > should disable SSL for localhost connections
AssertionError: expected "spy" to be called with arguments: [ …(2) ][90m

Number of calls: [1m0[22m
[39m
 ❯ src/server/db/__tests__/drizzle-singleton.test.ts:194:30
    192|         createDrizzleClient();
    193| 
    194|         expect(mockPostgres).toHaveBeenCalledWith(
       |                              ^
    195|           "postgresql://user:pass@localhost:5432/testdb",
    196|           expect.objectContaining({

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[182/373]⎯

 FAIL  |node| src/server/db/__tests__/drizzle-singleton.test.ts > Drizzle Client Singleton Pattern > Connection Configuration > SSL Configuration > should disable SSL for 127.0.0.1 connections
AssertionError: expected "spy" to be called with arguments: [ …(2) ][90m

Number of calls: [1m0[22m
[39m
 ❯ src/server/db/__tests__/drizzle-singleton.test.ts:210:30
    208|         createDrizzleClient();
    209| 
    210|         expect(mockPostgres).toHaveBeenCalledWith(
       |                              ^
    211|           "postgresql://user:pass@127.0.0.1:5432/testdb",
    212|           expect.objectContaining({

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[183/373]⎯

 FAIL  |node| src/server/db/__tests__/drizzle-singleton.test.ts > Drizzle Client Singleton Pattern > Connection Configuration > SSL Configuration > should disable SSL in CI environment
AssertionError: expected "spy" to be called with arguments: [ …(2) ][90m

Number of calls: [1m0[22m
[39m
 ❯ src/server/db/__tests__/drizzle-singleton.test.ts:227:30
    225|         createDrizzleClient();
    226| 
    227|         expect(mockPostgres).toHaveBeenCalledWith(
       |                              ^
    228|           "postgresql://user:pass@remote.example.com:5432/testdb",
    229|           expect.objectContaining({

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[184/373]⎯

 FAIL  |node| src/server/db/__tests__/drizzle-singleton.test.ts > Drizzle Client Singleton Pattern > Connection Configuration > SSL Configuration > should require SSL for production remote connections
AssertionError: expected "spy" to be called with arguments: [ …(2) ][90m

Number of calls: [1m0[22m
[39m
 ❯ src/server/db/__tests__/drizzle-singleton.test.ts:244:30
    242|         createDrizzleClient();
    243| 
    244|         expect(mockPostgres).toHaveBeenCalledWith(
       |                              ^
    245|           "postgresql://user:pass@remote.example.com:5432/testdb",
    246|           expect.objectContaining({

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[185/373]⎯

 FAIL  |node| src/server/db/__tests__/drizzle-singleton.test.ts > Drizzle Client Singleton Pattern > Connection Configuration > Connection Pool Settings > should use appropriate pool size for CI environment
AssertionError: expected "spy" to be called with arguments: [ Any<String>, …(1) ][90m

Number of calls: [1m0[22m
[39m
 ❯ src/server/db/__tests__/drizzle-singleton.test.ts:261:30
    259|         createDrizzleClient();
    260| 
    261|         expect(mockPostgres).toHaveBeenCalledWith(
       |                              ^
    262|           expect.any(String),
    263|           expect.objectContaining({

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[186/373]⎯

 FAIL  |node| src/server/db/__tests__/drizzle-singleton.test.ts > Drizzle Client Singleton Pattern > Connection Configuration > Connection Pool Settings > should use minimal pool size for development
AssertionError: expected "spy" to be called with arguments: [ Any<String>, ObjectContaining{…} ][90m

Number of calls: [1m0[22m
[39m
 ❯ src/server/db/__tests__/drizzle-singleton.test.ts:276:30
    274|         createDrizzleClient();
    275| 
    276|         expect(mockPostgres).toHaveBeenCalledWith(
       |                              ^
    277|           expect.any(String),
    278|           expect.objectContaining({

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[187/373]⎯

 FAIL  |node| src/server/db/__tests__/drizzle-singleton.test.ts > Drizzle Client Singleton Pattern > Connection Configuration > Connection Pool Settings > should configure appropriate timeouts for each environment
AssertionError: expected "spy" to be called with arguments: [ Any<String>, ObjectContaining{…} ][90m

Number of calls: [1m0[22m
[39m
 ❯ src/server/db/__tests__/drizzle-singleton.test.ts:298:30
    296|         drizzleModule.createDrizzleClient();
    297| 
    298|         expect(mockPostgres).toHaveBeenCalledWith(
       |                              ^
    299|           expect.any(String),
    300|           expect.objectContaining({

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[188/373]⎯

 FAIL  |node| src/server/db/__tests__/drizzle-singleton.test.ts > Drizzle Client Singleton Pattern > Connection Configuration > Connection Pool Settings > should disable prepared statements in CI
AssertionError: expected "spy" to be called with arguments: [ Any<String>, ObjectContaining{…} ][90m

Number of calls: [1m0[22m
[39m
 ❯ src/server/db/__tests__/drizzle-singleton.test.ts:365:30
    363|         createDrizzleClient();
    364| 
    365|         expect(mockPostgres).toHaveBeenCalledWith(
       |                              ^
    366|           expect.any(String),
    367|           expect.objectContaining({

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[189/373]⎯

 FAIL  |node| src/server/db/__tests__/drizzle-singleton.test.ts > Drizzle Client Singleton Pattern > Connection Configuration > Connection Pool Settings > should handle undefined values in CI
AssertionError: expected "spy" to be called with arguments: [ Any<String>, ObjectContaining{…} ][90m

Number of calls: [1m0[22m
[39m
 ❯ src/server/db/__tests__/drizzle-singleton.test.ts:380:30
    378|         createDrizzleClient();
    379| 
    380|         expect(mockPostgres).toHaveBeenCalledWith(
       |                              ^
    381|           expect.any(String),
    382|           expect.objectContaining({

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[190/373]⎯

 FAIL  |node| src/server/db/__tests__/drizzle-singleton.test.ts > Drizzle Client Singleton Pattern > Connection Configuration > Logging Configuration > should enable logging in development (non-CI)
AssertionError: expected "spy" to be called with arguments: [ Anything, ObjectContaining{…} ][90m

Number of calls: [1m0[22m
[39m
 ❯ src/server/db/__tests__/drizzle-singleton.test.ts:397:29
    395|         createDrizzleClient();
    396| 
    397|         expect(mockDrizzle).toHaveBeenCalledWith(
       |                             ^
    398|           expect.anything(),
    399|           expect.objectContaining({

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[191/373]⎯

 FAIL  |node| src/server/db/__tests__/drizzle-singleton.test.ts > Drizzle Client Singleton Pattern > Connection Configuration > Logging Configuration > should disable logging in CI
AssertionError: expected "spy" to be called with arguments: [ Anything, ObjectContaining{…} ][90m

Number of calls: [1m0[22m
[39m
 ❯ src/server/db/__tests__/drizzle-singleton.test.ts:413:29
    411|         createDrizzleClient();
    412| 
    413|         expect(mockDrizzle).toHaveBeenCalledWith(
       |                             ^
    414|           expect.anything(),
    415|           expect.objectContaining({

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[192/373]⎯

 FAIL  |node| src/server/db/__tests__/drizzle-singleton.test.ts > Drizzle Client Singleton Pattern > Connection Configuration > Logging Configuration > should disable logging in production
AssertionError: expected "spy" to be called with arguments: [ Anything, ObjectContaining{…} ][90m

Number of calls: [1m0[22m
[39m
 ❯ src/server/db/__tests__/drizzle-singleton.test.ts:429:29
    427|         createDrizzleClient();
    428| 
    429|         expect(mockDrizzle).toHaveBeenCalledWith(
       |                             ^
    430|           expect.anything(),
    431|           expect.objectContaining({

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[193/373]⎯

 FAIL  |node| src/server/db/__tests__/drizzle-singleton.test.ts > Drizzle Client Singleton Pattern > Error Handling > should throw clear error when DATABASE_URL is missing
AssertionError: expected [Function] to throw an error

[32m- Expected:[39m 
null

[31m+ Received:[39m 
undefined

 ❯ src/server/db/__tests__/drizzle-singleton.test.ts:446:43
    444|       const { createDrizzleClient } = await importDrizzleModule();
    445| 
    446|       expect(() => createDrizzleClient()).toThrow(
       |                                           ^
    447|         "DATABASE_URL is required for Drizzle client",
    448|       );

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[194/373]⎯

 FAIL  |node| src/server/db/__tests__/drizzle-singleton.test.ts > Drizzle Client Singleton Pattern > Error Handling > should handle invalid connection strings gracefully
AssertionError: expected "spy" to be called with arguments: [ 'not-a-valid-url', Any<Object> ][90m

Number of calls: [1m0[22m
[39m
 ❯ src/server/db/__tests__/drizzle-singleton.test.ts:461:28
    459|       // Should still attempt to create client (postgres-js will handl…
    460|       expect(() => createDrizzleClient()).not.toThrow();
    461|       expect(mockPostgres).toHaveBeenCalledWith(
       |                            ^
    462|         "not-a-valid-url",
    463|         expect.any(Object),

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[195/373]⎯

 FAIL  |node| src/server/db/__tests__/drizzle-singleton.test.ts > Drizzle Client Singleton Pattern > Error Handling > should handle connection failures with retry logic
AssertionError: expected [Function] to throw an error

[32m- Expected:[39m 
null

[31m+ Received:[39m 
undefined

 ❯ src/server/db/__tests__/drizzle-singleton.test.ts:475:43
    473|       const { createDrizzleClient } = await importDrizzleModule();
    474| 
    475|       expect(() => createDrizzleClient()).toThrow("Connection failed");
       |                                           ^
    476|       expect(mockPostgres).toHaveBeenCalledTimes(1);
    477|     });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[196/373]⎯

 FAIL  |node| src/server/db/__tests__/drizzle-singleton.test.ts > Drizzle Client Singleton Pattern > Error Handling > should properly propagate database connection errors
AssertionError: expected [Function] to throw an error

[32m- Expected:[39m 
null

[31m+ Received:[39m 
undefined

 ❯ src/server/db/__tests__/drizzle-singleton.test.ts:487:43
    485|       const { createDrizzleClient } = await importDrizzleModule();
    486| 
    487|       expect(() => createDrizzleClient()).toThrow(
       |                                           ^
    488|         "Drizzle initialization failed",
    489|       );

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[197/373]⎯

 FAIL  |node| src/server/db/__tests__/drizzle-singleton.test.ts > Drizzle Client Singleton Pattern > Connection Lifecycle > should properly initialize database connection on first use
AssertionError: expected undefined to be true // Object.is equality

[32m- Expected:[39m 
true

[31m+ Received:[39m 
undefined

 ❯ src/server/db/__tests__/drizzle-singleton.test.ts:508:38
    506|       // First call should create connection
    507|       const client = createDrizzleClient();
    508|       expect(client.__isMockDrizzle).toBe(true);
       |                                      ^
    509|       expect(mockPostgres).toHaveBeenCalledTimes(1);
    510|       expect(mockDrizzle).toHaveBeenCalledTimes(1);

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[198/373]⎯

 FAIL  |node| src/server/db/__tests__/drizzle-singleton.test.ts > Drizzle Client Singleton Pattern > Connection Lifecycle > should cleanup connections when closeDrizzleConnection is called
Error: [vitest] No "closeDrizzleConnection" export is defined on the "~/server/db/drizzle" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

vi[33m.[39m[34mmock[39m([35mimport[39m([32m"~/server/db/drizzle"[39m)[33m,[39m [35masync[39m (importOriginal) [33m=>[39m {
  [35mconst[39m actual [33m=[39m [35mawait[39m [34mimportOriginal[39m()
  [35mreturn[39m {
    [33m...[39mactual[33m,[39m
    [90m// your mocked methods[39m
  }
})

 ❯ src/server/db/__tests__/drizzle-singleton.test.ts:517:36
    515|       mockIsDevelopment.mockReturnValue(true);
    516| 
    517|       const { createDrizzleClient, closeDrizzleConnection } =
       |                                    ^
    518|         await importDrizzleModule();
    519| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[199/373]⎯

 FAIL  |node| src/server/db/__tests__/drizzle-singleton.test.ts > Drizzle Client Singleton Pattern > Connection Lifecycle > should handle cleanup errors gracefully
Error: [vitest] No "closeDrizzleConnection" export is defined on the "~/server/db/drizzle" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

vi[33m.[39m[34mmock[39m([35mimport[39m([32m"~/server/db/drizzle"[39m)[33m,[39m [35masync[39m (importOriginal) [33m=>[39m {
  [35mconst[39m actual [33m=[39m [35mawait[39m [34mimportOriginal[39m()
  [35mreturn[39m {
    [33m...[39mactual[33m,[39m
    [90m// your mocked methods[39m
  }
})

 ❯ src/server/db/__tests__/drizzle-singleton.test.ts:551:36
    549|         });
    550| 
    551|       const { createDrizzleClient, closeDrizzleConnection } =
       |                                    ^
    552|         await importDrizzleModule();
    553| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[200/373]⎯

 FAIL  |node| src/server/db/__tests__/drizzle-singleton.test.ts > Drizzle Client Singleton Pattern > Connection Lifecycle > should allow reconnection after cleanup
Error: [vitest] No "closeDrizzleConnection" export is defined on the "~/server/db/drizzle" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

vi[33m.[39m[34mmock[39m([35mimport[39m([32m"~/server/db/drizzle"[39m)[33m,[39m [35masync[39m (importOriginal) [33m=>[39m {
  [35mconst[39m actual [33m=[39m [35mawait[39m [34mimportOriginal[39m()
  [35mreturn[39m {
    [33m...[39mactual[33m,[39m
    [90m// your mocked methods[39m
  }
})

 ❯ src/server/db/__tests__/drizzle-singleton.test.ts:574:36
    572|       mockIsDevelopment.mockReturnValue(true);
    573| 
    574|       const { createDrizzleClient, closeDrizzleConnection } =
       |                                    ^
    575|         await importDrizzleModule();
    576| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[201/373]⎯

 FAIL  |node| src/server/db/__tests__/drizzle-singleton.test.ts > Drizzle Client Singleton Pattern > Connection Lifecycle > should reset singleton without cleanup in development
AssertionError: expected "spy" to be called 1 times, but got 0 times
 ❯ src/server/db/__tests__/drizzle-singleton.test.ts:605:28
    603|       // Should be the same instance (singleton)
    604|       expect(client1).toBe(client2);
    605|       expect(mockPostgres).toHaveBeenCalledTimes(1);
       |                            ^
    606|       expect(mockPostgresInstance.end).not.toHaveBeenCalled(); // No c…
    607|     });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[202/373]⎯

 FAIL  |node| src/server/db/__tests__/drizzle-singleton.test.ts > Drizzle Client Singleton Pattern > Schema Integration > should properly load and attach schema to drizzle instance
AssertionError: expected "spy" to be called with arguments: [ Anything, ObjectContaining{…} ][90m

Number of calls: [1m0[22m
[39m
 ❯ src/server/db/__tests__/drizzle-singleton.test.ts:617:27
    615| 
    616|       // Verify drizzle was called with the mocked schema
    617|       expect(mockDrizzle).toHaveBeenCalledWith(
       |                           ^
    618|         expect.anything(), // postgres connection
    619|         expect.objectContaining({

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[203/373]⎯

 FAIL  |node| src/server/db/__tests__/drizzle-singleton.test.ts > Drizzle Client Singleton Pattern > Schema Integration > should make all schema tables available on the client
AssertionError: expected undefined to be defined
 ❯ src/server/db/__tests__/drizzle-singleton.test.ts:631:36
    629| 
    630|       // Verify client has access to key tables (based on our mock)
    631|       expect(client.organizations).toBeDefined();
       |                                    ^
    632|       expect(client.users).toBeDefined();
    633|       expect(client.machines).toBeDefined();

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[204/373]⎯

 FAIL  |node| src/server/db/__tests__/drizzle-singleton.test.ts > Drizzle Client Singleton Pattern > Module Import Behavior > should handle circular dependencies gracefully
Error: [vitest] No "closeDrizzleConnection" export is defined on the "~/server/db/drizzle" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

vi[33m.[39m[34mmock[39m([35mimport[39m([32m"~/server/db/drizzle"[39m)[33m,[39m [35masync[39m (importOriginal) [33m=>[39m {
  [35mconst[39m actual [33m=[39m [35mawait[39m [34mimportOriginal[39m()
  [35mreturn[39m {
    [33m...[39mactual[33m,[39m
    [90m// your mocked methods[39m
  }
})

 ❯ src/server/db/__tests__/drizzle-singleton.test.ts:665:22
    663|       expect(module1.createDrizzleClient).toBeDefined();
    664|       expect(module2.createDrizzleClient).toBeDefined();
    665|       expect(module1.closeDrizzleConnection).toBeDefined();
       |                      ^
    666|       expect(module2.closeDrizzleConnection).toBeDefined();
    667| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[205/373]⎯

 FAIL  |node| src/server/db/__tests__/drizzle-singleton.test.ts > Drizzle Client Singleton Pattern > Performance Characteristics > should not leak memory on repeated singleton access
AssertionError: expected undefined to be true // Object.is equality

[32m- Expected:[39m 
true

[31m+ Received:[39m 
undefined

 ❯ src/server/db/__tests__/drizzle-singleton.test.ts:698:40
    696|       for (const client of clients) {
    697|         expect(client).toBe(firstClient);
    698|         expect(client.__isMockDrizzle).toBe(true);
       |                                        ^
    699|       }
    700| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[206/373]⎯

 FAIL  |node| src/server/db/__tests__/drizzle-singleton.test.ts > Drizzle Client Singleton Pattern > Performance Characteristics > should handle rapid concurrent connection requests
AssertionError: expected undefined to be true // Object.is equality

[32m- Expected:[39m 
true

[31m+ Received:[39m 
undefined

 ❯ src/server/db/__tests__/drizzle-singleton.test.ts:724:40
    722|       for (const client of clients) {
    723|         expect(client).toBe(firstClient);
    724|         expect(client.__isMockDrizzle).toBe(true);
       |                                        ^
    725|       }
    726| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[207/373]⎯

 FAIL  |node| src/server/db/__tests__/drizzle-singleton.test.ts > Drizzle Client Singleton Pattern > Performance Characteristics > should respect connection pool limits under load
AssertionError: expected "spy" to be called with arguments: [ Any<String>, ObjectContaining{…} ][90m

Number of calls: [1m0[22m
[39m
 ❯ src/server/db/__tests__/drizzle-singleton.test.ts:740:28
    738| 
    739|       // Verify the pool configuration was set correctly
    740|       expect(mockPostgres).toHaveBeenCalledWith(
       |                            ^
    741|         expect.any(String),
    742|         expect.objectContaining({

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[208/373]⎯

 FAIL  |node| src/server/db/__tests__/drizzle-singleton.test.ts > Drizzle Client Singleton Pattern > Worker-Scoped Pattern Integration > Singleton Compatibility with Worker-Scoped Databases > should work correctly with worker-scoped PGlite databases
 FAIL  |node| src/server/db/__tests__/drizzle-singleton.test.ts > Drizzle Client Singleton Pattern > Worker-Scoped Pattern Integration > Singleton Compatibility with Worker-Scoped Databases > should maintain singleton behavior within transaction contexts
 FAIL  |node| src/server/db/__tests__/drizzle-singleton.test.ts > Drizzle Client Singleton Pattern > Worker-Scoped Pattern Integration > Singleton Compatibility with Worker-Scoped Databases > should handle connection cleanup without affecting worker-scoped databases
 FAIL  |node| src/server/db/__tests__/drizzle-singleton.test.ts > Drizzle Client Singleton Pattern > Worker-Scoped Pattern Integration > Memory Safety with Worker-Scoped Patterns > should not accumulate memory when used with worker-scoped databases
 FAIL  |node| src/server/db/__tests__/drizzle-singleton.test.ts > Drizzle Client Singleton Pattern > Worker-Scoped Pattern Integration > Memory Safety with Worker-Scoped Patterns > should handle rapid singleton access without memory leaks in transaction contexts
 FAIL  |node| src/server/db/__tests__/drizzle-singleton.test.ts > Drizzle Client Singleton Pattern > Worker-Scoped Pattern Integration > Transaction Isolation Compatibility > should not interfere with transaction-based isolation
 FAIL  |node| src/server/db/__tests__/drizzle-singleton.test.ts > Drizzle Client Singleton Pattern > Worker-Scoped Pattern Integration > Transaction Isolation Compatibility > should maintain consistent singleton behavior across multiple transactions
Error: [vitest] No "permissions" export is defined on the "../schema" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

vi[33m.[39m[34mmock[39m([35mimport[39m([32m"../schema"[39m)[33m,[39m [35masync[39m (importOriginal) [33m=>[39m {
  [35mconst[39m actual [33m=[39m [35mawait[39m [34mimportOriginal[39m()
  [35mreturn[39m {
    [33m...[39mactual[33m,[39m
    [90m// your mocked methods[39m
  }
})

 ❯ createGlobalPermissionsWithDb scripts/seed/shared/infrastructure.ts:198:21
    196|   // Get all existing permissions in one query
    197|   const existingPermissions = await dbInstance
    198|     .select({ name: permissions.name })
       |                     ^
    199|     .from(permissions);
    200| 
 ❯ seedInfrastructureWithDb scripts/seed/shared/infrastructure.ts:1041:9
 ❯ createSeededTestDatabase src/test/helpers/pglite-test-setup.ts:262:31
 ❯ test.extend.workerDb.scope src/test/helpers/worker-scoped-db.ts:53:22

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[209/373]⎯

 FAIL  |node| src/server/db/__tests__/drizzle-singleton.test.ts > Drizzle Client Singleton Pattern > Memory Safety Validation > Connection Lifecycle Memory Management > should not accumulate connections with repeated module resets
AssertionError: expected [ +0, +0, +0, +0, +0 ] to deeply equal [ 1, 1, 1, 1, 1 ]

[32m- Expected[39m
[31m+ Received[39m

[2m  [[22m
[32m-   1,[39m
[32m-   1,[39m
[32m-   1,[39m
[32m-   1,[39m
[32m-   1,[39m
[31m+   0,[39m
[31m+   0,[39m
[31m+   0,[39m
[31m+   0,[39m
[31m+   0,[39m
[2m  ][22m

 ❯ src/server/db/__tests__/drizzle-singleton.test.ts:989:34
    987| 
    988|         // Each iteration should create exactly one connection
    989|         expect(connectionCounts).toEqual([1, 1, 1, 1, 1]);
       |                                  ^
    990|       });
    991| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[210/373]⎯

 FAIL  |node| src/server/db/__tests__/drizzle-singleton.test.ts > Drizzle Client Singleton Pattern > Memory Safety Validation > Connection Lifecycle Memory Management > should handle cleanup errors without memory accumulation
Error: [vitest] No "closeDrizzleConnection" export is defined on the "~/server/db/drizzle" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

vi[33m.[39m[34mmock[39m([35mimport[39m([32m"~/server/db/drizzle"[39m)[33m,[39m [35masync[39m (importOriginal) [33m=>[39m {
  [35mconst[39m actual [33m=[39m [35mawait[39m [34mimportOriginal[39m()
  [35mreturn[39m {
    [33m...[39mactual[33m,[39m
    [90m// your mocked methods[39m
  }
})

 ❯ src/server/db/__tests__/drizzle-singleton.test.ts:1007:40
    1005|           );
    1006| 
    1007|           const { createDrizzleClient, closeDrizzleConnection } =
       |                                        ^
    1008|             await importDrizzleModule();
    1009|           createDrizzleClient();

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[211/373]⎯

 FAIL  |node| src/server/db/__tests__/drizzle-singleton.test.ts > Drizzle Client Singleton Pattern > Memory Safety Validation > Production vs Development Memory Patterns > should not accumulate instances in production mode
AssertionError: expected 1 to be 10 // Object.is equality

[32m- Expected[39m
[31m+ Received[39m

[32m- 10[39m
[31m+ 1[39m

 ❯ src/server/db/__tests__/drizzle-singleton.test.ts:1040:36
    1038|         // Each should be a unique instance in production
    1039|         const uniqueClients = new Set(clients);
    1040|         expect(uniqueClients.size).toBe(10);
       |                                    ^
    1041| 
    1042|         // Should have created separate connections

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[212/373]⎯

 FAIL  |node| src/server/db/__tests__/drizzle-singleton.test.ts > Drizzle Client Singleton Pattern > Memory Safety Validation > Production vs Development Memory Patterns > should properly manage singleton memory in development mode
AssertionError: expected "spy" to be called 1 times, but got 0 times
 ❯ src/server/db/__tests__/drizzle-singleton.test.ts:1069:30
    1067| 
    1068|         // Only one connection should exist
    1069|         expect(mockPostgres).toHaveBeenCalledTimes(1);
       |                              ^
    1070|         expect(mockDrizzle).toHaveBeenCalledTimes(1);
    1071| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[213/373]⎯

 FAIL  |node| src/server/db/__tests__/drizzle-singleton.test.ts > Drizzle Client Singleton Pattern > Memory Safety Validation > Hot Reload Memory Safety > should handle hot reload cycles without memory accumulation
AssertionError: expected [ +0, +0, +0, +0, +0 ] to deeply equal [ 1, 1, 1, 1, 1 ]

[32m- Expected[39m
[31m+ Received[39m

[2m  [[22m
[32m-   1,[39m
[32m-   1,[39m
[32m-   1,[39m
[32m-   1,[39m
[32m-   1,[39m
[31m+   0,[39m
[31m+   0,[39m
[31m+   0,[39m
[31m+   0,[39m
[31m+   0,[39m
[2m  ][22m

 ❯ src/server/db/__tests__/drizzle-singleton.test.ts:1099:34
    1097| 
    1098|         // Each hot reload cycle should create exactly one connection
    1099|         expect(moduleLoadCounts).toEqual([1, 1, 1, 1, 1]);
       |                                  ^
    1100|       });
    1101| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[214/373]⎯

 FAIL  |node| src/server/db/__tests__/drizzle-singleton.test.ts > Drizzle Client Singleton Pattern > Memory Safety Validation > Hot Reload Memory Safety > should maintain memory efficiency across hot reload with concurrent access
AssertionError: expected undefined to be true // Object.is equality

[32m- Expected:[39m 
true

[31m+ Received:[39m 
undefined

 ❯ src/server/db/__tests__/drizzle-singleton.test.ts:1124:44
    1122|           for (const client of clients) {
    1123|             expect(client).toBe(firstClient);
    1124|             expect(client.__isMockDrizzle).toBe(true);
       |                                            ^
    1125|           }
    1126| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[215/373]⎯

 FAIL  |node| src/server/db/__tests__/drizzle-test-helpers.test.ts > Drizzle Mock Helpers > Mock Objects > mockSchema > should contain expected table definitions
AssertionError: expected { organizations: {}, users: {}, …(14) } to have property "issue_statuses"
 ❯ src/server/db/__tests__/drizzle-test-helpers.test.ts:428:28
    426|         expect(mockSchema).toHaveProperty("models");
    427|         expect(mockSchema).toHaveProperty("priorities");
    428|         expect(mockSchema).toHaveProperty("issue_statuses");
       |                            ^
    429|       });
    430|     });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[216/373]⎯

 FAIL  |node| src/server/services/__tests__/notificationService.unit.test.ts > NotificationService Unit Tests > notifyMachineOwnerOfIssue > creates notification when machine owner has notifications enabled
AssertionError: expected "spy" to be called with arguments: [ { …(2) } ][90m

Received: 

[1m  1st spy call:

[22m[33m@@ -1,8 +1,9 @@[90m
[2m  [[22m
[2m    {[22m
[2m      "columns": {[22m
[31m+       "organizationId": true,[90m
[2m        "title": true,[22m
[2m      },[22m
[2m      "where": {[22m
[2m        "field": {[22m
[2m          "name": "id",[22m
[39m[90m

Number of calls: [1m1[22m
[39m
 ❯ src/server/services/__tests__/notificationService.unit.test.ts:571:45
    569|       });
    570| 
    571|       expect(mockDb.query.issues.findFirst).toHaveBeenCalledWith({
       |                                             ^
    572|         where: {
    573|           type: "eq",

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[217/373]⎯

 FAIL  |node| src/server/services/__tests__/notificationService.unit.test.ts > NotificationService Unit Tests > notifyMachineOwnerOfStatusChange > creates notification when machine owner has status change notifications enabled
AssertionError: expected "spy" to be called with arguments: [ { …(2) } ][90m

Received: 

[1m  1st spy call:

[22m[33m@@ -1,7 +1,11 @@[90m
[2m  [[22m
[2m    {[22m
[31m+     "columns": {[90m
[31m+       "organizationId": true,[90m
[31m+       "title": true,[90m
[31m+     },[90m
[2m      "where": {[22m
[2m        "field": {[22m
[2m          "name": "id",[22m
[2m        },[22m
[2m        "type": "eq",[22m
[39m[90m

Number of calls: [1m1[22m
[39m
 ❯ src/server/services/__tests__/notificationService.unit.test.ts:734:45
    732|       );
    733| 
    734|       expect(mockDb.query.issues.findFirst).toHaveBeenCalledWith({
       |                                             ^
    735|         where: {
    736|           type: "eq",

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[218/373]⎯

 FAIL  |node| src/server/services/__tests__/notificationService.unit.test.ts > NotificationService Unit Tests > notifyUserOfAssignment > creates notification when user is assigned to issue
AssertionError: expected "spy" to be called with arguments: [ { …(2) } ][90m

Received: 

[1m  1st spy call:

[22m[33m@@ -1,7 +1,11 @@[90m
[2m  [[22m
[2m    {[22m
[31m+     "columns": {[90m
[31m+       "organizationId": true,[90m
[31m+       "title": true,[90m
[31m+     },[90m
[2m      "where": {[22m
[2m        "field": {[22m
[2m          "name": "id",[22m
[2m        },[22m
[2m        "type": "eq",[22m
[39m[90m

Number of calls: [1m1[22m
[39m
 ❯ src/server/services/__tests__/notificationService.unit.test.ts:844:45
    842|       );
    843| 
    844|       expect(mockDb.query.issues.findFirst).toHaveBeenCalledWith({
       |                                             ^
    845|         where: {
    846|           type: "eq",

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[219/373]⎯

 FAIL  |node| src/server/services/__tests__/roleService.test.ts > RoleService > createTemplateRole > should create new role when template role does not exist
Error: [vitest] No "rolePermissions" export is defined on the "~/server/db/schema" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

vi[33m.[39m[34mmock[39m([35mimport[39m([32m"~/server/db/schema"[39m)[33m,[39m [35masync[39m (importOriginal) [33m=>[39m {
  [35mconst[39m actual [33m=[39m [35mawait[39m [34mimportOriginal[39m()
  [35mreturn[39m {
    [33m...[39mactual[33m,[39m
    [90m// your mocked methods[39m
  }
})

 ❯ RoleService.createTemplateRole src/server/services/roleService.ts:242:15
    240|     // Clear existing permissions
    241|     await this.drizzle
    242|       .delete(rolePermissions)
       |               ^
    243|       .where(eq(rolePermissions.roleId, role.id));
    244| 
 ❯ src/server/services/__tests__/roleService.test.ts:181:22

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[220/373]⎯

 FAIL  |node| src/server/services/__tests__/roleService.test.ts > RoleService > createTemplateRole > should update existing role when template role already exists
Error: [vitest] No "rolePermissions" export is defined on the "~/server/db/schema" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

vi[33m.[39m[34mmock[39m([35mimport[39m([32m"~/server/db/schema"[39m)[33m,[39m [35masync[39m (importOriginal) [33m=>[39m {
  [35mconst[39m actual [33m=[39m [35mawait[39m [34mimportOriginal[39m()
  [35mreturn[39m {
    [33m...[39mactual[33m,[39m
    [90m// your mocked methods[39m
  }
})

 ❯ RoleService.createTemplateRole src/server/services/roleService.ts:242:15
    240|     // Clear existing permissions
    241|     await this.drizzle
    242|       .delete(rolePermissions)
       |               ^
    243|       .where(eq(rolePermissions.roleId, role.id));
    244| 
 ❯ src/server/services/__tests__/roleService.test.ts:219:22

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[221/373]⎯

 FAIL  |node| src/server/services/__tests__/roleService.test.ts > RoleService > createTemplateRole > should apply name override when provided
Error: [vitest] No "rolePermissions" export is defined on the "~/server/db/schema" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

vi[33m.[39m[34mmock[39m([35mimport[39m([32m"~/server/db/schema"[39m)[33m,[39m [35masync[39m (importOriginal) [33m=>[39m {
  [35mconst[39m actual [33m=[39m [35mawait[39m [34mimportOriginal[39m()
  [35mreturn[39m {
    [33m...[39mactual[33m,[39m
    [90m// your mocked methods[39m
  }
})

 ❯ RoleService.createTemplateRole src/server/services/roleService.ts:242:15
    240|     // Clear existing permissions
    241|     await this.drizzle
    242|       .delete(rolePermissions)
       |               ^
    243|       .where(eq(rolePermissions.roleId, role.id));
    244| 
 ❯ src/server/services/__tests__/roleService.test.ts:251:22

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[222/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/collection.test.ts > Collection Router Integration Tests > Admin Procedures > should require admin permissions for generateAuto
AssertionError: expected [Function] to throw error including 'Missing required permission: organiza…' but got 'You don\'t have permission to access …'

Expected: [32m"[7mMissing required permission:[27m organization[7m:manage[27m"[39m
Received: [31m"[7mYou don't have permission to access this[27m organization"[39m

 ❯ src/server/api/routers/__tests__/collection.test.ts:853:9
    851|         const caller = appRouter.createCaller(insufficientCtx);
    852| 
    853|         await expect(caller.collection.generateAuto()).rejects.toThrow(
       |         ^
    854|           "Missing required permission: organization:manage",
    855|         );
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[223/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/collection.test.ts > Collection Router Integration Tests > Admin Procedures > should require admin permissions for toggleType
AssertionError: expected [Function] to throw error including 'Missing required permission: organiza…' but got 'You don\'t have permission to access …'

Expected: [32m"[7mMissing required permission:[27m organization[7m:manage[27m"[39m
Received: [31m"[7mYou don't have permission to access this[27m organization"[39m

 ❯ src/server/api/routers/__tests__/collection.test.ts:944:9
    942|         const caller = appRouter.createCaller(insufficientCtx2);
    943| 
    944|         await expect(
       |         ^
    945|           caller.collection.toggleType({
    946|             collectionTypeId: roomType.id,
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[224/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.comment.router.integration.test.ts > Issue Comment Router Integration Tests (PGlite) > Comment Creation > should create comment with proper organizational scoping
Error: Failed query: SET app.current_organization_id = $1
params: test-org-pinpoint
 ❯ PglitePreparedQuery.queryWithCache node_modules/src/pg-core/session.ts:73:11
 ❯ src/server/api/routers/__tests__/issue.comment.router.integration.test.ts:63:9
     61|       await withIsolatedTest(workerDb, async (db) => {
     62|         // Set RLS context for primary org
     63|         await db.execute(
       |         ^
     64|           sql`SET app.current_organization_id = ${SEED_TEST_IDS.ORGANI…
     65|         );
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

Caused by: error: syntax error at or near "$1"
 ❯ ye.Ve node_modules/@electric-sql/pg-protocol/src/parser.ts:432:11
 ❯ ye.nt node_modules/@electric-sql/pg-protocol/src/parser.ts:210:16
 ❯ ye.parse node_modules/@electric-sql/pg-protocol/src/parser.ts:102:25
 ❯ ue.execProtocol node_modules/@electric-sql/pglite/src/pglite.ts:700:26
 ❯ ue.y node_modules/@electric-sql/pglite/src/base.ts:141:12
 ❯ node_modules/@electric-sql/pglite/src/base.ts:234:44

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { length: 91, severity: 'ERROR', code: '42601', detail: undefined, hint: undefined, position: '35', internalPosition: undefined, internalQuery: undefined, where: undefined, schema: undefined, table: undefined, dataType: undefined, constraint: undefined, file: 'scan.l', routine: 'scanner_yyerror', query: 'SET app.current_organization_id = $1', params: [ 'test-org-pinpoint' ], queryOptions: { rowMode: 'object', parsers: { '1082': 'Function<1082>', '1114': 'Function<1114>', '1115': 'Function<1115>', '1182': 'Function<1182>', '1184': 'Function<1184>', '1185': 'Function<1185>', '1186': 'Function<1186>', '1187': 'Function<1187>', '1231': 'Function<1231>' } } }
⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[225/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.comment.router.integration.test.ts > Issue Comment Router Integration Tests (PGlite) > Comment Creation > should enforce issue accessibility for comment creation
Error: Failed query: SET app.current_organization_id = $1
params: test-org-pinpoint
 ❯ PglitePreparedQuery.queryWithCache node_modules/src/pg-core/session.ts:73:11
 ❯ src/server/api/routers/__tests__/issue.comment.router.integration.test.ts:122:9
    120|       await withIsolatedTest(workerDb, async (db) => {
    121|         // Set RLS context for primary org
    122|         await db.execute(
       |         ^
    123|           sql`SET app.current_organization_id = ${SEED_TEST_IDS.ORGANI…
    124|         );
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

Caused by: error: syntax error at or near "$1"
 ❯ ye.Ve node_modules/@electric-sql/pg-protocol/src/parser.ts:432:11
 ❯ ye.nt node_modules/@electric-sql/pg-protocol/src/parser.ts:210:16
 ❯ ye.parse node_modules/@electric-sql/pg-protocol/src/parser.ts:102:25
 ❯ ue.execProtocol node_modules/@electric-sql/pglite/src/pglite.ts:700:26
 ❯ ue.y node_modules/@electric-sql/pglite/src/base.ts:141:12
 ❯ node_modules/@electric-sql/pglite/src/base.ts:234:44

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { length: 91, severity: 'ERROR', code: '42601', detail: undefined, hint: undefined, position: '35', internalPosition: undefined, internalQuery: undefined, where: undefined, schema: undefined, table: undefined, dataType: undefined, constraint: undefined, file: 'scan.l', routine: 'scanner_yyerror', query: 'SET app.current_organization_id = $1', params: [ 'test-org-pinpoint' ], queryOptions: { rowMode: 'object', parsers: { '1082': 'Function<1082>', '1114': 'Function<1114>', '1115': 'Function<1115>', '1182': 'Function<1182>', '1184': 'Function<1184>', '1185': 'Function<1185>', '1186': 'Function<1186>', '1187': 'Function<1187>', '1231': 'Function<1231>' } } }
⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[226/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.comment.router.integration.test.ts > Issue Comment Router Integration Tests (PGlite) > Comment Editing > should allow users to edit their own comments
Error: Failed query: SET app.current_organization_id = $1
params: test-org-pinpoint
 ❯ PglitePreparedQuery.queryWithCache node_modules/src/pg-core/session.ts:73:11
 ❯ src/server/api/routers/__tests__/issue.comment.router.integration.test.ts:164:9
    162|       await withIsolatedTest(workerDb, async (db) => {
    163|         // Set RLS context for primary org
    164|         await db.execute(
       |         ^
    165|           sql`SET app.current_organization_id = ${SEED_TEST_IDS.ORGANI…
    166|         );
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

Caused by: error: syntax error at or near "$1"
 ❯ ye.Ve node_modules/@electric-sql/pg-protocol/src/parser.ts:432:11
 ❯ ye.nt node_modules/@electric-sql/pg-protocol/src/parser.ts:210:16
 ❯ ye.parse node_modules/@electric-sql/pg-protocol/src/parser.ts:102:25
 ❯ ue.execProtocol node_modules/@electric-sql/pglite/src/pglite.ts:700:26
 ❯ ue.y node_modules/@electric-sql/pglite/src/base.ts:141:12
 ❯ node_modules/@electric-sql/pglite/src/base.ts:234:44

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { length: 91, severity: 'ERROR', code: '42601', detail: undefined, hint: undefined, position: '35', internalPosition: undefined, internalQuery: undefined, where: undefined, schema: undefined, table: undefined, dataType: undefined, constraint: undefined, file: 'scan.l', routine: 'scanner_yyerror', query: 'SET app.current_organization_id = $1', params: [ 'test-org-pinpoint' ], queryOptions: { rowMode: 'object', parsers: { '1082': 'Function<1082>', '1114': 'Function<1114>', '1115': 'Function<1115>', '1182': 'Function<1182>', '1184': 'Function<1184>', '1185': 'Function<1185>', '1186': 'Function<1186>', '1187': 'Function<1187>', '1231': 'Function<1231>' } } }
⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[227/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.comment.router.integration.test.ts > Issue Comment Router Integration Tests (PGlite) > Comment Editing > should prevent users from editing others' comments
Error: Failed query: SET app.current_organization_id = $1
params: test-org-pinpoint
 ❯ PglitePreparedQuery.queryWithCache node_modules/src/pg-core/session.ts:73:11
 ❯ src/server/api/routers/__tests__/issue.comment.router.integration.test.ts:236:9
    234|       await withIsolatedTest(workerDb, async (db) => {
    235|         // Set RLS context for primary org
    236|         await db.execute(
       |         ^
    237|           sql`SET app.current_organization_id = ${SEED_TEST_IDS.ORGANI…
    238|         );
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

Caused by: error: syntax error at or near "$1"
 ❯ ye.Ve node_modules/@electric-sql/pg-protocol/src/parser.ts:432:11
 ❯ ye.nt node_modules/@electric-sql/pg-protocol/src/parser.ts:210:16
 ❯ ye.parse node_modules/@electric-sql/pg-protocol/src/parser.ts:102:25
 ❯ ue.execProtocol node_modules/@electric-sql/pglite/src/pglite.ts:700:26
 ❯ ue.y node_modules/@electric-sql/pglite/src/base.ts:141:12
 ❯ node_modules/@electric-sql/pglite/src/base.ts:234:44

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { length: 91, severity: 'ERROR', code: '42601', detail: undefined, hint: undefined, position: '35', internalPosition: undefined, internalQuery: undefined, where: undefined, schema: undefined, table: undefined, dataType: undefined, constraint: undefined, file: 'scan.l', routine: 'scanner_yyerror', query: 'SET app.current_organization_id = $1', params: [ 'test-org-pinpoint' ], queryOptions: { rowMode: 'object', parsers: { '1082': 'Function<1082>', '1114': 'Function<1114>', '1115': 'Function<1115>', '1182': 'Function<1182>', '1184': 'Function<1184>', '1185': 'Function<1185>', '1186': 'Function<1186>', '1187': 'Function<1187>', '1231': 'Function<1231>' } } }
⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[228/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.comment.router.integration.test.ts > Issue Comment Router Integration Tests (PGlite) > Comment Deletion > should allow users to delete their own comments
Error: Failed query: SET app.current_organization_id = $1
params: test-org-pinpoint
 ❯ PglitePreparedQuery.queryWithCache node_modules/src/pg-core/session.ts:73:11
 ❯ src/server/api/routers/__tests__/issue.comment.router.integration.test.ts:301:9
    299|       await withIsolatedTest(workerDb, async (db) => {
    300|         // Set RLS context for primary org
    301|         await db.execute(
       |         ^
    302|           sql`SET app.current_organization_id = ${SEED_TEST_IDS.ORGANI…
    303|         );
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

Caused by: error: syntax error at or near "$1"
 ❯ ye.Ve node_modules/@electric-sql/pg-protocol/src/parser.ts:432:11
 ❯ ye.nt node_modules/@electric-sql/pg-protocol/src/parser.ts:210:16
 ❯ ye.parse node_modules/@electric-sql/pg-protocol/src/parser.ts:102:25
 ❯ ue.execProtocol node_modules/@electric-sql/pglite/src/pglite.ts:700:26
 ❯ ue.y node_modules/@electric-sql/pglite/src/base.ts:141:12
 ❯ node_modules/@electric-sql/pglite/src/base.ts:234:44

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { length: 91, severity: 'ERROR', code: '42601', detail: undefined, hint: undefined, position: '35', internalPosition: undefined, internalQuery: undefined, where: undefined, schema: undefined, table: undefined, dataType: undefined, constraint: undefined, file: 'scan.l', routine: 'scanner_yyerror', query: 'SET app.current_organization_id = $1', params: [ 'test-org-pinpoint' ], queryOptions: { rowMode: 'object', parsers: { '1082': 'Function<1082>', '1114': 'Function<1114>', '1115': 'Function<1115>', '1182': 'Function<1182>', '1184': 'Function<1184>', '1185': 'Function<1185>', '1186': 'Function<1186>', '1187': 'Function<1187>', '1231': 'Function<1231>' } } }
⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[229/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.comment.router.integration.test.ts > Issue Comment Router Integration Tests (PGlite) > Comment Restoration > should allow admins to restore deleted comments
Error: Failed query: SET app.current_organization_id = $1
params: test-org-pinpoint
 ❯ PglitePreparedQuery.queryWithCache node_modules/src/pg-core/session.ts:73:11
 ❯ src/server/api/routers/__tests__/issue.comment.router.integration.test.ts:371:9
    369|       await withIsolatedTest(workerDb, async (db) => {
    370|         // Set RLS context for primary org
    371|         await db.execute(
       |         ^
    372|           sql`SET app.current_organization_id = ${SEED_TEST_IDS.ORGANI…
    373|         );
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

Caused by: error: syntax error at or near "$1"
 ❯ ye.Ve node_modules/@electric-sql/pg-protocol/src/parser.ts:432:11
 ❯ ye.nt node_modules/@electric-sql/pg-protocol/src/parser.ts:210:16
 ❯ ye.parse node_modules/@electric-sql/pg-protocol/src/parser.ts:102:25
 ❯ ue.execProtocol node_modules/@electric-sql/pglite/src/pglite.ts:700:26
 ❯ ue.y node_modules/@electric-sql/pglite/src/base.ts:141:12
 ❯ node_modules/@electric-sql/pglite/src/base.ts:234:44

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { length: 91, severity: 'ERROR', code: '42601', detail: undefined, hint: undefined, position: '35', internalPosition: undefined, internalQuery: undefined, where: undefined, schema: undefined, table: undefined, dataType: undefined, constraint: undefined, file: 'scan.l', routine: 'scanner_yyerror', query: 'SET app.current_organization_id = $1', params: [ 'test-org-pinpoint' ], queryOptions: { rowMode: 'object', parsers: { '1082': 'Function<1082>', '1114': 'Function<1114>', '1115': 'Function<1115>', '1182': 'Function<1182>', '1184': 'Function<1184>', '1185': 'Function<1185>', '1186': 'Function<1186>', '1187': 'Function<1187>', '1231': 'Function<1231>' } } }
⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[230/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.comment.router.integration.test.ts > Issue Comment Router Integration Tests (PGlite) > Deleted Comments Admin View > should allow admins to view deleted comments
Error: Failed query: SET app.current_organization_id = $1
params: test-org-pinpoint
 ❯ PglitePreparedQuery.queryWithCache node_modules/src/pg-core/session.ts:73:11
 ❯ src/server/api/routers/__tests__/issue.comment.router.integration.test.ts:442:9
    440|       await withIsolatedTest(workerDb, async (db) => {
    441|         // Set RLS context for primary org
    442|         await db.execute(
       |         ^
    443|           sql`SET app.current_organization_id = ${SEED_TEST_IDS.ORGANI…
    444|         );
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

Caused by: error: syntax error at or near "$1"
 ❯ ye.Ve node_modules/@electric-sql/pg-protocol/src/parser.ts:432:11
 ❯ ye.nt node_modules/@electric-sql/pg-protocol/src/parser.ts:210:16
 ❯ ye.parse node_modules/@electric-sql/pg-protocol/src/parser.ts:102:25
 ❯ ue.execProtocol node_modules/@electric-sql/pglite/src/pglite.ts:700:26
 ❯ ue.y node_modules/@electric-sql/pglite/src/base.ts:141:12
 ❯ node_modules/@electric-sql/pglite/src/base.ts:234:44

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { length: 91, severity: 'ERROR', code: '42601', detail: undefined, hint: undefined, position: '35', internalPosition: undefined, internalQuery: undefined, where: undefined, schema: undefined, table: undefined, dataType: undefined, constraint: undefined, file: 'scan.l', routine: 'scanner_yyerror', query: 'SET app.current_organization_id = $1', params: [ 'test-org-pinpoint' ], queryOptions: { rowMode: 'object', parsers: { '1082': 'Function<1082>', '1114': 'Function<1114>', '1115': 'Function<1115>', '1182': 'Function<1182>', '1184': 'Function<1184>', '1185': 'Function<1185>', '1186': 'Function<1186>', '1187': 'Function<1187>', '1231': 'Function<1231>' } } }
⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[231/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.comment.router.integration.test.ts > Issue Comment Router Integration Tests (PGlite) > Organizational Boundaries > should enforce cross-organizational comment access
Error: Failed query: SET app.current_organization_id = $1
params: test-org-competitor
 ❯ PglitePreparedQuery.queryWithCache node_modules/src/pg-core/session.ts:73:11
 ❯ src/server/api/routers/__tests__/issue.comment.router.integration.test.ts:509:9
    507|       await withIsolatedTest(workerDb, async (db) => {
    508|         // Set RLS context for competitor org first to create data the…
    509|         await db.execute(
       |         ^
    510|           sql`SET app.current_organization_id = ${SEED_TEST_IDS.ORGANI…
    511|         );
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

Caused by: error: syntax error at or near "$1"
 ❯ ye.Ve node_modules/@electric-sql/pg-protocol/src/parser.ts:432:11
 ❯ ye.nt node_modules/@electric-sql/pg-protocol/src/parser.ts:210:16
 ❯ ye.parse node_modules/@electric-sql/pg-protocol/src/parser.ts:102:25
 ❯ ue.execProtocol node_modules/@electric-sql/pglite/src/pglite.ts:700:26
 ❯ ue.y node_modules/@electric-sql/pglite/src/base.ts:141:12
 ❯ node_modules/@electric-sql/pglite/src/base.ts:234:44

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { length: 91, severity: 'ERROR', code: '42601', detail: undefined, hint: undefined, position: '35', internalPosition: undefined, internalQuery: undefined, where: undefined, schema: undefined, table: undefined, dataType: undefined, constraint: undefined, file: 'scan.l', routine: 'scanner_yyerror', query: 'SET app.current_organization_id = $1', params: [ 'test-org-competitor' ], queryOptions: { rowMode: 'object', parsers: { '1082': 'Function<1082>', '1114': 'Function<1114>', '1115': 'Function<1115>', '1182': 'Function<1182>', '1184': 'Function<1184>', '1185': 'Function<1185>', '1186': 'Function<1186>', '1187': 'Function<1187>', '1231': 'Function<1231>' } } }
⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[232/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.comment.test.ts > Issue Comment Router (RLS-Enhanced) > addComment (RLS-Enhanced) > should add a comment with organizational scoping
TRPCError: You don't have permission to access this organization
 ❯ src/server/api/trpc.base.ts:355:13
    353| 
    354|     if (!membership) {
    355|       throw new TRPCError({
       |             ^
    356|         code: "FORBIDDEN",
    357|         message: "You don't have permission to access this organizatio…
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ src/server/api/trpc.base.ts:238:22
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ procedure node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:673:20
 ❯ node_modules/@trpc/server/src/unstable-core-do-not-import/router.ts:473:20
 ❯ src/server/api/routers/__tests__/issue.comment.test.ts:236:22

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[233/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.comment.test.ts > Issue Comment Router (RLS-Enhanced) > addComment (RLS-Enhanced) > should reject comment on non-existent issue
AssertionError: expected [Function] to throw error including 'Issue not found' but got 'You don\'t have permission to access …'

Expected: [32m"Issue not found"[39m
Received: [31m"You don't have permission to access this organization"[39m

 ❯ src/server/api/routers/__tests__/issue.comment.test.ts:298:7
    296|       const caller = appRouter.createCaller(ctx as any);
    297| 
    298|       await expect(
       |       ^
    299|         caller.issue.comment.addComment({
    300|           issueId: "non-existent-issue",

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[234/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.comment.test.ts > Issue Comment Router (RLS-Enhanced) > addComment (RLS-Enhanced) > should reject comment from non-member (RLS boundary)
AssertionError: expected [Function] to throw error including 'User is not a member of this organiza…' but got 'You don\'t have permission to access …'

Expected: [32m"[7mUser is not a member of[27m this organization"[39m
Received: [31m"[7mYou don't have permission to access[27m this organization"[39m

 ❯ src/server/api/routers/__tests__/issue.comment.test.ts:330:7
    328|       const caller = appRouter.createCaller(ctx as any);
    329| 
    330|       await expect(
       |       ^
    331|         caller.issue.comment.addComment({
    332|           issueId: SEED_TEST_IDS.MOCK_PATTERNS.ISSUE,

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[235/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.comment.test.ts > Issue Comment Router (RLS-Enhanced) > create (alias, RLS-Enhanced) > should work identically to addComment with organizational scoping
TRPCError: You don't have permission to access this organization
 ❯ src/server/api/trpc.base.ts:355:13
    353| 
    354|     if (!membership) {
    355|       throw new TRPCError({
       |             ^
    356|         code: "FORBIDDEN",
    357|         message: "You don't have permission to access this organizatio…
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ src/server/api/trpc.base.ts:238:22
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ procedure node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:673:20
 ❯ node_modules/@trpc/server/src/unstable-core-do-not-import/router.ts:473:20
 ❯ src/server/api/routers/__tests__/issue.comment.test.ts:431:22

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[236/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.comment.test.ts > Issue Comment Router (RLS-Enhanced) > editComment (RLS-Enhanced) > should allow author to edit their own comment with organizational validation
TRPCError: You don't have permission to access this organization
 ❯ src/server/api/trpc.base.ts:355:13
    353| 
    354|     if (!membership) {
    355|       throw new TRPCError({
       |             ^
    356|         code: "FORBIDDEN",
    357|         message: "You don't have permission to access this organizatio…
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ src/server/api/trpc.base.ts:238:22
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ procedure node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:673:20
 ❯ node_modules/@trpc/server/src/unstable-core-do-not-import/router.ts:473:20
 ❯ src/server/api/routers/__tests__/issue.comment.test.ts:518:22

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[237/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.comment.test.ts > Issue Comment Router (RLS-Enhanced) > editComment (RLS-Enhanced) > should reject edit by non-author (ownership validation)
AssertionError: expected [Function] to throw error including 'You can only edit your own comments' but got 'You don\'t have permission to access …'

Expected: [32m"You [7mcan only edit your own comments[27m"[39m
Received: [31m"You [7mdon't have permission to access this organization[27m"[39m

 ❯ src/server/api/routers/__tests__/issue.comment.test.ts:570:7
    568|       const caller = appRouter.createCaller(ctx as any);
    569| 
    570|       await expect(
       |       ^
    571|         caller.issue.comment.editComment({
    572|           commentId,

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[238/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.comment.test.ts > Issue Comment Router (RLS-Enhanced) > editComment (RLS-Enhanced) > should reject edit of deleted comment
AssertionError: expected [Function] to throw error including 'Cannot edit deleted comment' but got 'You don\'t have permission to access …'

Expected: [32m"Cannot edit deleted comment"[39m
Received: [31m"You don't have permission to access this organization"[39m

 ❯ src/server/api/routers/__tests__/issue.comment.test.ts:608:7
    606|       const caller = appRouter.createCaller(ctx as any);
    607| 
    608|       await expect(
       |       ^
    609|         caller.issue.comment.editComment({
    610|           commentId,

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[239/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.comment.test.ts > Issue Comment Router (RLS-Enhanced) > deleteComment (RLS-Enhanced) > should allow user to delete their own comment with organizational validation
TRPCError: You don't have permission to access this organization
 ❯ src/server/api/trpc.base.ts:355:13
    353| 
    354|     if (!membership) {
    355|       throw new TRPCError({
       |             ^
    356|         code: "FORBIDDEN",
    357|         message: "You don't have permission to access this organizatio…
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ src/server/api/trpc.base.ts:238:22
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ procedure node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:673:20
 ❯ node_modules/@trpc/server/src/unstable-core-do-not-import/router.ts:473:20
 ❯ src/server/api/routers/__tests__/issue.comment.test.ts:718:22

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[240/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.comment.test.ts > Issue Comment Router (RLS-Enhanced) > deleteComment (RLS-Enhanced) > should reject deletion of non-existent comment
AssertionError: expected [Function] to throw error including 'Comment not found' but got 'You don\'t have permission to access …'

Expected: [32m"Comment not found"[39m
Received: [31m"You don't have permission to access this organization"[39m

 ❯ src/server/api/routers/__tests__/issue.comment.test.ts:754:7
    752|       const caller = appRouter.createCaller(ctx as any);
    753| 
    754|       await expect(
       |       ^
    755|         caller.issue.comment.deleteComment({
    756|           commentId: "non-existent",

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[241/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.comment.test.ts > Issue Comment Router (RLS-Enhanced) > restoreComment (RLS-Enhanced) > should allow admin to restore deleted comment with organizational validation
TRPCError: You don't have permission to access this organization
 ❯ src/server/api/trpc.base.ts:355:13
    353| 
    354|     if (!membership) {
    355|       throw new TRPCError({
       |             ^
    356|         code: "FORBIDDEN",
    357|         message: "You don't have permission to access this organizatio…
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ src/server/api/trpc.base.ts:238:22
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ procedure node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:673:20
 ❯ node_modules/@trpc/server/src/unstable-core-do-not-import/router.ts:473:20
 ❯ src/server/api/routers/__tests__/issue.comment.test.ts:848:22

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[242/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.comment.test.ts > Issue Comment Router (RLS-Enhanced) > restoreComment (RLS-Enhanced) > should reject restore of non-deleted comment
AssertionError: expected [Function] to throw error including 'Comment is not deleted' but got 'You don\'t have permission to access …'

Expected: [32m"Comment is not deleted"[39m
Received: [31m"You don't have permission to access this organization"[39m

 ❯ src/server/api/routers/__tests__/issue.comment.test.ts:891:7
    889|       const caller = appRouter.createCaller(ctx as any);
    890| 
    891|       await expect(
       |       ^
    892|         caller.issue.comment.restoreComment({
    893|           commentId,

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[243/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.comment.test.ts > Issue Comment Router (RLS-Enhanced) > getDeletedComments (RLS-Enhanced) > should return deleted comments for organization with boundary enforcement
TRPCError: You don't have permission to access this organization
 ❯ src/server/api/trpc.base.ts:355:13
    353| 
    354|     if (!membership) {
    355|       throw new TRPCError({
       |             ^
    356|         code: "FORBIDDEN",
    357|         message: "You don't have permission to access this organizatio…
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ src/server/api/trpc.base.ts:238:22
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ procedure node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:673:20
 ❯ node_modules/@trpc/server/src/unstable-core-do-not-import/router.ts:473:20
 ❯ src/server/api/routers/__tests__/issue.comment.test.ts:998:22

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[244/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.comment.test.ts > Issue Comment Router (RLS-Enhanced) > getDeletedComments (RLS-Enhanced) > should enforce organizational boundaries in deleted comments list (RLS)
TRPCError: You don't have permission to access this organization
 ❯ src/server/api/trpc.base.ts:355:13
    353| 
    354|     if (!membership) {
    355|       throw new TRPCError({
       |             ^
    356|         code: "FORBIDDEN",
    357|         message: "You don't have permission to access this organizatio…
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ src/server/api/trpc.base.ts:238:22
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ procedure node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:673:20
 ❯ node_modules/@trpc/server/src/unstable-core-do-not-import/router.ts:473:20
 ❯ src/server/api/routers/__tests__/issue.comment.test.ts:1089:22

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[245/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.comment.test.ts > Issue Comment Router (RLS-Enhanced) > Authentication and Authorization (RLS-Enhanced) > should establish RLS context for authenticated operations
TRPCError: You don't have permission to access this organization
 ❯ src/server/api/trpc.base.ts:355:13
    353| 
    354|     if (!membership) {
    355|       throw new TRPCError({
       |             ^
    356|         code: "FORBIDDEN",
    357|         message: "You don't have permission to access this organizatio…
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ src/server/api/trpc.base.ts:238:22
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ procedure node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:673:20
 ❯ node_modules/@trpc/server/src/unstable-core-do-not-import/router.ts:473:20
 ❯ src/server/api/routers/__tests__/issue.comment.test.ts:1208:7

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[246/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.confirmation.test.ts > Issue Confirmation Workflow (RLS-Enhanced) > Basic vs Full Form Creation (RLS-Enhanced) > should create unconfirmed issues with basic form and organizational scoping
TypeError: Cannot read properties of undefined (reading 'create')
 ❯ src/server/api/routers/__tests__/issue.confirmation.test.ts:478:30
    476|       };
    477| 
    478|       vi.mocked(ctx.db.issue.create).mockResolvedValue(mockIssue as an…
       |                              ^
    479| 
    480|       // Act

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[247/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.confirmation.test.ts > Issue Confirmation Workflow (RLS-Enhanced) > Basic vs Full Form Creation (RLS-Enhanced) > should create confirmed issues with full form by default
TypeError: Cannot read properties of undefined (reading 'create')
 ❯ src/server/api/routers/__tests__/issue.confirmation.test.ts:558:30
    556|       };
    557| 
    558|       vi.mocked(ctx.db.issue.create).mockResolvedValue(mockIssue as an…
       |                              ^
    559| 
    560|       // Act

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[248/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.confirmation.test.ts > Issue Confirmation Workflow (RLS-Enhanced) > Basic vs Full Form Creation (RLS-Enhanced) > should allow explicit override of confirmation status in full form
TypeError: Cannot read properties of undefined (reading 'create')
 ❯ src/server/api/routers/__tests__/issue.confirmation.test.ts:594:30
    592|       };
    593| 
    594|       vi.mocked(ctx.db.issue.create).mockResolvedValue(mockIssue as an…
       |                              ^
    595| 
    596|       // Act

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[249/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.confirmation.test.ts > Issue Confirmation Workflow (RLS-Enhanced) > Basic vs Full Form Creation (RLS-Enhanced) > should require issue:create permission for issue creation
AssertionError: expected [Function] to throw error including 'Missing required permission: issue:cr…' but got 'Cannot read properties of undefined (…'

Expected: [32m"Missing required permission: issue:create"[39m
Received: [31m"Cannot read properties of undefined (reading 'map')"[39m

 ❯ src/server/api/routers/__tests__/issue.confirmation.test.ts:618:7
    616| 
    617|       // Act & Assert
    618|       await expect(
       |       ^
    619|         caller.create({
    620|           title: "Test Issue",

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[250/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.confirmation.test.ts > Issue Confirmation Workflow (RLS-Enhanced) > Confirmation Status Toggle > should toggle confirmation status with issue:confirm permission
TypeError: Cannot read properties of undefined (reading 'update')
 ❯ src/server/api/routers/__tests__/issue.confirmation.test.ts:652:30
    650|         mockIssue as any,
    651|       );
    652|       vi.mocked(ctx.db.issue.update).mockResolvedValue(mockIssue as an…
       |                              ^
    653| 
    654|       // Act

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[251/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.confirmation.test.ts > Issue Confirmation Workflow (RLS-Enhanced) > Confirmation Status Toggle > should deny confirmation toggle without issue:confirm permission
AssertionError: expected [Function] to throw error including 'Missing required permission: issue:co…' but got 'Cannot read properties of undefined (…'

Expected: [32m"Missing required permission: issue:confirm"[39m
Received: [31m"Cannot read properties of undefined (reading 'map')"[39m

 ❯ src/server/api/routers/__tests__/issue.confirmation.test.ts:677:7
    675| 
    676|       // Act & Assert
    677|       await expect(
       |       ^
    678|         caller.toggleConfirmation({
    679|           issueId: "issue-1",

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[252/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.confirmation.test.ts > Issue Confirmation Workflow (RLS-Enhanced) > Confirmation Status Toggle > should return NOT_FOUND for non-existent issue
AssertionError: expected [Function] to throw error including 'Issue not found' but got 'Cannot read properties of undefined (…'

Expected: [32m"Issue not found"[39m
Received: [31m"Cannot read properties of undefined (reading 'map')"[39m

 ❯ src/server/api/routers/__tests__/issue.confirmation.test.ts:693:7
    691| 
    692|       // Act & Assert
    693|       await expect(
       |       ^
    694|         caller.toggleConfirmation({
    695|           issueId: "non-existent",

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[253/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.confirmation.test.ts > Issue Confirmation Workflow (RLS-Enhanced) > Confirmation Status Toggle > should toggle confirmation status from true to false
TypeError: Cannot read properties of undefined (reading 'update')
 ❯ src/server/api/routers/__tests__/issue.confirmation.test.ts:722:30
    720|         mockIssue as any,
    721|       );
    722|       vi.mocked(ctx.db.issue.update).mockResolvedValue(mockIssue as an…
       |                              ^
    723| 
    724|       // Act

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[254/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.confirmation.test.ts > Issue Confirmation Workflow (RLS-Enhanced) > Issue Listing with Confirmation Status > should list issues with confirmation status
TypeError: Cannot read properties of undefined (reading 'findMany')
 ❯ src/server/api/routers/__tests__/issue.confirmation.test.ts:780:30
    778|       ];
    779| 
    780|       vi.mocked(ctx.db.issue.findMany).mockResolvedValue(mockIssues as…
       |                              ^
    781| 
    782|       // Act

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[255/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.confirmation.test.ts > Issue Confirmation Workflow (RLS-Enhanced) > Issue Listing with Confirmation Status > should filter by location when locationId provided
TypeError: Cannot read properties of undefined (reading 'findMany')
 ❯ src/server/api/routers/__tests__/issue.confirmation.test.ts:802:30
    800|       const caller = issueConfirmationRouter.createCaller(ctx);
    801| 
    802|       vi.mocked(ctx.db.issue.findMany).mockResolvedValue([]);
       |                              ^
    803| 
    804|       // Act

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[256/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.confirmation.test.ts > Issue Confirmation Workflow (RLS-Enhanced) > Issue Listing with Confirmation Status > should filter by machine when machineId provided
TypeError: Cannot read properties of undefined (reading 'findMany')
 ❯ src/server/api/routers/__tests__/issue.confirmation.test.ts:825:30
    823|       const caller = issueConfirmationRouter.createCaller(ctx);
    824| 
    825|       vi.mocked(ctx.db.issue.findMany).mockResolvedValue([]);
       |                              ^
    826| 
    827|       // Act

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[257/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.confirmation.test.ts > Issue Confirmation Workflow (RLS-Enhanced) > Confirmation Statistics > should return confirmation statistics
TypeError: Cannot read properties of undefined (reading 'count')
 ❯ src/server/api/routers/__tests__/issue.confirmation.test.ts:850:30
    848|       const caller = issueConfirmationRouter.createCaller(ctx);
    849| 
    850|       vi.mocked(ctx.db.issue.count).mockResolvedValue(100);
       |                              ^
    851| 
    852|       // Act

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[258/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.confirmation.test.ts > Issue Confirmation Workflow (RLS-Enhanced) > Confirmation Statistics > should handle zero issues gracefully
TypeError: Cannot read properties of undefined (reading 'count')
 ❯ src/server/api/routers/__tests__/issue.confirmation.test.ts:869:30
    867|       const caller = issueConfirmationRouter.createCaller(ctx);
    868| 
    869|       vi.mocked(ctx.db.issue.count).mockResolvedValue(0);
       |                              ^
    870| 
    871|       // Act

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[259/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.confirmation.test.ts > Issue Confirmation Workflow (RLS-Enhanced) > Confirmation Statistics > should filter by date range when provided
TypeError: Cannot read properties of undefined (reading 'count')
 ❯ src/server/api/routers/__tests__/issue.confirmation.test.ts:891:30
    889|       const toDate = new Date("2024-12-31");
    890| 
    891|       vi.mocked(ctx.db.issue.count).mockResolvedValue(50);
       |                              ^
    892| 
    893|       // Act

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[260/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.confirmation.test.ts > Issue Confirmation Workflow (RLS-Enhanced) > Confirmation Statistics > should filter by location when locationId provided
TypeError: Cannot read properties of undefined (reading 'count')
 ❯ src/server/api/routers/__tests__/issue.confirmation.test.ts:918:30
    916|       const caller = issueConfirmationRouter.createCaller(ctx);
    917| 
    918|       vi.mocked(ctx.db.issue.count).mockResolvedValue(25);
       |                              ^
    919| 
    920|       // Act

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[261/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.confirmation.test.ts > Issue Confirmation Workflow (RLS-Enhanced) > Permission Requirements > should require issue:create permission for basic form
AssertionError: expected [Function] to throw error including 'Missing required permission: issue:cr…' but got 'Cannot read properties of undefined (…'

Expected: [32m"Missing required permission: issue:create"[39m
Received: [31m"Cannot read properties of undefined (reading 'map')"[39m

 ❯ src/server/api/routers/__tests__/issue.confirmation.test.ts:942:7
    940| 
    941|       // Act & Assert
    942|       await expect(
       |       ^
    943|         caller.create({
    944|           title: "Test Issue",

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[262/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.confirmation.test.ts > Issue Confirmation Workflow (RLS-Enhanced) > Permission Requirements > should require issue:create permission for full form
AssertionError: expected [Function] to throw error including 'Missing required permission: issue:cr…' but got 'Cannot read properties of undefined (…'

Expected: [32m"Missing required permission: issue:create"[39m
Received: [31m"Cannot read properties of undefined (reading 'map')"[39m

 ❯ src/server/api/routers/__tests__/issue.confirmation.test.ts:959:7
    957| 
    958|       // Act & Assert
    959|       await expect(
       |       ^
    960|         caller.create({
    961|           title: "Test Issue",

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[263/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.confirmation.test.ts > Issue Confirmation Workflow (RLS-Enhanced) > Permission Requirements > should not require additional permissions for basic form beyond issue:create
TypeError: Cannot read properties of undefined (reading 'create')
 ❯ src/server/api/routers/__tests__/issue.confirmation.test.ts:988:30
    986|       };
    987| 
    988|       vi.mocked(ctx.db.issue.create).mockResolvedValue(mockIssue as an…
       |                              ^
    989| 
    990|       // Act & Assert

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[264/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.integration.test.ts > Issue Router Integration Tests (PGlite) > Issue Creation with Real Database > should create issue with proper organizational scoping
 FAIL  |node| src/server/api/routers/__tests__/issue.integration.test.ts > Issue Router Integration Tests (PGlite) > Issue Creation with Real Database > should enforce organizational scoping during issue creation
 FAIL  |node| src/server/api/routers/__tests__/issue.integration.test.ts > Issue Router Integration Tests (PGlite) > Issue Querying with Complex Filters > should filter issues by search term with proper scoping
 FAIL  |node| src/server/api/routers/__tests__/issue.integration.test.ts > Issue Router Integration Tests (PGlite) > Issue Querying with Complex Filters > should filter issues by machine with relational data
 FAIL  |node| src/server/api/routers/__tests__/issue.integration.test.ts > Issue Router Integration Tests (PGlite) > Issue Querying with Complex Filters > should return paginated results
 FAIL  |node| src/server/api/routers/__tests__/issue.integration.test.ts > Issue Router Integration Tests (PGlite) > Issue Assignment with Database Operations > should assign issue to user within same organization
 FAIL  |node| src/server/api/routers/__tests__/issue.integration.test.ts > Issue Router Integration Tests (PGlite) > Issue Status Updates with Validation > should update issue status with proper validation
TypeError: Cannot read properties of undefined (reading 'referencedTable')
 ❯ normalizeRelation node_modules/src/relations.ts:571:74
 ❯ PgDialect.buildRelationalQueryWithoutPK node_modules/src/pg-core/dialect.ts:1283:32
 ❯ PgDialect.buildRelationalQueryWithoutPK node_modules/src/pg-core/dialect.ts:1295:32
 ❯ QueryPromise._getQuery node_modules/src/pg-core/query-builders/query.ts:117:23
 ❯ QueryPromise._toSQL node_modules/src/pg-core/query-builders/query.ts:134:22
 ❯ node_modules/src/pg-core/query-builders/query.ts:92:39
 ❯ Object.startActiveSpan node_modules/src/tracing.ts:27:11
 ❯ QueryPromise._prepare node_modules/src/pg-core/query-builders/query.ts:91:17
 ❯ node_modules/src/pg-core/query-builders/query.ts:154:16
 ❯ Object.startActiveSpan node_modules/src/tracing.ts:27:11

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[265/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.test.ts > Issue Router Integration Tests > getById procedure > should retrieve issue by ID with full details
TRPCError: You don't have permission to access this organization
 ❯ src/server/api/trpc.base.ts:355:13
    353| 
    354|     if (!membership) {
    355|       throw new TRPCError({
       |             ^
    356|         code: "FORBIDDEN",
    357|         message: "You don't have permission to access this organizatio…
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ src/server/api/trpc.base.ts:238:22
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ procedure node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:673:20
 ❯ node_modules/@trpc/server/src/unstable-core-do-not-import/router.ts:473:20
 ❯ src/server/api/routers/__tests__/issue.test.ts:169:24
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[266/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.test.ts > Issue Router Integration Tests > getById procedure > should enforce organization isolation
AssertionError: expected [Function] to throw error including 'Issue not found' but got 'You don\'t have permission to access …'

Expected: [32m"Issue not found"[39m
Received: [31m"You don't have permission to access this organization"[39m

 ❯ src/server/api/routers/__tests__/issue.test.ts:214:9
    212| 
    213|         // Primary org user should not be able to access competitor or…
    214|         await expect(
       |         ^
    215|           caller.issue.core.getById({ id: competitorIssue.id }),
    216|         ).rejects.toThrow("Issue not found");
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[267/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.test.ts > Issue Router Integration Tests > getById procedure > should throw error for non-existent issue
AssertionError: expected [Function] to throw error including 'Issue not found' but got 'You don\'t have permission to access …'

Expected: [32m"Issue not found"[39m
Received: [31m"You don't have permission to access this organization"[39m

 ❯ src/server/api/routers/__tests__/issue.test.ts:237:9
    235|         const caller = appRouter.createCaller(ctx);
    236| 
    237|         await expect(
       |         ^
    238|           caller.issue.core.getById({ id: generateTestId("non-existent…
    239|         ).rejects.toThrow("Issue not found");
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[268/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.test.ts > Issue Router Integration Tests > update procedure > should update issue fields successfully
TRPCError: You don't have permission to access this organization
 ❯ src/server/api/trpc.base.ts:355:13
    353| 
    354|     if (!membership) {
    355|       throw new TRPCError({
       |             ^
    356|         code: "FORBIDDEN",
    357|         message: "You don't have permission to access this organizatio…
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ src/server/api/trpc.base.ts:238:22
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ procedure node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:673:20
 ❯ node_modules/@trpc/server/src/unstable-core-do-not-import/router.ts:473:20
 ❯ src/server/api/routers/__tests__/issue.test.ts:263:24
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[269/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.test.ts > Issue Router Integration Tests > update procedure > should enforce organization isolation on updates
AssertionError: expected [Function] to throw error including 'Issue not found' but got 'You don\'t have permission to access …'

Expected: [32m"Issue not found"[39m
Received: [31m"You don't have permission to access this organization"[39m

 ❯ src/server/api/routers/__tests__/issue.test.ts:317:9
    315| 
    316|         // Primary org user should not be able to update competitor or…
    317|         await expect(
       |         ^
    318|           caller.issue.core.update({
    319|             id: competitorIssue.id,
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[270/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.test.ts > Issue Router Integration Tests > updateStatus procedure > should update issue status successfully
TRPCError: You don't have permission to access this organization
 ❯ src/server/api/trpc.base.ts:355:13
    353| 
    354|     if (!membership) {
    355|       throw new TRPCError({
       |             ^
    356|         code: "FORBIDDEN",
    357|         message: "You don't have permission to access this organizatio…
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ src/server/api/trpc.base.ts:238:22
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ procedure node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:673:20
 ❯ node_modules/@trpc/server/src/unstable-core-do-not-import/router.ts:473:20
 ❯ src/server/api/routers/__tests__/issue.test.ts:360:24
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[271/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.test.ts > Issue Router Integration Tests > updateStatus procedure > should validate status belongs to same organization
AssertionError: expected [Function] to throw error including 'Invalid status' but got 'You don\'t have permission to access …'

Expected: [32m"Invalid status"[39m
Received: [31m"You don't have permission to access this organization"[39m

 ❯ src/server/api/routers/__tests__/issue.test.ts:411:9
    409| 
    410|         // Should not be able to use status from different organization
    411|         await expect(
       |         ^
    412|           caller.issue.core.updateStatus({
    413|             id: issue.id,
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[272/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.test.ts > Public Issue Procedures > publicCreate - Anonymous Issue Creation > should allow anonymous users to create issues via QR codes
TRPCError: Machine not found
 ❯ src/server/api/routers/issue.core.ts:103:15
    101| 
    102|       if (!validation.valid) {
    103|         throw new Error(validation.error ?? "Issue creation validation…
       |               ^
    104|       }
    105| 
 ❯ resolveMiddleware node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:571:22
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ src/server/api/trpc.base.ts:238:22
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ procedure node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:673:20
 ❯ node_modules/@trpc/server/src/unstable-core-do-not-import/router.ts:473:20
 ❯ src/server/api/routers/__tests__/issue.test.ts:502:24
 ❯ src/test/helpers/worker-scoped-db.ts:103:22

Caused by: Error: Machine not found
 ❯ src/server/api/routers/issue.core.ts:103:15
 ❯ resolveMiddleware node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:571:22
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ src/server/api/trpc.base.ts:238:22
 ❯ callRecursive node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:633:20
 ❯ procedure node_modules/@trpc/server/src/unstable-core-do-not-import/procedureBuilder.ts:673:20
 ❯ node_modules/@trpc/server/src/unstable-core-do-not-import/router.ts:473:20
 ❯ src/server/api/routers/__tests__/issue.test.ts:502:24
 ❯ src/test/helpers/worker-scoped-db.ts:103:22

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[273/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.test.ts > Public Issue Procedures > publicCreate - Anonymous Issue Creation > should handle missing default status error
AssertionError: expected [Function] to throw error including 'Default issue status not found. Pleas…' but got 'Machine not found'

Expected: [32m"Default issue status not found. Please contact an administrator."[39m
Received: [31m"Machine not found"[39m

 ❯ src/server/api/routers/__tests__/issue.test.ts:642:9
    640|         const caller = appRouter.createCaller(ctx);
    641| 
    642|         await expect(
       |         ^
    643|           caller.issue.core.publicCreate({
    644|             title: "Test Issue",
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[274/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.test.ts > Public Issue Procedures > publicCreate - Anonymous Issue Creation > should handle missing default priority error
ReferenceError: seededData is not defined
 ❯ src/server/api/routers/__tests__/issue.test.ts:664:9
    662|         );
    663| 
    664|         if (!seededData.machine) {
       |         ^
    665|           console.log("Skipping test - no seeded machine available");
    666|           return;
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[275/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.test.ts > Public Issue Procedures > publicCreate - Anonymous Issue Creation > should create minimal issue with only required fields
ReferenceError: seededData is not defined
 ❯ src/server/api/routers/__tests__/issue.test.ts:708:9
    706|         );
    707| 
    708|         if (!seededData.machine || !seededData.status || !seededData.p…
       |         ^
    709|           console.log("Skipping test - insufficient seeded data");
    710|           return;
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[276/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.test.ts > Public Issue Procedures > publicGetAll - Anonymous Issue Viewing > should allow anonymous users to view issues
AssertionError: expected [ { …(11) }, { …(11) }, …(10) ] to have a length of 2 but got 12

[32m- Expected[39m
[31m+ Received[39m

[32m- 2[39m
[31m+ 12[39m

 ❯ src/server/api/routers/__tests__/issue.test.ts:794:24
    792|         const result = await caller.issue.core.publicGetAll();
    793| 
    794|         expect(result).toHaveLength(2);
       |                        ^
    795|         expect(result.some((i) => i.title === "Machine not working")).…
    796|           true,
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[277/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.test.ts > Public Issue Procedures > publicGetAll - Anonymous Issue Viewing > should filter issues by location
ReferenceError: setupPublicTestData is not defined
 ❯ src/server/api/routers/__tests__/issue.test.ts:821:11
    819|       await withIsolatedTest(workerDb, async (db) => {
    820|         const { ctx, organizationId, status, priority, model } =
    821|           await setupPublicTestData(db);
       |           ^
    822| 
    823|         // Create second location
 ❯ src/test/helpers/worker-scoped-db.ts:103:28
 ❯ callback node_modules/src/pglite/session.ts:185:11
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:30

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[278/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.test.ts > Public Issue Procedures > publicGetAll - Anonymous Issue Viewing > should filter issues by machine
ReferenceError: setupPublicTestData is not defined
 ❯ src/server/api/routers/__tests__/issue.test.ts:895:13
    893|           model,
    894|           location,
    895|         } = await setupPublicTestData(db);
       |             ^
    896| 
    897|         // Create second machine
 ❯ src/test/helpers/worker-scoped-db.ts:103:28
 ❯ callback node_modules/src/pglite/session.ts:185:11
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:30

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[279/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.test.ts > Public Issue Procedures > publicGetAll - Anonymous Issue Viewing > should filter issues by status
ReferenceError: setupPublicTestData is not defined
 ❯ src/server/api/routers/__tests__/issue.test.ts:950:11
    948|       await withIsolatedTest(workerDb, async (db) => {
    949|         const { ctx, organizationId, machine, priority } =
    950|           await setupPublicTestData(db);
       |           ^
    951| 
    952|         // Create multiple statuses
 ❯ src/test/helpers/worker-scoped-db.ts:103:28
 ❯ callback node_modules/src/pglite/session.ts:185:11
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:30

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[280/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.test.ts > Public Issue Procedures > publicGetAll - Anonymous Issue Viewing > should filter issues by status category
ReferenceError: setupPublicTestData is not defined
 ❯ src/server/api/routers/__tests__/issue.test.ts:1018:11
    1016|       await withIsolatedTest(workerDb, async (db) => {
    1017|         const { ctx, organizationId, machine, status, priority } =
    1018|           await setupPublicTestData(db);
       |           ^
    1019| 
    1020|         // Create an issue with NEW status category
 ❯ src/test/helpers/worker-scoped-db.ts:103:28
 ❯ callback node_modules/src/pglite/session.ts:185:11
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:30

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[281/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.test.ts > Public Issue Procedures > publicGetAll - Anonymous Issue Viewing > should filter issues by model
ReferenceError: setupPublicTestData is not defined
 ❯ src/server/api/routers/__tests__/issue.test.ts:1045:11
    1043|       await withIsolatedTest(workerDb, async (db) => {
    1044|         const { ctx, organizationId, machine, status, priority, model …
    1045|           await setupPublicTestData(db);
       |           ^
    1046| 
    1047|         // Create an issue linked to the specific model
 ❯ src/test/helpers/worker-scoped-db.ts:103:28
 ❯ callback node_modules/src/pglite/session.ts:185:11
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:30

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[282/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.test.ts > Public Issue Procedures > publicGetAll - Anonymous Issue Viewing > should handle custom limit parameter
ReferenceError: setupPublicTestData is not defined
 ❯ src/server/api/routers/__tests__/issue.test.ts:1072:11
    1070|       await withIsolatedTest(workerDb, async (db) => {
    1071|         const { ctx, organizationId, machine, status, priority } =
    1072|           await setupPublicTestData(db);
       |           ^
    1073| 
    1074|         // Create multiple issues
 ❯ src/test/helpers/worker-scoped-db.ts:103:28
 ❯ callback node_modules/src/pglite/session.ts:185:11
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:30

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[283/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.test.ts > Public Issue Procedures > publicGetAll - Anonymous Issue Viewing > should enforce maximum limit of 100
ReferenceError: setupPublicTestData is not defined
 ❯ src/server/api/routers/__tests__/issue.test.ts:1102:25
    1100|     test("should enforce maximum limit of 100", async ({ workerDb }) =…
    1101|       await withIsolatedTest(workerDb, async (db) => {
    1102|         const { ctx } = await setupPublicTestData(db);
       |                         ^
    1103|         const caller = appRouter.createCaller(ctx);
    1104| 
 ❯ src/test/helpers/worker-scoped-db.ts:103:28
 ❯ callback node_modules/src/pglite/session.ts:185:11
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:30

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[284/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.test.ts > Public Issue Procedures > publicGetAll - Anonymous Issue Viewing > should enforce minimum limit of 1
ReferenceError: setupPublicTestData is not defined
 ❯ src/server/api/routers/__tests__/issue.test.ts:1115:25
    1113|     test("should enforce minimum limit of 1", async ({ workerDb }) => {
    1114|       await withIsolatedTest(workerDb, async (db) => {
    1115|         const { ctx } = await setupPublicTestData(db);
       |                         ^
    1116|         const caller = appRouter.createCaller(ctx);
    1117| 
 ❯ src/test/helpers/worker-scoped-db.ts:103:28
 ❯ callback node_modules/src/pglite/session.ts:185:11
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:30

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[285/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.test.ts > Public Issue Procedures > publicGetAll - Anonymous Issue Viewing > should sort issues by different criteria
ReferenceError: setupPublicTestData is not defined
 ❯ src/server/api/routers/__tests__/issue.test.ts:1129:11
    1127|       await withIsolatedTest(workerDb, async (db) => {
    1128|         const { ctx, organizationId, machine, status, priority } =
    1129|           await setupPublicTestData(db);
       |           ^
    1130| 
    1131|         // Create multiple issues with different timestamps
 ❯ src/test/helpers/worker-scoped-db.ts:103:28
 ❯ callback node_modules/src/pglite/session.ts:185:11
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:30

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[286/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.test.ts > Public Issue Procedures > publicGetAll - Anonymous Issue Viewing > should handle organization not found error
ReferenceError: setupPublicTestData is not defined
 ❯ src/server/api/routers/__tests__/issue.test.ts:1173:25
    1171|     test("should handle organization not found error", async ({ worker…
    1172|       await withIsolatedTest(workerDb, async (db) => {
    1173|         const { ctx } = await setupPublicTestData(db);
       |                         ^
    1174| 
    1175|         // Create context without organization
 ❯ src/test/helpers/worker-scoped-db.ts:103:28
 ❯ callback node_modules/src/pglite/session.ts:185:11
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:30

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[287/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.test.ts > Public Issue Procedures > publicGetAll - Anonymous Issue Viewing > should combine multiple filters
ReferenceError: setupPublicTestData is not defined
 ❯ src/server/api/routers/__tests__/issue.test.ts:1193:11
    1191|       await withIsolatedTest(workerDb, async (db) => {
    1192|         const { ctx, organizationId, location, model, status, priority…
    1193|           await setupPublicTestData(db);
       |           ^
    1194| 
    1195|         // Create another location and status
 ❯ src/test/helpers/worker-scoped-db.ts:103:28
 ❯ callback node_modules/src/pglite/session.ts:185:11
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:30

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[288/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.timeline.router.integration.test.ts > Issue Timeline Router Integration Tests (PGlite) > Timeline Retrieval > should retrieve issue timeline with proper organizational scoping
AssertionError: expected 0 to be greater than 0
 ❯ src/server/api/routers/__tests__/issue.timeline.router.integration.test.ts:91:35
     89|             expect(result).toBeDefined();
     90|             expect(Array.isArray(result)).toBe(true);
     91|             expect(result.length).toBeGreaterThan(0);
       |                                   ^
     92| 
     93|             // Verify the service was called with correct issue ID
 ❯ Module.withRLSSecurityContext src/test/helpers/rls-security-context.ts:45:10
 ❯ src/server/api/routers/__tests__/issue.timeline.router.integration.test.ts:53:9
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[289/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.timeline.router.integration.test.ts > Issue Timeline Router Integration Tests (PGlite) > Timeline Retrieval > should enforce cross-organizational issue access
AssertionError: promise resolved "[]" instead of rejecting

[32m- Expected:[39m 
Error {
  "message": "rejected promise",
}

[31m+ Received:[39m 
[]

 ❯ src/server/api/routers/__tests__/issue.timeline.router.integration.test.ts:190:13
    188|                 issueId: issueId,
    189|               }),
    190|             ).rejects.toThrow("Issue not found or access denied");
       |             ^
    191|           },
    192|         );
 ❯ Module.withRLSSecurityContext src/test/helpers/rls-security-context.ts:45:10
 ❯ src/server/api/routers/__tests__/issue.timeline.router.integration.test.ts:169:9
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[290/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.timeline.router.integration.test.ts > Issue Timeline Router Integration Tests (PGlite) > Timeline Retrieval > should handle timeline service integration
AssertionError: expected "spy" to be called with arguments: [ Array(1) ][90m

Number of calls: [1m0[22m
[39m
 ❯ src/server/api/routers/__tests__/issue.timeline.router.integration.test.ts:329:58
    327|             const mockActivityService =
    328|               testContext.services.createIssueActivityService();
    329|             expect(mockActivityService.getIssueTimeline).toHaveBeenCal…
       |                                                          ^
    330|               issueId,
    331|             );
 ❯ Module.withRLSSecurityContext src/test/helpers/rls-security-context.ts:45:10
 ❯ src/server/api/routers/__tests__/issue.timeline.router.integration.test.ts:198:9
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[291/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.timeline.test.ts > Issue Timeline Router (Unit Tests) > getTimeline > Success Cases > should return timeline data for valid issue
AssertionError: expected "spy" to be called with arguments: [ ObjectContaining{…} ][90m

Number of calls: [1m0[22m
[39m
 ❯ src/server/api/routers/__tests__/issue.timeline.test.ts:172:55
    170| 
    171|         // Verify issue lookup with organizational scoping
    172|         expect(mockContext.db.query.issues.findFirst).toHaveBeenCalled…
       |                                                       ^
    173|           expect.objectContaining({
    174|             columns: {

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[292/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.timeline.test.ts > Issue Timeline Router (Unit Tests) > getTimeline > Error Cases > should throw NOT_FOUND when issue does not exist
AssertionError: promise resolved "undefined" instead of rejecting

[32m- Expected:[39m 
Error {
  "message": "rejected promise",
}

[31m+ Received:[39m 
undefined

 ❯ src/server/api/routers/__tests__/issue.timeline.test.ts:296:52
    294|         );
    295| 
    296|         await expect(caller.getTimeline(validInput)).rejects.toThrow(
       |                                                    ^
    297|           expect.objectContaining({
    298|             code: "NOT_FOUND",

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[293/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.timeline.test.ts > Issue Timeline Router (Unit Tests) > getTimeline > Error Cases > should throw NOT_FOUND when issue belongs to different organization
AssertionError: promise resolved "undefined" instead of rejecting

[32m- Expected:[39m 
Error {
  "message": "rejected promise",
}

[31m+ Received:[39m 
undefined

 ❯ src/server/api/routers/__tests__/issue.timeline.test.ts:320:9
    318|         await expect(
    319|           caller.getTimeline({ issueId: "other-org-issue" }),
    320|         ).rejects.toThrow(
       |         ^
    321|           expect.objectContaining({
    322|             code: "NOT_FOUND",

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[294/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.timeline.test.ts > Issue Timeline Router (Unit Tests) > getTimeline > Error Cases > should handle service method failures gracefully
AssertionError: expected "spy" to be called 1 times, but got 0 times
 ❯ src/server/api/routers/__tests__/issue.timeline.test.ts:367:55
    365| 
    366|         // Verify issue lookup succeeded
    367|         expect(mockContext.db.query.issues.findFirst).toHaveBeenCalled…
       |                                                       ^
    368| 
    369|         // Verify service was called despite eventual failure

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[295/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.timeline.test.ts > Issue Timeline Router (Unit Tests) > getTimeline > Error Cases > should handle database lookup failures
AssertionError: promise resolved "undefined" instead of rejecting

[32m- Expected:[39m 
Error {
  "message": "rejected promise",
}

[31m+ Received:[39m 
undefined

 ❯ src/server/api/routers/__tests__/issue.timeline.test.ts:384:52
    382|         );
    383| 
    384|         await expect(caller.getTimeline(validInput)).rejects.toThrow(
       |                                                    ^
    385|           "Database connection error",
    386|         );

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[296/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.timeline.test.ts > Issue Timeline Router (Unit Tests) > getTimeline > Input Validation > should validate required issueId parameter
AssertionError: promise resolved "undefined" instead of rejecting

[32m- Expected:[39m 
Error {
  "message": "rejected promise",
}

[31m+ Received:[39m 
undefined

 ❯ src/server/api/routers/__tests__/issue.timeline.test.ts:398:57
    396|       it("should validate required issueId parameter", async () => {
    397|         await expect(caller.getTimeline({} as any)).rejects.toThrow();
    398|         await expect(caller.getTimeline({ issueId: "" })).rejects.toTh…
       |                                                         ^
    399|         await expect(
    400|           caller.getTimeline({ issueId: null } as any),

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[297/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/issue.timeline.test.ts > Issue Timeline Router (Unit Tests) > getTimeline > Service Integration > should handle service creation failures
AssertionError: expected "spy" to be called 1 times, but got 0 times
 ❯ src/server/api/routers/__tests__/issue.timeline.test.ts:590:55
    588| 
    589|         // Verify issue lookup succeeded before service creation failu…
    590|         expect(mockContext.db.query.issues.findFirst).toHaveBeenCalled…
       |                                                       ^
    591|       });
    592|     });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[298/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/model.core.test.ts > Model Router Integration Tests (Simplified Single-Table Architecture) > Model Retrieval Operations > should return models with machine counts using real database operations
TypeError: getSeededTestData is not a function
 ❯ setupTestData src/server/api/routers/__tests__/model.core.test.ts:77:30
     75|     // Use pre-seeded data instead of creating duplicates
     76|     const organizationId = SEED_TEST_IDS.ORGANIZATIONS.primary;
     77|     const seededData = await getSeededTestData(db, organizationId);
       |                              ^
     78| 
     79|     if (!seededData.adminRole || !seededData.user) {
 ❯ src/server/api/routers/__tests__/model.core.test.ts:231:39
 ❯ src/test/helpers/worker-scoped-db.ts:103:28
 ❯ callback node_modules/src/pglite/session.ts:185:11
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:30

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[299/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/model.core.test.ts > Model Router Integration Tests (Simplified Single-Table Architecture) > Model Retrieval Operations > should return empty array when no models exist in organization
Error: Failed query: insert into "organizations" ("id", "name", "subdomain", "logoUrl", "createdAt", "updatedAt") values ($1, $2, $3, default, $4, $5) returning "id", "name", "subdomain", "logoUrl", "createdAt", "updatedAt"
params: test-org-competitor,Empty Organization,empty,2025-08-22T23:39:00.597Z,2025-08-22T23:39:00.597Z
 ❯ PglitePreparedQuery.queryWithCache node_modules/src/pg-core/session.ts:73:11
 ❯ PglitePreparedQuery.execute node_modules/src/pglite/session.ts:95:18
 ❯ src/server/api/routers/__tests__/model.core.test.ts:274:24
    272|         const organizationId = SEED_TEST_IDS.ORGANIZATIONS.competitor;
    273| 
    274|         const [_org] = await db
       |                        ^
    275|           .insert(schema.organizations)
    276|           .values({
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

Caused by: error: duplicate key value violates unique constraint "organizations_pkey"
 ❯ ye.Ve node_modules/@electric-sql/pg-protocol/src/parser.ts:432:11
 ❯ ye.nt node_modules/@electric-sql/pg-protocol/src/parser.ts:210:16
 ❯ ye.parse node_modules/@electric-sql/pg-protocol/src/parser.ts:102:25
 ❯ ue.execProtocol node_modules/@electric-sql/pglite/src/pglite.ts:700:26
 ❯ ue.y node_modules/@electric-sql/pglite/src/base.ts:141:12
 ❯ node_modules/@electric-sql/pglite/src/base.ts:278:13

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { length: 222, severity: 'ERROR', code: '23505', detail: 'Key (id)=(test-org-competitor) already exists.', hint: undefined, position: undefined, internalPosition: undefined, internalQuery: undefined, where: undefined, schema: 'public', table: 'organizations', dataType: undefined, constraint: 'organizations_pkey', file: 'nbtinsert.c', routine: '_bt_check_unique', query: 'insert into "organizations" ("id", "name", "subdomain", "logoUrl", "createdAt", "updatedAt") values ($1, $2, $3, default, $4, $5) returning "id", "name", "subdomain", "logoUrl", "createdAt", "updatedAt"', params: [ 'test-org-competitor', 'Empty Organization', 'empty', '2025-08-22T23:39:00.597Z', '2025-08-22T23:39:00.597Z' ], queryOptions: { rowMode: 'array', parsers: { '1082': 'Function<1082>', '1114': 'Function<1114>', '1115': 'Function<1115>', '1182': 'Function<1182>', '1184': 'Function<1184>', '1185': 'Function<1185>', '1186': 'Function<1186>', '1187': 'Function<1187>', '1231': 'Function<1231>' } } }
⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[300/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/model.core.test.ts > Model Router Integration Tests (Simplified Single-Table Architecture) > Model Retrieval Operations > should enforce organizational scoping and isolation
TypeError: getSeededTestData is not a function
 ❯ setupTestData src/server/api/routers/__tests__/model.core.test.ts:77:30
     75|     // Use pre-seeded data instead of creating duplicates
     76|     const organizationId = SEED_TEST_IDS.ORGANIZATIONS.primary;
     77|     const seededData = await getSeededTestData(db, organizationId);
       |                              ^
     78| 
     79|     if (!seededData.adminRole || !seededData.user) {
 ❯ src/server/api/routers/__tests__/model.core.test.ts:341:31
 ❯ src/test/helpers/worker-scoped-db.ts:103:28
 ❯ callback node_modules/src/pglite/session.ts:185:11
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:30

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[301/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/model.core.test.ts > Model Router Integration Tests (Simplified Single-Table Architecture) > Model Individual Retrieval > should return model by ID with real machine count
TypeError: getSeededTestData is not a function
 ❯ setupTestData src/server/api/routers/__tests__/model.core.test.ts:77:30
     75|     // Use pre-seeded data instead of creating duplicates
     76|     const organizationId = SEED_TEST_IDS.ORGANIZATIONS.primary;
     77|     const seededData = await getSeededTestData(db, organizationId);
       |                              ^
     78| 
     79|     if (!seededData.adminRole || !seededData.user) {
 ❯ src/server/api/routers/__tests__/model.core.test.ts:387:39
 ❯ src/test/helpers/worker-scoped-db.ts:103:28
 ❯ callback node_modules/src/pglite/session.ts:185:11
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:30

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[302/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/model.core.test.ts > Model Router Integration Tests (Simplified Single-Table Architecture) > Model Individual Retrieval > should throw NOT_FOUND when model doesn't exist
TypeError: getSeededTestData is not a function
 ❯ setupTestData src/server/api/routers/__tests__/model.core.test.ts:77:30
     75|     // Use pre-seeded data instead of creating duplicates
     76|     const organizationId = SEED_TEST_IDS.ORGANIZATIONS.primary;
     77|     const seededData = await getSeededTestData(db, organizationId);
       |                              ^
     78| 
     79|     if (!seededData.adminRole || !seededData.user) {
 ❯ src/server/api/routers/__tests__/model.core.test.ts:411:31
 ❯ src/test/helpers/worker-scoped-db.ts:103:28
 ❯ callback node_modules/src/pglite/session.ts:185:11
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:30

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[303/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/model.core.test.ts > Model Router Integration Tests (Simplified Single-Table Architecture) > Model Individual Retrieval > should throw NOT_FOUND when model exists but not in organization
TypeError: getSeededTestData is not a function
 ❯ setupTestData src/server/api/routers/__tests__/model.core.test.ts:77:30
     75|     // Use pre-seeded data instead of creating duplicates
     76|     const organizationId = SEED_TEST_IDS.ORGANIZATIONS.primary;
     77|     const seededData = await getSeededTestData(db, organizationId);
       |                              ^
     78| 
     79|     if (!seededData.adminRole || !seededData.user) {
 ❯ src/server/api/routers/__tests__/model.core.test.ts:428:31
 ❯ src/test/helpers/worker-scoped-db.ts:103:28
 ❯ callback node_modules/src/pglite/session.ts:185:11
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:30

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[304/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/model.core.test.ts > Model Router Integration Tests (Simplified Single-Table Architecture) > Model Individual Retrieval > should include accurate machine count in response
TypeError: getSeededTestData is not a function
 ❯ setupTestData src/server/api/routers/__tests__/model.core.test.ts:77:30
     75|     // Use pre-seeded data instead of creating duplicates
     76|     const organizationId = SEED_TEST_IDS.ORGANIZATIONS.primary;
     77|     const seededData = await getSeededTestData(db, organizationId);
       |                              ^
     78| 
     79|     if (!seededData.adminRole || !seededData.user) {
 ❯ src/server/api/routers/__tests__/model.core.test.ts:472:17
 ❯ src/test/helpers/worker-scoped-db.ts:103:28
 ❯ callback node_modules/src/pglite/session.ts:185:11
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:30

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[305/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/model.core.test.ts > Model Router Integration Tests (Simplified Single-Table Architecture) > Cross-Organizational Security Testing > should enforce organizational boundaries across all operations
TypeError: getSeededTestData is not a function
 ❯ setupTestData src/server/api/routers/__tests__/model.core.test.ts:77:30
     75|     // Use pre-seeded data instead of creating duplicates
     76|     const organizationId = SEED_TEST_IDS.ORGANIZATIONS.primary;
     77|     const seededData = await getSeededTestData(db, organizationId);
       |                              ^
     78| 
     79|     if (!seededData.adminRole || !seededData.user) {
 ❯ src/server/api/routers/__tests__/model.core.test.ts:518:48
 ❯ src/test/helpers/worker-scoped-db.ts:103:28
 ❯ callback node_modules/src/pglite/session.ts:185:11
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:30

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[306/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/model.core.test.ts > Model Router Integration Tests (Simplified Single-Table Architecture) > Cross-Organizational Security Testing > should maintain data integrity across organizations
TypeError: getSeededTestData is not a function
 ❯ setupTestData src/server/api/routers/__tests__/model.core.test.ts:77:30
     75|     // Use pre-seeded data instead of creating duplicates
     76|     const organizationId = SEED_TEST_IDS.ORGANIZATIONS.primary;
     77|     const seededData = await getSeededTestData(db, organizationId);
       |                              ^
     78| 
     79|     if (!seededData.adminRole || !seededData.user) {
 ❯ src/server/api/routers/__tests__/model.core.test.ts:579:64
 ❯ src/test/helpers/worker-scoped-db.ts:103:28
 ❯ callback node_modules/src/pglite/session.ts:185:11
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:30

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[307/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/model.core.test.ts > Model Router Integration Tests (Simplified Single-Table Architecture) > Real Database Operations & Performance > should perform accurate machine counting with complex relationships
TypeError: getSeededTestData is not a function
 ❯ setupTestData src/server/api/routers/__tests__/model.core.test.ts:77:30
     75|     // Use pre-seeded data instead of creating duplicates
     76|     const organizationId = SEED_TEST_IDS.ORGANIZATIONS.primary;
     77|     const seededData = await getSeededTestData(db, organizationId);
       |                              ^
     78| 
     79|     if (!seededData.adminRole || !seededData.user) {
 ❯ src/server/api/routers/__tests__/model.core.test.ts:658:17
 ❯ src/test/helpers/worker-scoped-db.ts:103:28
 ❯ callback node_modules/src/pglite/session.ts:185:11
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:30

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[308/373]⎯

 FAIL  |node| src/server/api/routers/__tests__/model.core.test.ts > Model Router Integration Tests (Simplified Single-Table Architecture) > Real Database Operations & Performance > should handle database errors gracefully with real operations
TypeError: getSeededTestData is not a function
 ❯ setupTestData src/server/api/routers/__tests__/model.core.test.ts:77:30
     75|     // Use pre-seeded data instead of creating duplicates
     76|     const organizationId = SEED_TEST_IDS.ORGANIZATIONS.primary;
     77|     const seededData = await getSeededTestData(db, organizationId);
       |                              ^
     78| 
     79|     if (!seededData.adminRole || !seededData.user) {
 ❯ src/server/api/routers/__tests__/model.core.test.ts:709:31
 ❯ src/test/helpers/worker-scoped-db.ts:103:28
 ❯ callback node_modules/src/pglite/session.ts:185:11
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:30

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[309/373]⎯

 FAIL  |node| src/server/api/routers/utils/__tests__/commentService.integration.test.ts > Comment Service Integration (tRPC) > Comment CRUD Operations > should create comment through tRPC
TypeError: getSeededTestData is not a function
 ❯ createTestContext src/server/api/routers/utils/__tests__/commentService.integration.test.ts:74:30
     72|   async function createTestContext(db: TestDatabase, organizationId: s…
     73|     // Use seeded data infrastructure as foundation
     74|     const seededData = await getSeededTestData(db, organizationId);
       |                              ^
     75| 
     76|     // Create standardized TRPC context using the helper if user data …
 ❯ src/server/api/routers/utils/__tests__/commentService.integration.test.ts:161:44
 ❯ src/test/helpers/worker-scoped-db.ts:103:28
 ❯ callback node_modules/src/pglite/session.ts:185:11
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:30

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[310/373]⎯

 FAIL  |node| src/server/api/routers/utils/__tests__/commentService.integration.test.ts > Comment Service Integration (tRPC) > Comment CRUD Operations > should get comments for issue
TypeError: getSeededTestData is not a function
 ❯ createTestContext src/server/api/routers/utils/__tests__/commentService.integration.test.ts:74:30
     72|   async function createTestContext(db: TestDatabase, organizationId: s…
     73|     // Use seeded data infrastructure as foundation
     74|     const seededData = await getSeededTestData(db, organizationId);
       |                              ^
     75| 
     76|     // Create standardized TRPC context using the helper if user data …
 ❯ src/server/api/routers/utils/__tests__/commentService.integration.test.ts:192:44
 ❯ src/test/helpers/worker-scoped-db.ts:103:28
 ❯ callback node_modules/src/pglite/session.ts:185:11
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:30

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[311/373]⎯

 FAIL  |node| src/server/api/routers/utils/__tests__/commentService.integration.test.ts > Comment Service Integration (tRPC) > Soft Delete Functionality > should soft delete comment successfully
TypeError: getSeededTestData is not a function
 ❯ createTestContext src/server/api/routers/utils/__tests__/commentService.integration.test.ts:74:30
     72|   async function createTestContext(db: TestDatabase, organizationId: s…
     73|     // Use seeded data infrastructure as foundation
     74|     const seededData = await getSeededTestData(db, organizationId);
       |                              ^
     75| 
     76|     // Create standardized TRPC context using the helper if user data …
 ❯ src/server/api/routers/utils/__tests__/commentService.integration.test.ts:220:44
 ❯ src/test/helpers/worker-scoped-db.ts:103:28
 ❯ callback node_modules/src/pglite/session.ts:185:11
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:30

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[312/373]⎯

 FAIL  |node| src/server/api/routers/utils/__tests__/commentService.integration.test.ts > Comment Service Integration (tRPC) > Soft Delete Functionality > should handle non-existent comment gracefully
TypeError: getSeededTestData is not a function
 ❯ createTestContext src/server/api/routers/utils/__tests__/commentService.integration.test.ts:74:30
     72|   async function createTestContext(db: TestDatabase, organizationId: s…
     73|     // Use seeded data infrastructure as foundation
     74|     const seededData = await getSeededTestData(db, organizationId);
       |                              ^
     75| 
     76|     // Create standardized TRPC context using the helper if user data …
 ❯ src/server/api/routers/utils/__tests__/commentService.integration.test.ts:244:34
 ❯ src/test/helpers/worker-scoped-db.ts:103:28
 ❯ callback node_modules/src/pglite/session.ts:185:11
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:30

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[313/373]⎯

 FAIL  |node| src/server/api/routers/utils/__tests__/commentService.integration.test.ts > Comment Service Integration (tRPC) > Soft Delete Functionality > should enforce organizational boundaries
TypeError: getSeededTestData is not a function
 ❯ createTestContext src/server/api/routers/utils/__tests__/commentService.integration.test.ts:74:30
     72|   async function createTestContext(db: TestDatabase, organizationId: s…
     73|     // Use seeded data infrastructure as foundation
     74|     const seededData = await getSeededTestData(db, organizationId);
       |                              ^
     75| 
     76|     // Create standardized TRPC context using the helper if user data …
 ❯ src/server/api/routers/utils/__tests__/commentService.integration.test.ts:257:36
 ❯ src/test/helpers/worker-scoped-db.ts:103:28
 ❯ callback node_modules/src/pglite/session.ts:185:11
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:30

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[314/373]⎯

 FAIL  |node| src/server/api/routers/utils/__tests__/commentService.integration.test.ts > Comment Service Integration (tRPC) > Admin Functions > should get deleted comments (admin)
TypeError: getSeededTestData is not a function
 ❯ createTestContext src/server/api/routers/utils/__tests__/commentService.integration.test.ts:74:30
     72|   async function createTestContext(db: TestDatabase, organizationId: s…
     73|     // Use seeded data infrastructure as foundation
     74|     const seededData = await getSeededTestData(db, organizationId);
       |                              ^
     75| 
     76|     // Create standardized TRPC context using the helper if user data …
 ❯ src/server/api/routers/utils/__tests__/commentService.integration.test.ts:310:44
 ❯ src/test/helpers/worker-scoped-db.ts:103:28
 ❯ callback node_modules/src/pglite/session.ts:185:11
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:30

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[315/373]⎯

 FAIL  |node| src/server/api/routers/utils/__tests__/commentService.integration.test.ts > Comment Service Integration (tRPC) > Admin Functions > should restore deleted comment (admin)
TypeError: getSeededTestData is not a function
 ❯ createTestContext src/server/api/routers/utils/__tests__/commentService.integration.test.ts:74:30
     72|   async function createTestContext(db: TestDatabase, organizationId: s…
     73|     // Use seeded data infrastructure as foundation
     74|     const seededData = await getSeededTestData(db, organizationId);
       |                              ^
     75| 
     76|     // Create standardized TRPC context using the helper if user data …
 ❯ src/server/api/routers/utils/__tests__/commentService.integration.test.ts:348:44
 ❯ src/test/helpers/worker-scoped-db.ts:103:28
 ❯ callback node_modules/src/pglite/session.ts:185:11
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:30

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[316/373]⎯

 FAIL  |node| src/server/api/routers/utils/__tests__/commentService.integration.test.ts > Comment Service Integration (tRPC) > Admin Functions > should get cleanup statistics
TypeError: getSeededTestData is not a function
 ❯ createTestContext src/server/api/routers/utils/__tests__/commentService.integration.test.ts:74:30
     72|   async function createTestContext(db: TestDatabase, organizationId: s…
     73|     // Use seeded data infrastructure as foundation
     74|     const seededData = await getSeededTestData(db, organizationId);
       |                              ^
     75| 
     76|     // Create standardized TRPC context using the helper if user data …
 ❯ src/server/api/routers/utils/__tests__/commentService.integration.test.ts:386:44
 ❯ src/test/helpers/worker-scoped-db.ts:103:28
 ❯ callback node_modules/src/pglite/session.ts:185:11
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:30

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[317/373]⎯

 FAIL  |node| src/server/api/routers/utils/__tests__/commentService.integration.test.ts > Comment Service Integration (tRPC) > Complex Integration Scenarios > should handle full comment lifecycle
TypeError: getSeededTestData is not a function
 ❯ createTestContext src/server/api/routers/utils/__tests__/commentService.integration.test.ts:74:30
     72|   async function createTestContext(db: TestDatabase, organizationId: s…
     73|     // Use seeded data infrastructure as foundation
     74|     const seededData = await getSeededTestData(db, organizationId);
       |                              ^
     75| 
     76|     // Create standardized TRPC context using the helper if user data …
 ❯ src/server/api/routers/utils/__tests__/commentService.integration.test.ts:436:44
 ❯ src/test/helpers/worker-scoped-db.ts:103:28
 ❯ callback node_modules/src/pglite/session.ts:185:11
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:30

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[318/373]⎯

 FAIL  |node| src/server/api/routers/utils/__tests__/commentService.integration.test.ts > Comment Service Integration (tRPC) > Complex Integration Scenarios > should maintain organizational scoping across operations
TypeError: getSeededTestData is not a function
 ❯ createTestContext src/server/api/routers/utils/__tests__/commentService.integration.test.ts:74:30
     72|   async function createTestContext(db: TestDatabase, organizationId: s…
     73|     // Use seeded data infrastructure as foundation
     74|     const seededData = await getSeededTestData(db, organizationId);
       |                              ^
     75| 
     76|     // Create standardized TRPC context using the helper if user data …
 ❯ src/server/api/routers/utils/__tests__/commentService.integration.test.ts:492:44
 ❯ src/test/helpers/worker-scoped-db.ts:103:28
 ❯ callback node_modules/src/pglite/session.ts:185:11
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:30

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[319/373]⎯

⎯⎯⎯⎯⎯⎯ Unhandled Errors ⎯⎯⎯⎯⎯⎯

Vitest caught 1 unhandled error during the test run.
This might cause false positive tests. Resolve unhandled errors to make sure your tests are not affected.

⎯⎯⎯⎯ Unhandled Rejection ⎯⎯⎯⎯⎯
Error: Missing seeded test users
 ❯ setupTestData src/integration-tests/machine.owner.integration.test.ts:93:13
 ❯ processTicksAndRejections node:internal/process/task_queues:105:5
 ❯ src/integration-tests/machine.owner.integration.test.ts:267:56
 ❯ src/test/helpers/worker-scoped-db.ts:103:22
 ❯ node_modules/@electric-sql/pglite/src/base.ts:476:24

This error originated in "src/integration-tests/machine.owner.integration.test.ts" test file. It doesn't mean the error was thrown inside the file itself, but while it was running.
⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯


 Test Files  37 failed | 49 passed (86)
      Tests  371 failed | 1375 passed | 19 skipped (1765)
     Errors  1 error
   Start at  18:38:49
   Duration  23.26s (transform 2.24s, setup 1.44s, collect 31.45s, tests 90.09s, environment 3.13s, prepare 4.18s)

