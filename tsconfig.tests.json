{
  // Relaxed TypeScript configuration for test files
  // Allows pragmatic testing patterns that conflict with strict production rules:
  // - Mock objects with partial interfaces
  // - Dynamic test data generation
  // - Framework-specific patterns (Vitest globals)
  // - any types for complex mock scenarios
  "extends": "./tsconfig.base.json",
  "compilerOptions": {
    /* Relaxed settings for pragmatic testing */
    "strict": false,
    "strictNullChecks": false,
    "exactOptionalPropertyTypes": false,
    "noUncheckedIndexedAccess": false,
    /* Allow any types in tests for mocking flexibility */
    "noImplicitAny": false,
    /* Allow JavaScript files and improve performance */
    "allowJs": true,
    "skipLibCheck": true,
    /* Keep some basic safety */
    "noImplicitReturns": true,
    "noFallthroughCasesInSwitch": true,
    /* Relaxed import syntax for test frameworks */
    "verbatimModuleSyntax": false,
    /* Test framework type definitions */
    "types": ["vitest/globals", "node"]
  },
  "include": [
    "src/**/*.test.ts",
    "src/**/*.test.tsx",
    "src/**/*.spec.ts",
    "src/**/*.spec.tsx",
    "src/**/__tests__/**/*.ts",
    "src/**/__tests__/**/*.tsx",
    "src/integration-tests/**/*.ts",
    "src/integration-tests/**/*.tsx",
    "e2e/**/*.ts",
    "e2e/**/*.tsx",
    "src/test/setup/**/*.ts",
    "src/test/examples/**/*.ts",
    "src/test/helpers/**/*.ts",
    "src/test/**/*.ts"
  ],
  "exclude": [
    "src/test/archived-templates/**/*",
    "src/test/templates/**/*",
    "src/**/*.template.ts"
  ]
}
