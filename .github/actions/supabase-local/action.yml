name: Supabase Local Stack
description: Setup Node, install deps, setup Supabase CLI, start local stack, wait for health, and export env

inputs:
  node-version:
    description: Node.js version
    default: '24'
  cli-version:
    description: Supabase CLI version spec (e.g., latest)
    default: 'latest'
  exclude:
    description: Comma-separated services to exclude with -x
    default: ''
  wait_url:
    description: URL to check for health
    default: 'http://localhost:54321/health'
  wait_attempts:
    description: Number of attempts to wait for health
    default: '30'
  wait_sleep_seconds:
    description: Seconds to sleep between attempts
    default: '2'

runs:
  using: composite
  steps:
    - name: Install PostgreSQL Client
      shell: bash
      run: |
        if ! command -v psql >/dev/null 2>&1; then
          echo "Installing PostgreSQL client..."
          sudo apt-get update
          sudo apt-get install -y postgresql-client-17 >/dev/null
        else
          echo "psql already available"
        fi

    - name: Setup Node.js
      uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
      with:
        node-version: ${{ inputs.node-version }}
        cache: npm

    - name: Install dependencies
      shell: bash
      run: npm ci

    - name: Setup Supabase CLI
      uses: supabase/setup-cli@b60b5899c73b63a2d2d651b1e90db8d4c9392f51 # v1.6.0
      with:
        version: ${{ inputs.cli-version }}

    - name: Start Supabase Local Stack
      shell: bash
      run: |
        set -e
        echo "🚀 Starting local Supabase stack..."
        if [ -n "${{ inputs.exclude }}" ]; then
          supabase start -x "${{ inputs.exclude }}"
        else
          supabase start
        fi
        echo "⏳ Waiting for Supabase services to be ready..."
        for i in $(seq 1 ${{ inputs.wait_attempts }}); do
          if curl -s --fail "${{ inputs.wait_url }}" > /dev/null 2>&1; then
            echo "✅ Supabase API server is ready!"
            break
          fi
          echo "🔄 Services not ready yet, waiting... (attempt $i/${{ inputs.wait_attempts }})"
          sleep ${{ inputs.wait_sleep_seconds }}
        done

    - name: Export Supabase Env
      shell: bash
      run: |
        echo "🔧 Exporting Supabase environment variables..."
        supabase status -o env >> "$GITHUB_ENV"
        supabase status
