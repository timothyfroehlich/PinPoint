{
  "id": "00000000-0000-0000-0000-000000000000",
  "prevId": "",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.accounts": {
      "name": "accounts",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "type": {
          "name": "type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "provider": {
          "name": "provider",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "provider_account_id": {
          "name": "provider_account_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "refresh_token": {
          "name": "refresh_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "access_token": {
          "name": "access_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "token_type": {
          "name": "token_type",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "scope": {
          "name": "scope",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "id_token": {
          "name": "id_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "session_state": {
          "name": "session_state",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.sessions": {
      "name": "sessions",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "session_token": {
          "name": "session_token",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "expires": {
          "name": "expires",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "sessions_session_token_unique": {
          "columns": [
            "session_token"
          ],
          "nullsNotDistinct": false,
          "name": "sessions_session_token_unique"
        }
      },
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.verification_tokens": {
      "name": "verification_tokens",
      "schema": "",
      "columns": {
        "identifier": {
          "name": "identifier",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "token": {
          "name": "token",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "expires": {
          "name": "expires",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "verification_tokens_token_unique": {
          "columns": [
            "token"
          ],
          "nullsNotDistinct": false,
          "name": "verification_tokens_token_unique"
        }
      },
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.users": {
      "name": "users",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "email_verified": {
          "name": "email_verified",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "image": {
          "name": "image",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "bio": {
          "name": "bio",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "profile_picture": {
          "name": "profile_picture",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "email_notifications_enabled": {
          "name": "email_notifications_enabled",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "push_notifications_enabled": {
          "name": "push_notifications_enabled",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "notification_frequency": {
          "name": "notification_frequency",
          "type": "notification_frequency",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'IMMEDIATE'"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "users_email_unique": {
          "columns": [
            "email"
          ],
          "nullsNotDistinct": false,
          "name": "users_email_unique"
        }
      },
      "checkConstraints": {},
      "policies": {
        "users_self_access": {
          "name": "users_self_access",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "withCheck": "(id = (auth.uid())::text)",
          "using": "(id = (auth.uid())::text)"
        },
        "users_no_anon_access": {
          "name": "users_no_anon_access",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "anon"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.models": {
      "name": "models",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "organization_id": {
          "name": "organization_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "manufacturer": {
          "name": "manufacturer",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "year": {
          "name": "year",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "is_custom": {
          "name": "is_custom",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "ipdb_id": {
          "name": "ipdb_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "opdb_id": {
          "name": "opdb_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "machine_type": {
          "name": "machine_type",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "machine_display": {
          "name": "machine_display",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "ipdb_link": {
          "name": "ipdb_link",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "opdb_img_url": {
          "name": "opdb_img_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "kineticist_url": {
          "name": "kineticist_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "models_ipdb_id_unique": {
          "columns": [
            "ipdb_id"
          ],
          "nullsNotDistinct": false,
          "name": "models_ipdb_id_unique"
        },
        "models_opdb_id_unique": {
          "columns": [
            "opdb_id"
          ],
          "nullsNotDistinct": false,
          "name": "models_opdb_id_unique"
        }
      },
      "checkConstraints": {},
      "policies": {
        "models_global_read": {
          "name": "models_global_read",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "anon",
            "authenticated"
          ],
          "using": "true"
        }
      },
      "isRLSEnabled": false
    },
    "public.invitations": {
      "name": "invitations",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "organization_id": {
          "name": "organization_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "role_id": {
          "name": "role_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "token": {
          "name": "token",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "invited_by": {
          "name": "invited_by",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'pending'"
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "invitations_org_email_idx": {
          "name": "invitations_org_email_idx",
          "columns": [
            {
              "expression": "organization_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            },
            {
              "expression": "email",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "invitations_organization_id_idx": {
          "name": "invitations_organization_id_idx",
          "columns": [
            {
              "expression": "organization_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "invitations_token_idx": {
          "name": "invitations_token_idx",
          "columns": [
            {
              "expression": "token",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "invitations_organization_id_organizations_id_fk": {
          "name": "invitations_organization_id_organizations_id_fk",
          "tableFrom": "invitations",
          "tableTo": "organizations",
          "schemaTo": "public",
          "columnsFrom": [
            "organization_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "invitations_role_id_roles_id_fk": {
          "name": "invitations_role_id_roles_id_fk",
          "tableFrom": "invitations",
          "tableTo": "roles",
          "schemaTo": "public",
          "columnsFrom": [
            "role_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "invitations_token_unique": {
          "columns": [
            "token"
          ],
          "nullsNotDistinct": false,
          "name": "invitations_token_unique"
        }
      },
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.permissions": {
      "name": "permissions",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "permissions_name_unique": {
          "columns": [
            "name"
          ],
          "nullsNotDistinct": false,
          "name": "permissions_name_unique"
        }
      },
      "checkConstraints": {},
      "policies": {
        "permissions_global_read": {
          "name": "permissions_global_read",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "true"
        }
      },
      "isRLSEnabled": false
    },
    "public.activity_log": {
      "name": "activity_log",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "organization_id": {
          "name": "organization_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "action": {
          "name": "action",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "entity_type": {
          "name": "entity_type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "entity_id": {
          "name": "entity_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "details": {
          "name": "details",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "ip_address": {
          "name": "ip_address",
          "type": "inet",
          "primaryKey": false,
          "notNull": false
        },
        "user_agent": {
          "name": "user_agent",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "severity": {
          "name": "severity",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'info'"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "activity_log_action_idx": {
          "name": "activity_log_action_idx",
          "columns": [
            {
              "expression": "action",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "activity_log_entity_idx": {
          "name": "activity_log_entity_idx",
          "columns": [
            {
              "expression": "entity_type",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            },
            {
              "expression": "entity_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "activity_log_org_time_idx": {
          "name": "activity_log_org_time_idx",
          "columns": [
            {
              "expression": "organization_id",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamp_ops",
              "isExpression": false
            },
            {
              "expression": "created_at",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamp_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "activity_log_user_id_idx": {
          "name": "activity_log_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "activity_log_organization_id_organizations_id_fk": {
          "name": "activity_log_organization_id_organizations_id_fk",
          "tableFrom": "activity_log",
          "tableTo": "organizations",
          "schemaTo": "public",
          "columnsFrom": [
            "organization_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.role_permissions": {
      "name": "role_permissions",
      "schema": "",
      "columns": {
        "role_id": {
          "name": "role_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "permission_id": {
          "name": "permission_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "role_permissions_permission_id_idx": {
          "name": "role_permissions_permission_id_idx",
          "columns": [
            {
              "expression": "permission_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "role_permissions_role_id_idx": {
          "name": "role_permissions_role_id_idx",
          "columns": [
            {
              "expression": "role_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "role_permissions_role_id_roles_id_fk": {
          "name": "role_permissions_role_id_roles_id_fk",
          "tableFrom": "role_permissions",
          "tableTo": "roles",
          "schemaTo": "public",
          "columnsFrom": [
            "role_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "role_permissions_permission_id_permissions_id_fk": {
          "name": "role_permissions_permission_id_permissions_id_fk",
          "tableFrom": "role_permissions",
          "tableTo": "permissions",
          "schemaTo": "public",
          "columnsFrom": [
            "permission_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.system_settings": {
      "name": "system_settings",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "organization_id": {
          "name": "organization_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "setting_key": {
          "name": "setting_key",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "setting_value": {
          "name": "setting_value",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "system_settings_org_key_idx": {
          "name": "system_settings_org_key_idx",
          "columns": [
            {
              "expression": "organization_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            },
            {
              "expression": "setting_key",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "system_settings_organization_id_idx": {
          "name": "system_settings_organization_id_idx",
          "columns": [
            {
              "expression": "organization_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "system_settings_organization_id_organizations_id_fk": {
          "name": "system_settings_organization_id_organizations_id_fk",
          "tableFrom": "system_settings",
          "tableTo": "organizations",
          "schemaTo": "public",
          "columnsFrom": [
            "organization_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.organizations": {
      "name": "organizations",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "subdomain": {
          "name": "subdomain",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "logo_url": {
          "name": "logo_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "website": {
          "name": "website",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "phone": {
          "name": "phone",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "address": {
          "name": "address",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "allow_anonymous_issues": {
          "name": "allow_anonymous_issues",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "allow_anonymous_comments": {
          "name": "allow_anonymous_comments",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "allow_anonymous_upvotes": {
          "name": "allow_anonymous_upvotes",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "require_moderation_anonymous": {
          "name": "require_moderation_anonymous",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "organizations_subdomain_idx": {
          "name": "organizations_subdomain_idx",
          "columns": [
            {
              "expression": "subdomain",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "organizations_subdomain_unique": {
          "columns": [
            "subdomain"
          ],
          "nullsNotDistinct": false,
          "name": "organizations_subdomain_unique"
        }
      },
      "checkConstraints": {},
      "policies": {
        "organizations_public_read": {
          "name": "organizations_public_read",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "anon"
          ],
          "using": "true"
        },
        "organizations_auth_read": {
          "name": "organizations_auth_read",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ]
        },
        "organizations_member_modify": {
          "name": "organizations_member_modify",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.memberships": {
      "name": "memberships",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "organization_id": {
          "name": "organization_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "role_id": {
          "name": "role_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "memberships_organization_id_idx": {
          "name": "memberships_organization_id_idx",
          "columns": [
            {
              "expression": "organization_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "memberships_user_id_organization_id_idx": {
          "name": "memberships_user_id_organization_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            },
            {
              "expression": "organization_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "memberships_self_access": {
          "name": "memberships_self_access",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "withCheck": "(user_id = (auth.uid())::text)",
          "using": "(user_id = (auth.uid())::text)"
        },
        "memberships_org_member_read": {
          "name": "memberships_org_member_read",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.roles": {
      "name": "roles",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "organization_id": {
          "name": "organization_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "is_default": {
          "name": "is_default",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "is_system": {
          "name": "is_system",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "roles_organization_id_idx": {
          "name": "roles_organization_id_idx",
          "columns": [
            {
              "expression": "organization_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "roles_member_access": {
          "name": "roles_member_access",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "withCheck": "((organization_id = current_setting('app.current_organization_id'::text, true)) AND (EXISTS ( SELECT 1\n   FROM memberships m\n  WHERE ((m.user_id = (auth.uid())::text) AND (m.organization_id = current_setting('app.current_organization_id'::text, true))))))",
          "using": "((organization_id = current_setting('app.current_organization_id'::text, true)) AND (EXISTS ( SELECT 1\n   FROM memberships m\n  WHERE ((m.user_id = (auth.uid())::text) AND (m.organization_id = current_setting('app.current_organization_id'::text, true))))))"
        }
      },
      "isRLSEnabled": true
    },
    "public.locations": {
      "name": "locations",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "organization_id": {
          "name": "organization_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "street": {
          "name": "street",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "city": {
          "name": "city",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "state": {
          "name": "state",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "zip": {
          "name": "zip",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "phone": {
          "name": "phone",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "website": {
          "name": "website",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "latitude": {
          "name": "latitude",
          "type": "real",
          "primaryKey": false,
          "notNull": false
        },
        "longitude": {
          "name": "longitude",
          "type": "real",
          "primaryKey": false,
          "notNull": false
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "pinball_map_id": {
          "name": "pinball_map_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "region_id": {
          "name": "region_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "last_sync_at": {
          "name": "last_sync_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "sync_enabled": {
          "name": "sync_enabled",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "is_public": {
          "name": "is_public",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        }
      },
      "indexes": {
        "locations_organization_id_idx": {
          "name": "locations_organization_id_idx",
          "columns": [
            {
              "expression": "organization_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "locations_public_org_idx": {
          "name": "locations_public_org_idx",
          "columns": [
            {
              "expression": "organization_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            },
            {
              "expression": "is_public",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "locations_public_read": {
          "name": "locations_public_read",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "anon",
            "authenticated"
          ],
          "using": "((organization_id = current_setting('app.current_organization_id'::text, true)) AND ((is_public = true) OR (is_public IS NULL)))"
        },
        "locations_member_modify": {
          "name": "locations_member_modify",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.machines": {
      "name": "machines",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "organization_id": {
          "name": "organization_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "location_id": {
          "name": "location_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "model_id": {
          "name": "model_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "owner_id": {
          "name": "owner_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "owner_notifications_enabled": {
          "name": "owner_notifications_enabled",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "notify_on_new_issues": {
          "name": "notify_on_new_issues",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "notify_on_status_changes": {
          "name": "notify_on_status_changes",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "notify_on_comments": {
          "name": "notify_on_comments",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "qr_code_id": {
          "name": "qr_code_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "qr_code_url": {
          "name": "qr_code_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "qr_code_generated_at": {
          "name": "qr_code_generated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "is_public": {
          "name": "is_public",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "machines_location_id_idx": {
          "name": "machines_location_id_idx",
          "columns": [
            {
              "expression": "location_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "machines_model_id_idx": {
          "name": "machines_model_id_idx",
          "columns": [
            {
              "expression": "model_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "machines_organization_id_idx": {
          "name": "machines_organization_id_idx",
          "columns": [
            {
              "expression": "organization_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "machines_owner_id_idx": {
          "name": "machines_owner_id_idx",
          "columns": [
            {
              "expression": "owner_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "machines_public_org_idx": {
          "name": "machines_public_org_idx",
          "columns": [
            {
              "expression": "organization_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            },
            {
              "expression": "is_public",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "machines_qr_code_id_idx": {
          "name": "machines_qr_code_id_idx",
          "columns": [
            {
              "expression": "qr_code_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "machines_qr_code_id_unique": {
          "columns": [
            "qr_code_id"
          ],
          "nullsNotDistinct": false,
          "name": "machines_qr_code_id_unique"
        }
      },
      "checkConstraints": {},
      "policies": {
        "machines_public_read": {
          "name": "machines_public_read",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "anon",
            "authenticated"
          ],
          "using": "((organization_id = current_setting('app.current_organization_id'::text, true)) AND ((is_public = true) OR (is_public IS NULL)))"
        },
        "machines_member_all_access": {
          "name": "machines_member_all_access",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.issues": {
      "name": "issues",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "consistency": {
          "name": "consistency",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "checklist": {
          "name": "checklist",
          "type": "json",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "resolved_at": {
          "name": "resolved_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "is_public": {
          "name": "is_public",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "reporter_type": {
          "name": "reporter_type",
          "type": "reporter_type",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'authenticated'"
        },
        "reporter_email": {
          "name": "reporter_email",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "submitter_name": {
          "name": "submitter_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "anonymous_session_id": {
          "name": "anonymous_session_id",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "anonymous_contact_method": {
          "name": "anonymous_contact_method",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "moderation_status": {
          "name": "moderation_status",
          "type": "moderation_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'approved'"
        },
        "organization_id": {
          "name": "organization_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "machine_id": {
          "name": "machine_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "status_id": {
          "name": "status_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "priority_id": {
          "name": "priority_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_by_id": {
          "name": "created_by_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "assigned_to_id": {
          "name": "assigned_to_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "issues_anon_session_idx": {
          "name": "issues_anon_session_idx",
          "columns": [
            {
              "expression": "anonymous_session_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "issues_assigned_to_id_idx": {
          "name": "issues_assigned_to_id_idx",
          "columns": [
            {
              "expression": "assigned_to_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "issues_created_by_id_idx": {
          "name": "issues_created_by_id_idx",
          "columns": [
            {
              "expression": "created_by_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "issues_machine_id_idx": {
          "name": "issues_machine_id_idx",
          "columns": [
            {
              "expression": "machine_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "issues_moderation_pending_idx": {
          "name": "issues_moderation_pending_idx",
          "columns": [
            {
              "expression": "organization_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            },
            {
              "expression": "moderation_status",
              "asc": true,
              "nulls": "last",
              "opclass": "enum_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "issues_organization_id_idx": {
          "name": "issues_organization_id_idx",
          "columns": [
            {
              "expression": "organization_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "issues_priority_id_idx": {
          "name": "issues_priority_id_idx",
          "columns": [
            {
              "expression": "priority_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "issues_public_org_idx": {
          "name": "issues_public_org_idx",
          "columns": [
            {
              "expression": "organization_id",
              "asc": true,
              "nulls": "last",
              "opclass": "bool_ops",
              "isExpression": false
            },
            {
              "expression": "is_public",
              "asc": true,
              "nulls": "last",
              "opclass": "bool_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "issues_reporter_type_idx": {
          "name": "issues_reporter_type_idx",
          "columns": [
            {
              "expression": "reporter_type",
              "asc": true,
              "nulls": "last",
              "opclass": "enum_ops",
              "isExpression": false
            },
            {
              "expression": "organization_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "issues_status_id_idx": {
          "name": "issues_status_id_idx",
          "columns": [
            {
              "expression": "status_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "issues_anon_create": {
          "name": "issues_anon_create",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "anon"
          ],
          "withCheck": "((organization_id = current_setting('app.current_organization_id'::text, true)) AND (reporter_type = 'anonymous'::reporter_type) AND (created_by_id IS NULL))"
        },
        "issues_public_read": {
          "name": "issues_public_read",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "anon",
            "authenticated"
          ]
        },
        "issues_member_access": {
          "name": "issues_member_access",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.priorities": {
      "name": "priorities",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "order": {
          "name": "order",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "organization_id": {
          "name": "organization_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "is_default": {
          "name": "is_default",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        }
      },
      "indexes": {
        "priorities_organization_id_idx": {
          "name": "priorities_organization_id_idx",
          "columns": [
            {
              "expression": "organization_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "priorities_member_access": {
          "name": "priorities_member_access",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "withCheck": "((organization_id = current_setting('app.current_organization_id'::text, true)) AND (EXISTS ( SELECT 1\n   FROM memberships m\n  WHERE ((m.user_id = (auth.uid())::text) AND (m.organization_id = current_setting('app.current_organization_id'::text, true))))))",
          "using": "((organization_id = current_setting('app.current_organization_id'::text, true)) AND (EXISTS ( SELECT 1\n   FROM memberships m\n  WHERE ((m.user_id = (auth.uid())::text) AND (m.organization_id = current_setting('app.current_organization_id'::text, true))))))"
        }
      },
      "isRLSEnabled": true
    },
    "public.issue_statuses": {
      "name": "issue_statuses",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "category": {
          "name": "category",
          "type": "status_category",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "organization_id": {
          "name": "organization_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "is_default": {
          "name": "is_default",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        }
      },
      "indexes": {
        "issue_statuses_organization_id_idx": {
          "name": "issue_statuses_organization_id_idx",
          "columns": [
            {
              "expression": "organization_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "issue_statuses_member_access": {
          "name": "issue_statuses_member_access",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "withCheck": "((organization_id = current_setting('app.current_organization_id'::text, true)) AND (EXISTS ( SELECT 1\n   FROM memberships m\n  WHERE ((m.user_id = (auth.uid())::text) AND (m.organization_id = current_setting('app.current_organization_id'::text, true))))))",
          "using": "((organization_id = current_setting('app.current_organization_id'::text, true)) AND (EXISTS ( SELECT 1\n   FROM memberships m\n  WHERE ((m.user_id = (auth.uid())::text) AND (m.organization_id = current_setting('app.current_organization_id'::text, true))))))"
        }
      },
      "isRLSEnabled": true
    },
    "public.comments": {
      "name": "comments",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "content": {
          "name": "content",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "deleted_at": {
          "name": "deleted_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "deleted_by": {
          "name": "deleted_by",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "commenter_type": {
          "name": "commenter_type",
          "type": "commenter_type",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'authenticated'"
        },
        "anonymous_session_id": {
          "name": "anonymous_session_id",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "anonymous_display_name": {
          "name": "anonymous_display_name",
          "type": "varchar(100)",
          "primaryKey": false,
          "notNull": false
        },
        "moderation_status": {
          "name": "moderation_status",
          "type": "moderation_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'approved'"
        },
        "organization_id": {
          "name": "organization_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "issue_id": {
          "name": "issue_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "author_id": {
          "name": "author_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "comments_anon_session_idx": {
          "name": "comments_anon_session_idx",
          "columns": [
            {
              "expression": "anonymous_session_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "comments_author_id_idx": {
          "name": "comments_author_id_idx",
          "columns": [
            {
              "expression": "author_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "comments_commenter_type_idx": {
          "name": "comments_commenter_type_idx",
          "columns": [
            {
              "expression": "commenter_type",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            },
            {
              "expression": "issue_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "comments_issue_id_idx": {
          "name": "comments_issue_id_idx",
          "columns": [
            {
              "expression": "issue_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "comments_moderation_pending_idx": {
          "name": "comments_moderation_pending_idx",
          "columns": [
            {
              "expression": "issue_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            },
            {
              "expression": "moderation_status",
              "asc": true,
              "nulls": "last",
              "opclass": "enum_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "comments_organization_id_idx": {
          "name": "comments_organization_id_idx",
          "columns": [
            {
              "expression": "organization_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "comments_anon_create_public": {
          "name": "comments_anon_create_public",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "anon"
          ],
          "withCheck": "((EXISTS ( SELECT 1\n   FROM issues i\n  WHERE ((i.id = comments.issue_id) AND (i.organization_id = current_setting('app.current_organization_id'::text, true)) AND ((i.is_public = true) OR (i.is_public IS NULL))))) AND (commenter_type = 'anonymous'::commenter_type) AND (author_id IS NULL))"
        },
        "comments_member_access": {
          "name": "comments_member_access",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.attachments": {
      "name": "attachments",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "url": {
          "name": "url",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "file_name": {
          "name": "file_name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "file_type": {
          "name": "file_type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "organization_id": {
          "name": "organization_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "issue_id": {
          "name": "issue_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "attachments_issue_id_idx": {
          "name": "attachments_issue_id_idx",
          "columns": [
            {
              "expression": "issue_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "attachments_organization_id_idx": {
          "name": "attachments_organization_id_idx",
          "columns": [
            {
              "expression": "organization_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": true
    },
    "public.issue_history": {
      "name": "issue_history",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "field": {
          "name": "field",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "old_value": {
          "name": "old_value",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "new_value": {
          "name": "new_value",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "changed_at": {
          "name": "changed_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "organization_id": {
          "name": "organization_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "actor_id": {
          "name": "actor_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "type": {
          "name": "type",
          "type": "activity_type",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "issue_id": {
          "name": "issue_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "issue_history_issue_id_idx": {
          "name": "issue_history_issue_id_idx",
          "columns": [
            {
              "expression": "issue_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "issue_history_organization_id_idx": {
          "name": "issue_history_organization_id_idx",
          "columns": [
            {
              "expression": "organization_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "issue_history_type_idx": {
          "name": "issue_history_type_idx",
          "columns": [
            {
              "expression": "type",
              "asc": true,
              "nulls": "last",
              "opclass": "enum_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": true
    },
    "public.upvotes": {
      "name": "upvotes",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "issue_id": {
          "name": "issue_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "voter_type": {
          "name": "voter_type",
          "type": "voter_type",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'authenticated'"
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "anonymous_session_id": {
          "name": "anonymous_session_id",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "upvotes_anon_session_issue_idx": {
          "name": "upvotes_anon_session_issue_idx",
          "columns": [
            {
              "expression": "issue_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            },
            {
              "expression": "anonymous_session_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "upvotes_issue_id_idx": {
          "name": "upvotes_issue_id_idx",
          "columns": [
            {
              "expression": "issue_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "upvotes_user_id_issue_id_idx": {
          "name": "upvotes_user_id_issue_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            },
            {
              "expression": "issue_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": true
    },
    "public.collections": {
      "name": "collections",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "type_id": {
          "name": "type_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "location_id": {
          "name": "location_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "organization_id": {
          "name": "organization_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "is_smart": {
          "name": "is_smart",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "is_manual": {
          "name": "is_manual",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "sort_order": {
          "name": "sort_order",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "filter_criteria": {
          "name": "filter_criteria",
          "type": "json",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "collections_location_id_idx": {
          "name": "collections_location_id_idx",
          "columns": [
            {
              "expression": "location_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "collections_organization_id_idx": {
          "name": "collections_organization_id_idx",
          "columns": [
            {
              "expression": "organization_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "collections_type_id_idx": {
          "name": "collections_type_id_idx",
          "columns": [
            {
              "expression": "type_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "collections_member_access": {
          "name": "collections_member_access",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "withCheck": "((organization_id = current_setting('app.current_organization_id'::text, true)) AND (EXISTS ( SELECT 1\n   FROM memberships m\n  WHERE ((m.user_id = (auth.uid())::text) AND (m.organization_id = current_setting('app.current_organization_id'::text, true))))))",
          "using": "((organization_id = current_setting('app.current_organization_id'::text, true)) AND (EXISTS ( SELECT 1\n   FROM memberships m\n  WHERE ((m.user_id = (auth.uid())::text) AND (m.organization_id = current_setting('app.current_organization_id'::text, true))))))"
        }
      },
      "isRLSEnabled": true
    },
    "public.collection_types": {
      "name": "collection_types",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "organization_id": {
          "name": "organization_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "is_auto_generated": {
          "name": "is_auto_generated",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "is_enabled": {
          "name": "is_enabled",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "source_field": {
          "name": "source_field",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "generation_rules": {
          "name": "generation_rules",
          "type": "json",
          "primaryKey": false,
          "notNull": false
        },
        "display_name": {
          "name": "display_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "sort_order": {
          "name": "sort_order",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "collection_types_is_enabled_idx": {
          "name": "collection_types_is_enabled_idx",
          "columns": [
            {
              "expression": "is_enabled",
              "asc": true,
              "nulls": "last",
              "opclass": "bool_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "collection_types_organization_id_idx": {
          "name": "collection_types_organization_id_idx",
          "columns": [
            {
              "expression": "organization_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "collection_types_sort_order_idx": {
          "name": "collection_types_sort_order_idx",
          "columns": [
            {
              "expression": "sort_order",
              "asc": true,
              "nulls": "last",
              "opclass": "int4_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "collection_types_member_access": {
          "name": "collection_types_member_access",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "withCheck": "((organization_id = current_setting('app.current_organization_id'::text, true)) AND (EXISTS ( SELECT 1\n   FROM memberships m\n  WHERE ((m.user_id = (auth.uid())::text) AND (m.organization_id = current_setting('app.current_organization_id'::text, true))))))",
          "using": "((organization_id = current_setting('app.current_organization_id'::text, true)) AND (EXISTS ( SELECT 1\n   FROM memberships m\n  WHERE ((m.user_id = (auth.uid())::text) AND (m.organization_id = current_setting('app.current_organization_id'::text, true))))))"
        }
      },
      "isRLSEnabled": true
    },
    "public.notifications": {
      "name": "notifications",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "message": {
          "name": "message",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "read": {
          "name": "read",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "type": {
          "name": "type",
          "type": "notification_type",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "entity_type": {
          "name": "entity_type",
          "type": "notification_entity",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false
        },
        "entity_id": {
          "name": "entity_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "action_url": {
          "name": "action_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "organization_id": {
          "name": "organization_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "notifications_organization_id_idx": {
          "name": "notifications_organization_id_idx",
          "columns": [
            {
              "expression": "organization_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "notifications_user_id_created_at_idx": {
          "name": "notifications_user_id_created_at_idx",
          "columns": [
            {
              "expression": "user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamp_ops",
              "isExpression": false
            },
            {
              "expression": "created_at",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamp_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "notifications_user_id_read_idx": {
          "name": "notifications_user_id_read_idx",
          "columns": [
            {
              "expression": "user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            },
            {
              "expression": "read",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "notifications_user_access": {
          "name": "notifications_user_access",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "withCheck": "(user_id = (auth.uid())::text)",
          "using": "(user_id = (auth.uid())::text)"
        }
      },
      "isRLSEnabled": true
    },
    "public.pinball_map_configs": {
      "name": "pinball_map_configs",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "organization_id": {
          "name": "organization_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "api_enabled": {
          "name": "api_enabled",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "api_key": {
          "name": "api_key",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "auto_sync_enabled": {
          "name": "auto_sync_enabled",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "sync_interval_hours": {
          "name": "sync_interval_hours",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 24
        },
        "last_global_sync": {
          "name": "last_global_sync",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "create_missing_models": {
          "name": "create_missing_models",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "update_existing_data": {
          "name": "update_existing_data",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        }
      },
      "indexes": {
        "pinball_map_configs_organization_id_idx": {
          "name": "pinball_map_configs_organization_id_idx",
          "columns": [
            {
              "expression": "organization_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "pinball_map_configs_organization_id_unique": {
          "columns": [
            "organization_id"
          ],
          "nullsNotDistinct": false,
          "name": "pinball_map_configs_organization_id_unique"
        }
      },
      "checkConstraints": {},
      "policies": {
        "pinball_map_configs_member_access": {
          "name": "pinball_map_configs_member_access",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "withCheck": "((organization_id = current_setting('app.current_organization_id'::text, true)) AND (EXISTS ( SELECT 1\n   FROM memberships m\n  WHERE ((m.user_id = (auth.uid())::text) AND (m.organization_id = current_setting('app.current_organization_id'::text, true))))))",
          "using": "((organization_id = current_setting('app.current_organization_id'::text, true)) AND (EXISTS ( SELECT 1\n   FROM memberships m\n  WHERE ((m.user_id = (auth.uid())::text) AND (m.organization_id = current_setting('app.current_organization_id'::text, true))))))"
        }
      },
      "isRLSEnabled": true
    },
    "public.anonymous_rate_limits": {
      "name": "anonymous_rate_limits",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "session_id": {
          "name": "session_id",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "ip_address": {
          "name": "ip_address",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "action_type": {
          "name": "action_type",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": true
        },
        "organization_id": {
          "name": "organization_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "rate_limits_cleanup_idx": {
          "name": "rate_limits_cleanup_idx",
          "columns": [
            {
              "expression": "created_at",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamp_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "rate_limits_session_org_action_idx": {
          "name": "rate_limits_session_org_action_idx",
          "columns": [
            {
              "expression": "session_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            },
            {
              "expression": "organization_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            },
            {
              "expression": "action_type",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "anonymous_rate_limits_member_access": {
          "name": "anonymous_rate_limits_member_access",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "withCheck": "((organization_id = current_setting('app.current_organization_id'::text, true)) AND (EXISTS ( SELECT 1\n   FROM memberships m\n  WHERE ((m.user_id = (auth.uid())::text) AND (m.organization_id = current_setting('app.current_organization_id'::text, true))))))",
          "using": "((organization_id = current_setting('app.current_organization_id'::text, true)) AND (EXISTS ( SELECT 1\n   FROM memberships m\n  WHERE ((m.user_id = (auth.uid())::text) AND (m.organization_id = current_setting('app.current_organization_id'::text, true))))))"
        },
        "anonymous_rate_limits_system_insert": {
          "name": "anonymous_rate_limits_system_insert",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "anon"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.collection_machines": {
      "name": "collection_machines",
      "schema": "",
      "columns": {
        "collection_id": {
          "name": "collection_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "machine_id": {
          "name": "machine_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "collection_machines_collection_id_idx": {
          "name": "collection_machines_collection_id_idx",
          "columns": [
            {
              "expression": "collection_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "collection_machines_machine_id_idx": {
          "name": "collection_machines_machine_id_idx",
          "columns": [
            {
              "expression": "machine_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {
        "collection_machines_collection_id_machine_id_pk": {
          "name": "collection_machines_collection_id_machine_id_pk",
          "columns": [
            "collection_id",
            "machine_id"
          ]
        }
      },
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": true
    }
  },
  "enums": {
    "public.activity_type": {
      "name": "activity_type",
      "values": [
        "CREATED",
        "STATUS_CHANGED",
        "ASSIGNED",
        "PRIORITY_CHANGED",
        "COMMENTED",
        "COMMENT_DELETED",
        "ATTACHMENT_ADDED",
        "MERGED",
        "RESOLVED",
        "REOPENED",
        "SYSTEM"
      ],
      "schema": "public"
    },
    "public.commenter_type": {
      "name": "commenter_type",
      "values": [
        "authenticated",
        "anonymous"
      ],
      "schema": "public"
    },
    "public.moderation_status": {
      "name": "moderation_status",
      "values": [
        "pending",
        "approved",
        "rejected"
      ],
      "schema": "public"
    },
    "public.notification_entity": {
      "name": "notification_entity",
      "values": [
        "ISSUE",
        "MACHINE",
        "COMMENT",
        "ORGANIZATION"
      ],
      "schema": "public"
    },
    "public.notification_frequency": {
      "name": "notification_frequency",
      "values": [
        "IMMEDIATE",
        "DAILY",
        "WEEKLY",
        "NEVER"
      ],
      "schema": "public"
    },
    "public.notification_type": {
      "name": "notification_type",
      "values": [
        "ISSUE_CREATED",
        "ISSUE_UPDATED",
        "ISSUE_ASSIGNED",
        "ISSUE_COMMENTED",
        "MACHINE_ASSIGNED",
        "SYSTEM_ANNOUNCEMENT"
      ],
      "schema": "public"
    },
    "public.reporter_type": {
      "name": "reporter_type",
      "values": [
        "authenticated",
        "anonymous"
      ],
      "schema": "public"
    },
    "public.status_category": {
      "name": "status_category",
      "values": [
        "NEW",
        "IN_PROGRESS",
        "RESOLVED"
      ],
      "schema": "public"
    },
    "public.voter_type": {
      "name": "voter_type",
      "values": [
        "authenticated",
        "anonymous"
      ],
      "schema": "public"
    }
  },
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "schemas": {},
    "tables": {},
    "columns": {}
  },
  "internal": {
    "tables": {}
  }
}