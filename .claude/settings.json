{
  "hooks": {
    "PostToolUse": [
      {
        "matcher": "Edit|Write|MultiEdit",
        "hooks": [
          {
            "type": "command",
            "command": "node .claude/hooks/quality-check.cjs",
            "timeout": 30000
          }
        ]
      }
    ],
    "SubagentStop": [
      {
        "matcher": ".*",
        "hooks": [
          {
            "type": "command",
            "command": "node .claude/hooks/pattern-reminder.cjs",
            "timeout": 2000
          }
        ]
      }
    ]
  },
  "permissions": {
    "allow": [
      
      "WebSearch",
      "WebFetch(domain:zod.dev)",
      "WebFetch(domain:docs.codemod.com)",
      "WebFetch(domain:docs.github.com)",
      "WebFetch(domain:github.blog)",
      "WebFetch(domain:playwright.dev)",
      "WebFetch(domain:vitest.dev)",
      "WebFetch(domain:eslint.org)",
      "WebFetch(domain:prettier.io)",
      "WebFetch(domain:docs.npmjs.com)",
      "Bash(npm test:*)",
      "Bash(npx jest:*)",
      "Bash(npm run typecheck:*)",
      "Bash(npm run typecheck:brief:*)",
      "Bash(npm run build:*)",
      "Bash(timeout 10 npm run build:*)",
      "Bash(timeout 30 npm run build:*)",
      "Bash(timeout 10s npm run dev)",
      "Bash(npm run lint:*)",
      "Bash(npm run check:brief:*)",
      "Bash(npm run smoke:*)",
      "Bash(npx eslint:*)",
      "Bash(npx prettier:*)",
            "Bash(npx next:*)",
      "Bash(npx shadcn:*)",
      "WebFetch(domain:ui.shadcn.com)",
      "Bash(npx playwright test:*)",
      "Bash(npx playwright show-trace:*)",
      "Bash(PLAYWRIGHT_PORT=3001 npm run smoke)",
      "Bash(./scripts/safe-curl.sh:*)",
      "Bash(npx tsc:*)",
      "Bash(ls:*)",
      "Bash(grep:*)",
      "Bash(gitleaks detect:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(git fetch:*)",
      "Bash(git rev-parse:*)",
      "Bash(git rev-list:*)",
      "Bash(git worktree:*)",
      "Bash(gh pr list:*)",
      "Bash(gh pr view:*)",
      "Bash(gh pr create:*)",
      "Bash(gh issue list:*)",
      "Bash(gh issue view:*)",
      "Bash(gh run list:*)",
      "Bash(gh run view:*)",
      "Bash(supabase status:*)",
      "Bash(supabase start:*)",
      
      
      "Bash(./scripts/check-security-deps.sh:*)",
      "Bash(./scripts/check-file-security.sh:*)",
      "Bash(./scripts/check-db-schema.sh:*)",
      "Bash(./scripts/check-npm-audit.sh:*)",
      "Bash(./scripts/safe-psql.sh:*)",
      "WebFetch(domain:docs.anthropic.com)",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:supabase.com)",
      "mcp__playwright__browser_navigate",
      "mcp__playwright__browser_snapshot",
      "mcp__playwright__browser_type",
      "mcp__playwright__browser_click",
      "mcp__playwright__browser_evaluate",
      "mcp__playwright__browser_console_messages",
      "mcp__playwright__browser_wait_for",
      "mcp__context7__resolve-library-id",
      "mcp__context7__get-library-docs"
    ],
    "deny": ["Bash(find:*)", "Bash(psql:*)"]
  }
,
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "playwright"
  ]
}
