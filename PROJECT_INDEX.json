{"at":"2025-08-31T22:13:19.296652","root":".","tree":[".","\u251c\u2500\u2500 docs/","\u2502   \u251c\u2500\u2500 architecture/","\u2502   \u251c\u2500\u2500 configuration/","\u2502   \u251c\u2500\u2500 deployment/","\u2502   \u251c\u2500\u2500 deprecated/","\u2502   \u2502   \u2514\u2500\u2500 testing/","\u2502   \u251c\u2500\u2500 design-docs/","\u2502   \u251c\u2500\u2500 developer-guides/","\u2502   \u251c\u2500\u2500 latest-updates/","\u2502   \u251c\u2500\u2500 lessons-learned/","\u2502   \u251c\u2500\u2500 planning/","\u2502   \u2502   \u251c\u2500\u2500 archive/","\u2502   \u2502   \u251c\u2500\u2500 future-features/","\u2502   \u2502   \u2514\u2500\u2500 rejected-ideas/","\u2502   \u251c\u2500\u2500 quick-reference/","\u2502   \u251c\u2500\u2500 research/","\u2502   \u251c\u2500\u2500 security/","\u2502   \u251c\u2500\u2500 testing/","\u2502   \u2514\u2500\u2500 README.md"],"stats":{"total_files":570,"total_directories":364,"fully_parsed":{"typescript":508,"javascript":4,"shell":5},"listed_only":{"sql":34,"json":15,"shell":3,"css":1},"markdown_files":176},"f":{"sr/lib/subdomain-verification.ts":["t",["isSubdomainHeaderTrusted:22:(headers:Headers):boolean::","extractTrustedSubdomain:32:(headers:Headers):string | null:isSubdomainHeaderTrusted:","parseSubdomainFromHost:42:(host:string):string | null::"]],"sr/lib/utils/domain.ts":["t",["getCookieDomain:15:(host:string):string::","getProductionUrl:43:(host:string):string::","getCurrentDomain:57:():string::"]],".archived-tests-2025-08-23/e2e/helpers/auth.ts":["t",["loginAsTechnician:30:async (page:Page):loginAsUserWithPermissions:","loginAsAdmin:52:async (page:Page)::","loginAsUserWithPermissions:61:async (page:Page, permissions:UserPermissions, user?:{ id:string; name:string; email:string; },)::","loginAsRegularUser:111:async (page:Page)::","logout:120:async (page:Page)::","setupTestIssue:129:async (page:Page, issueData?:Record<string, unknown>,)::"]],".archived-tests-2025-08-23/e2e/helpers/unified-dashboard.ts":["t",["loginAsUser:7:async (page:Page, userType:\"Test Admin\" | \"Test Member\" | \"Test Player\", maxRetries:number = 3,):Promise<void>:clearSession,waitForAuthentication:","waitForAuthentication:65:async (page:Page):Promise<void>::","logout:76:async (page:Page, maxRetries:number = 2,):Promise<void>:clearSession,waitForLogout:","waitForLogout:122:async (page:Page, timeout:number = 8000,):Promise<void>::","verifyPublicContent:150:async (page:Page, expect:Expect,):Promise<void>::","verifyAuthenticatedContent:161:async (page:Page, expect:Expect, timeout:number = 10000,):Promise<void>::","verifyPublicOnlyContent:176:async (page:Page, expect:Expect,):Promise<void>:verifyPublicContent:","verifyNavigationState:188:async (page:Page, expect:Expect, isAuthenticated:boolean,):Promise<void>::","clearSession:222:async (page:Page):Promise<void>::"]],".archived-tests-2025-08-23/e2e/issue-confirmation.spec.ts":["t",{"IssueConfirmationPage":["26",["constructor:27:(private page:Page)::","loginAs:28:async (userType:keyof typeof TEST_USERS)::","createIssueWithBasicForm:37:async ()::","createIssueWithFullForm:55:async ()::","createIssueWithExplicitConfirmation:88:async (isConfirmed:boolean)::","navigateToIssueList:113:async ()::","findIssueByTitle:118:async (title:string)::","toggleIssueConfirmation:123:async (issueTitle:string, shouldConfirm:boolean)::","viewConfirmationStatistics:187:async ()::","__init__:27:(private page:Page)::"]]}],".archived-tests-2025-08-23/e2e/roles-permissions.spec.ts":["t",{"RolePermissionPage":["39",["constructor:40:(private page:Page)::","loginAs:41:async (userType:keyof typeof TEST_USERS)::","navigateToRoleManagement:56:async ()::","createRole:63:async (name:string, permissions:string[])::","editRole:82:async (roleName:string, newPermissions:string[])::","deleteRole:101:async (roleName:string, reassignTo?:string)::","assignUserToRole:119:async (userEmail:string, roleName:string)::","verifyPermissionAccess:138:async (permission:string, shouldHaveAccess:boolean)::","__init__:40:(private page:Page)::"]]}],".archived-tests-2025-08-23/sr/app/api/dev/__tests__/users-simple.test.ts":["t",["setNodeEnv:7:(value:string)::"]],".archived-tests-2025-08-23/sr/app/dashboard/_components/__tests__/PrimaryAppBar.test.tsx":["t",["MockAuthProvider:48:({ children, user = createMockSupabaseUser()::"]],".archived-tests-2025-08-23/sr/app/machines/components/MachineCard.test.tsx":["t",["createMockMachine:36:(overrides:Partial<MachineWithRelations> = {},):MachineWithRelations::","createMachineWithoutCustomName:120:():MachineWithRelations:createMockMachine:"],{"const":["383",[]]}],".archived-tests-2025-08-23/sr/components/issues/__tests__/MachineSelector.test.tsx":["t",["createMockMachine:25:(overrides:Partial<MachineForIssues> = {},):MachineForIssues::","createMockMachines:38:(count = 3):MachineForIssues[]:createMockMachine:"]],".archived-tests-2025-08-23/sr/components/locations/__tests__/LocationDetailView.test.tsx":["t",["createMockLocation:57:(overrides:any = {})::"]],".archived-tests-2025-08-23/sr/components/locations/__tests__/MachineGrid.test.tsx":["t",["createMockMachine:16:(overrides:any = {})::","findMachineCard:261:(name:string)::"]],".archived-tests-2025-08-23/sr/components/permissions/__tests__/PermissionGate.test.tsx":["t",["expectProtectedContentVisible:40:()::","expectProtectedContentHidden:46:()::","expectEditButtonVisible:52:()::","expectAdminPanelHidden:58:()::","expectCreateMachineVisible:64:()::","expectFallbackVisible:70:()::","expectFallbackHidden:76:()::","expectPermissionCalled:82:(mock:ReturnType<typeof vi.fn>, permission:string, times = 1,)::","expectEmptyBody:91:()::","hasPermission:525:(permission:string)::"]],".archived-tests-2025-08-23/sr/components/react-environment.test.tsx":["t",["SimpleComponent:13:()::"]],".archived-tests-2025-08-23/sr/hooks/__tests__/usePermissions.test.tsx":["t",["createWrapper:28:(options:{ userPermissions?:string[]; userRole?:string; session?:any; injectPermissionDeps?:boolean; queryOptions?:{ isLoading?:boolean; isError?:boolean; error?:any }; } = {},)::","DynamicWrapper:233:({ children, permissions, }:{ children:ReactNode; permissions:string[]; })::"]],".archived-tests-2025-08-23/sr/integration-t/comment.integration.test.ts":["t",["withCommentBusinessLogicSetup:83:async (workerDb, testFn)::"]],".archived-tests-2025-08-23/sr/integration-t/cross-org-isolation.test.ts":["t",["integration:15:(PGlite limitation)::","createMinimalTestData:47:async (db:typeof schema, primaryOrgId:string, competitorOrgId:string,)::"]],".archived-tests-2025-08-23/sr/integration-t/machine.location.integration.test.ts":["t",["setupTestData:55:async (db:TestDatabase)::"]],".archived-tests-2025-08-23/sr/integration-t/machine.owner.integration.test.ts":["t",["withMachineOwnerBusinessLogicSetup:81:async (workerDb, testFn):setupTestData:","setupTestData:95:async (db:TestDatabase)::"]],".archived-tests-2025-08-23/sr/integration-t/model.core.integration.test.ts":["t",["createTestContext:80:async (db:TestDatabase, organizationId:string)::"]],".archived-tests-2025-08-23/sr/integration-t/pinballMap.integration.test.ts":["t",["getSimpleSeededData:38:async (db:any)::","createPinballMapTestContext:65:(db:TestDatabase, organizationId:string, userId:string, permissions:string[] = [\"organization:manage\", \"location:edit\"],):TRPCContext:setMockPermissions:","setMockPermissions:171:(permissions:string[])::"]],".archived-tests-2025-08-23/sr/integration-t/schema-migration-validation.integration.test.ts":["t",["createTestContext:30:async (_db:TestDatabase)::"]],".archived-tests-2025-08-23/sr/lib/common/__tests__/organizationValidation.test.ts":["t",["createMockMembership:47:(overrides:Partial<OrganizationMembership> = {},):OrganizationMembership::","createResourceOwnershipInput:68:(overrides:Partial<ResourceOwnershipInput> = {},):ResourceOwnershipInput::","createMembershipValidationInput:80:(overrides:Partial<MembershipValidationInput> = {},):MembershipValidationInput:createMockMembership:","createCrossOrganizationAccessInput:91:(overrides:Partial<CrossOrganizationAccessInput> = {},):CrossOrganizationAccessInput::"]],".archived-tests-2025-08-23/sr/lib/issues/__tests__/assignmentValidation.test.ts":["t",["createTestUser:46:(overrides:Partial<User> = {}):User::","createTestMembership:53:(overrides:Partial<Membership> = {},):Membership:createTestUser:","createTestMachine:64:(overrides:Partial<Machine> = {}):Machine::","createTestIssue:73:(overrides:Partial<Issue> = {}):Issue::","createTestIssueStatus:84:(overrides:Partial<IssueStatus> = {},):IssueStatus::","createTestPriority:94:(overrides:Partial<Priority> = {}):Priority::","createTestContext:102:(overrides:Partial<AssignmentValidationContext> = {},):AssignmentValidationContext::"]],".archived-tests-2025-08-23/sr/lib/issues/__tests__/creationValidation.test.ts":["t",["createMockMachine:27:(overrides:Partial<MachineOwnershipInput[\"machine\"]> = {},):MachineOwnershipInput[\"machine\"]::","createMockDefaults:39:(overrides:Partial<IssueCreationDefaults> = {},):IssueCreationDefaults::","createPublicIssueInput:55:(overrides:Partial<PublicIssueCreationInput> = {},):PublicIssueCreationInput::","createAuthenticatedIssueInput:65:(overrides:Partial<AuthenticatedIssueCreationInput> = {},):AuthenticatedIssueCreationInput::","createContext:75:(overrides:Partial<IssueCreationContext> = {},):IssueCreationContext::"]],".archived-tests-2025-08-23/sr/lib/issues/__tests__/statusValidation.test.ts":["t",["createMockStatus:23:(overrides:Partial<IssueStatus> = {}):IssueStatus::","createStatusSet:32:():::"]],".archived-tests-2025-08-23/sr/lib/pinballmap/__tests__/apiMocker.ts":["t",{"PinballMapAPIMocker":["12",["constructor:14:()::","start:22:():void::","stop:65:():void::","__init__:14:()::"]]}],".archived-tests-2025-08-23/sr/lib/users/__tests__/roleManagementValidation.test.ts":["t",["createTestUser:43:(overrides:Partial<User> = {}):User::","createTestRole:50:(overrides:Partial<Role> = {}):Role::","createAdminRole:59:(overrides:Partial<Role> = {}):Role::","createMembership:68:(overrides:Partial<Membership> = {}):Membership:createTestRole,createTestUser:","createAdminMembership:78:(overrides:Partial<Membership> = {},):Membership:createAdminRole,createTestUser:","createTestContext:94:(overrides:Partial<RoleManagementContext> = {},):RoleManagementContext::"]],".archived-tests-2025-08-23/sr/server/api/__tests__/msw.trpc.test.ts":["t",["creation:43:(without executing them)::"]],".archived-tests-2025-08-23/sr/server/api/__tests__/trpc.permission.test.ts":["t",["supabaseUserToSession:18:(user:any)::","createMockTRPCContext:51:(permissions:string[] = [], organizationId:string = SEED_TEST_IDS.ORGANIZATIONS.primary, userId:string = SEED_TEST_IDS.USERS.ADMIN,):VitestMockContext & {\n  membership:{ roleId:string | null };\n  userPermissions:string[];\n}::","createCompetitorOrgContext:123:(permissions:string[] = []):createMockTRPCContext:"]],".archived-tests-2025-08-23/sr/server/api/routers/__tests__/collection.test.ts":["t",["setupTestData:174:async (db:TestDatabase)::"]],".archived-tests-2025-08-23/sr/server/api/routers/__tests__/issue.confirmation.test.ts":["t",["createMockTRPCContext:316:(permissions:string[] = [], context?:TestMockContext,):OrganizationTRPCContext::"]],".archived-tests-2025-08-23/sr/server/api/routers/__tests__/issue.integration.test.ts":["t",["createTestContext:37:async (txDb:any, organizationId:string, userId:string,)::"]],".archived-tests-2025-08-23/sr/server/api/routers/__tests__/issue.notification.test.ts":["t",["getMockUser:58:(context:TestMockContext)::","getMockMachine:64:(context:TestMockContext)::","getMockIssue:71:(context:TestMockContext)::"]],".archived-tests-2025-08-23/sr/server/api/routers/__tests__/issue.test.ts":["t",["createTestIssue:84:async (db:TestDatabase, overrides:Partial<typeof schema.issues.$inferInsert> = {},)::","createPublicContext:110:async (db:TestDatabase, organizationId:string,):Promise<TRPCContext>::"]],".archived-tests-2025-08-23/sr/server/api/routers/__tests__/model.core.test.ts":["t",["setupTestData:74:async (db:TestDatabase)::"]],".archived-tests-2025-08-23/sr/server/api/routers/__tests__/notification.test.ts":["t",["setupTestData:66:async (db:TestDatabase)::"]],".archived-tests-2025-08-23/sr/server/api/routers/utils/__tests__/commentService.integration.test.ts":["t",["createTestContext:72:async (db:TestDatabase, organizationId:string)::"]],".archived-tests-2025-08-23/sr/server/api/routers/utils/__tests__/commentValidation.test.ts":["t",["createValidCommentData:51:(overrides:Partial<CommentData> = {},):CommentData::","createValidContext:64:(overrides:Partial<ValidationContext> = {},):ValidationContext::"]],".archived-tests-2025-08-23/sr/server/auth/__tests__/permissions.constants.test.ts":["t",["hasCycle:125:(permission:string):boolean:hasCycle:"]],".archived-tests-2025-08-23/sr/server/auth/__tests__/uploadAuth.test.ts":["t",["createMockSupabaseUser:58:(overrides:Partial<PinPointSupabaseUser> = {}, organizationId:string = SEED_TEST_IDS.ORGANIZATIONS.primary,):PinPointSupabaseUser::","createCompetitorOrgUser:88:(overrides:Partial<PinPointSupabaseUser> = {},):PinPointSupabaseUser:createMockSupabaseUser:","createMockRequest:100:(headers:Record<string, string> = {}):NextRequest::","createMockDrizzleClient:108:():DrizzleClient::","createMockOrganization:121:(organizationId:string = SEED_TEST_IDS.ORGANIZATIONS.primary,)::","createCompetitorOrganization:138:():createMockOrganization:","createMockMembership:142:(userId:string = SEED_TEST_IDS.USERS.ADMIN, organizationId:string = SEED_TEST_IDS.ORGANIZATIONS.primary, permissions:string[] = [\"upload:create\", \"file:manage\"],)::","createCompetitorMembership:163:(permissions:string[] = [\"upload:create\"]):createMockMembership:"]],".archived-tests-2025-08-23/sr/server/db/__tests__/drizzle-singleton.test.ts":["t",["importDrizzleModule:94:async ()::","resetSingleton:99:()::","createMockDrizzleInstance:28:()::"]],".archived-tests-2025-08-23/sr/server/db/__tests__/drizzle-test-helpers.ts":["t",["configureDevelopmentMocks:54:():void:createLocalhost5432URL:","configureProductionMocks:81:():void:createRemoteURL:","configureCIMocks:111:():void:createRemoteURL:","configureCustomEnvironment:144:(config:EnvironmentConfig):void::","createLocalhost5432URL:182:(database = \"postgres\"):string::","createRemoteURL:202:(host:string, database = \"postgres\"):string::","create127001URL:221:(database = \"postgres\"):string::","expectSSLConfiguration:243:(sslSetting:SSLSetting):void::","expectPoolConfiguration:266:(maxConnections:number):void::","expectTimeoutConfiguration:291:(idle:number, connect:number,):void::","expectLoggingConfiguration:318:(enabled:boolean):void::","importDrizzleModule:348:async ():Promise<::","setupDrizzleTestEnvironment:449:(customEnvSetup?:()::","validateDrizzleConfiguration:489:(expectedConfig:{ ssl:SSLSetting; maxConnections:number; idleTimeout:number; connectTimeout:number; logging:boolean; }):void:expectLoggingConfiguration,expectPoolConfiguration,expectSSLConfiguration,expectTimeoutConfiguration:","testSingletonBehavior:521:async (moduleImporter:()::","createMockPostgresInstance:363:()::","createMockDrizzleInstance:370:()::"]],".archived-tests-2025-08-23/sr/server/services/__tests__/roleService.test.ts":["t",["createMockDrizzleClient:64:()::"],{"covering":["4",[]]}],".archived-tests-2025-08-23/sr/test/VitestTestWrapper.tsx":["t",["MockSessionProvider:47:({ children, }:{ children:ReactNode; session:Session | null; }):React.JSX.Element::","createMockUser:58:(overrides:Partial<User> = {}):User::","createMockMembership:76:(overrides:Partial<{ id:string; userId:string; organizationId:string; role:string; permissions:string[]; createdAt:Date; updatedAt:Date; }> = {},):::","createMockSessionHook:111:(session:Session | null, sessionLoading = false,)::","createMockMembershipQuery:132:(permissions:string[] = [], role = \"Member\", options:{ isLoading?:boolean; isError?:boolean; error?:Error | null; } = {},)::","createMockSupabaseUser:162:(overrides:Partial<PinPointSupabaseUser> = {},):PinPointSupabaseUser::","createServerMockContext:218:(overrides:Partial<ServerMockContext> = {},):ServerMockContext:createMockSupabaseUser:","VitestTestWrapper:317:({ children, session = { user:createMockUser()::"]],".archived-tests-2025-08-23/sr/test/constants/seed-test-ids.ts":["t",["createMockAdminContext:316:():TestMockContext::","createMockMemberContext:323:(memberNumber:1 | 2 = 1,):TestMockContext::"]],".archived-tests-2025-08-23/sr/test/context.ts":["t",["createTestContext:7:():::"]],".archived-tests-2025-08-23/sr/test/database-test-helpers.ts":["t",["cleanupTestData:82:async (db:DrizzleClient, testIds:TestDataIds,):Promise<void>::","createTestOrganization:256:async (db:DrizzleClient, orgType:\"primary\" | \"competitor\" = \"primary\",):Promise<Organization>::","createTestUser:293:async (db:DrizzleClient, overrides:Partial<User> = {},):Promise<User>::","createTestUserWithMembership:343:async (db:DrizzleClient, organizationId:string, roleType:\"admin\" | \"manager\" | \"member\" = \"member\", overrides:Partial<User> = {},):Promise<::","createTestMachine:407:async (db:DrizzleClient, organizationId:string, overrides:Partial<Machine> = {},):Promise<::","createTestIssue:502:async (db:DrizzleClient, machineId:string, organizationId:string, overrides:Partial<Issue> = {},):Promise<::","createMultiTenantTestEnvironment:624:async (db:DrizzleClient,):Promise<::"]],".archived-tests-2025-08-23/sr/test/examples/dual-track-testing-examples.test.ts":["t",["calculateIssuePriority:370:(params:{ downtime:number; machineImportance:string; businessImpact:string; }):string::","escalateIssueIfNeeded:385:async (db:any, issueId:string, metrics:{ downtime:number; customerComplaints:number; revenueImpact:number; },)::","getIssuesForMachine:427:async (db:any, machineId:string)::","calculateMaintenanceSchedule:438:(params:{ machineAge:number; usageHours:number; lastMaintenance:Date; })::","generateOrganizationalReport:463:async (db:any):calculateAvgResolutionTime,getTopMachinesByIssues:","calculateAvgResolutionTime:477:(issues:any[])::","getTopMachinesByIssues:490:(issues:any[])::"],{"ReportingService":["505",["constructor:506:(private db:any):groupByPriority:","generateReport:507:async ()::","__init__:506:(private db:any):groupByPriority:"]]}],".archived-tests-2025-08-23/sr/test/factories/roleFactory.ts":["t",["create:346:(overrides:Partial<TestOrganization> = {},):TestOrganization::","createIssuePermissions:93:():TestPermission[]:create:","createMachinePermissions:104:():TestPermission[]:create:","createLocationPermissions:113:():TestPermission[]:create:","createAttachmentPermissions:122:():TestPermission[]:create:","createAdminPermissions:130:():TestPermission[]:create:","createAllPermissions:141:():TestPermission[]:createAdminPermissions,createAttachmentPermissions,createIssuePermissions,createLocationPermissions,createMachinePermissions:","createUnauthenticatedRole:172:(organizationId = \"org-1\",):TestRole:create:","createMemberRole:184:(organizationId = \"org-1\"):TestRole:create:","createTechnicianRole:199:(organizationId = \"org-1\"):TestRole:create:","createAdminRole:220:(organizationId = \"org-1\"):TestRole:create,createAllPermissions:","createCustomRole:230:(name:string, permissions:TestPermission[], organizationId = \"org-1\",):TestRole:create:","createSystemRoleSet:244:(organizationId = \"org-1\"):TestRole[]:createAdminRole,createMemberRole,createTechnicianRole,createUnauthenticatedRole:","createWithMemberCount:253:(memberCount:number, overrides:Partial<TestRole> = {},):TestRole:create:","createWithRole:526:(roleName:\"Unauthenticated\" | \"User\" | \"Technician\" | \"Admin\", organizationId = \"org-1\",):createWithPermissions,getRolePermissions:","createWithUser:297:(userId:string, userName:string, userEmail:string, role:TestRole,):TestMembership:create:","createMultipleForOrganization:316:(organizationId:string, userCount = 3,):TestMembership[]:createSystemRoleSet,createWithUser:","createWithRoles:360:(name = \"Test Organization\", subdomain = \"test\",):TestOrganization:create,createSystemRoleSet:","createWithMemberships:375:(name = \"Test Organization\", subdomain = \"test\", memberCount = 3,):TestOrganization:create,createMultipleForOrganization,createSystemRoleSet:","createMultipleForTesting:396:(count = 2):TestOrganization[]:createWithMemberships:","createMatrix:419:():Record<string, string[]>::","getRolePermissions:466:(roleName:string):string[]:createMatrix:","hasPermission:471:(roleName:string, permission:string):boolean:getRolePermissions:","getPermissionDependencies:476:():Record<string, string[]>::","createWithPermissions:497:(permissions:string[], organizationId = \"org-1\",):create,createCustomRole,createWithRole:","createAdmin:534:(organizationId = \"org-1\"):createWithRole:","createTechnician:538:(organizationId = \"org-1\"):createWithRole:","createUser:542:(organizationId = \"org-1\"):createWithRole:","createUnauthenticated:546:(organizationId = \"org-1\"):createWithRole:"]],".archived-tests-2025-08-23/sr/test/helpers/archetype-validator.ts":["t",["validateTestArchetype:259:(filePath:string, fileContent?:string,):ValidationResult:detectArchetype,validateArchetypeCompliance,validateErrorHandling,validateImportStructure,validateMemorySafety,validatePerformancePatterns,validateRLSContext:","detectArchetype:307:(content:string, _fileName:string,):number | null::","validateMemorySafety:345:(content:string, filePath:string, result:ValidationResult,):void:getLineNumber:","validateRLSContext:413:(content:string, filePath:string, result:ValidationResult,):void::","validateArchetypeCompliance:459:(content:string, filePath:string, result:ValidationResult,):void::","validateImportStructure:504:(content:string, filePath:string, result:ValidationResult,):void:getLineNumber:","validateErrorHandling:554:(content:string, filePath:string, result:ValidationResult,):void::","validatePerformancePatterns:593:(content:string, filePath:string, result:ValidationResult,):void::","getLineNumber:644:(content:string, index:number):number::","validateTestFiles:651:(filePaths:string[],):Map<string, ValidationResult>:validateTestArchetype:","generateValidationReport:691:(results:Map<string, ValidationResult>,):string::","validateSingleFile:796:(filePath:string):void:generateValidationReport,validateTestArchetype:"]],".archived-tests-2025-08-23/sr/test/helpers/createSeededAdminTestContext.ts":["t",["createSeededAdminTestContext:72:async (txDb:TestDatabase, organizationId:string, userId:string, options:AdminContextOptions = {},):Promise<SeededAdminTestContext>::"]],".archived-tests-2025-08-23/sr/test/helpers/createSeededCollectionTestContext.ts":["t",["createPublicTestContext:76:async (txDb:TestDatabase, organizationId:string,):Promise<SeededCollectionTestContext>::","createSeededCollectionTestContext:178:async (txDb:TestDatabase, organizationId:string, userId:string, options:SeededCollectionTestOptions = {},):Promise<SeededCollectionTestContext>::"]],".archived-tests-2025-08-23/sr/test/helpers/createSeededIssueTestContext.ts":["t",["createSeededIssueTestContext:61:async (txDb:TestDatabase, organizationId:string, userId:string,):Promise<SeededIssueTestContext>::"]],".archived-tests-2025-08-23/sr/test/helpers/createSeededLocationTestContext.ts":["t",["createSeededLocationTestContext:55:async (db:TestDatabase, organizationId:string, userId:string, options:CreateSeededLocationTestContextOptions = {},):Promise<TRPCContext>::","createPrimaryAdminContext:187:async (db:TestDatabase, options?:CreateSeededLocationTestContextOptions,):Promise<TRPCContext>:createSeededLocationTestContext:","createCompetitorAdminContext:202:async (db:TestDatabase, options?:CreateSeededLocationTestContextOptions,):Promise<TRPCContext>:createSeededLocationTestContext:","createPrimaryMemberContext:217:async (db:TestDatabase, memberNumber:1 | 2 = 1, options?:CreateSeededLocationTestContextOptions,):Promise<TRPCContext>:createSeededLocationTestContext:"]],".archived-tests-2025-08-23/sr/test/helpers/createSeededMachineTestContext.ts":["t",["createSeededMachineTestContext:55:async (db:TestDatabase, organizationId:string, userId:string, options:CreateSeededMachineTestContextOptions = {},):Promise<TRPCContext>::","createPrimaryAdminContext:182:async (db:TestDatabase, options?:CreateSeededMachineTestContextOptions,):Promise<TRPCContext>:createSeededMachineTestContext:","createCompetitorAdminContext:197:async (db:TestDatabase, options?:CreateSeededMachineTestContextOptions,):Promise<TRPCContext>:createSeededMachineTestContext:","createPrimaryMemberContext:212:async (db:TestDatabase, memberNumber:1 | 2 = 1, options?:CreateSeededMachineTestContextOptions,):Promise<TRPCContext>:createSeededMachineTestContext:"]],".archived-tests-2025-08-23/sr/test/helpers/createSeededNotificationTestContext.ts":["t",["createSeededNotificationTestContext:13:async (txDb:TestDatabase, organizationId:string, userId:string, options?:CreateSeededNotificationTestContextOptions,):Promise<TRPCContext>::"]],".archived-tests-2025-08-23/sr/test/helpers/integration-test-seeds.ts":["t",["seedProductionInfrastructure:44:async (db:TestDatabase,):Promise<::","seedProductionSampleData:60:async (db:TestDatabase, organizationId:string,):Promise<void>::","seedTestInfrastructure:81:async (db:TestDatabase,):Promise<TestOrganization>:seedProductionInfrastructure:","seedTestSampleData:92:async (db:TestDatabase, organizationId:string,):Promise<void>:seedProductionSampleData:","seedCompleteTestData:104:async (db:TestDatabase,):Promise<TestOrganization>:seedTestInfrastructure,seedTestSampleData:"]],".archived-tests-2025-08-23/sr/test/helpers/multi-tenant-test-helpers.ts":["t",["auditMultiTenantSecurity:101:async (db:TestDatabase, options:{ orgCount?:number; testDataSize?:\"small\" | \"medium\" | \"large\"; includePerformance?:boolean; } = {},):Promise<SecurityAuditResult>:auditTableIsolation,createAuditTestData,getDataSizeConfig,measureRLSPerformance:","testPermissionBoundaries:185:async (db:TestDatabase, userId:string, orgId:string, permissionSet:string[],):Promise<PermissionTestResult[]>::","testCrossOrgAccess:327:async (db:TestDatabase, sourceOrg:OrgTestContext, targetOrg:OrgTestContext,):Promise<CrossOrgAccessResult[]>::","measureRLSPerformance:411:async (db:TestDatabase, table:{ name:string; schema:any }, org:OrgTestContext,):Promise<::","validateRLSPolicies:498:async (db:TestDatabase):Promise<::","getDataSizeConfig:568:(size:\"small\" | \"medium\" | \"large\")::","createAuditTestData:582:async (db:TestDatabase, org:OrgTestContext, dataSize:{ locations:number; machines:number; issues:number },)::","auditTableIsolation:637:async (db:TestDatabase, table:{ name:string; schema:any }, testOrgs:OrgTestContext[],):Promise<SecurityViolation[]>::"]],".archived-tests-2025-08-23/sr/test/helpers/organization-context.ts":["t",["createOrgContext:83:async (db:TestDatabase, orgSuffix:string = Math.random()::","setupMultiOrgContext:400:async (db:TestDatabase, count = 2,):Promise<Record<string, OrgTestContext>>:createOrgContext:","createOrgTestData:422:async (db:TestDatabase, orgContext:OrgTestContext, options:{ locationCount?:number; machineCount?:number; issueCount?:number; } = {},):Promise<::","verifyOrgIsolation:547:async (db:TestDatabase, org1Id:string, org2Id:string,):Promise<::","getUserMembership:632:async (db:TestDatabase, userId:string, organizationId:string,)::"]],".archived-tests-2025-08-23/sr/test/helpers/pglite-test-setup.ts":["t",["applyDrizzleSchema:47:async (db:TestDatabase):Promise<void>::","verifyMigrationComplete:68:async (db:TestDatabase):Promise<void>::","createTestDatabase:120:async ():Promise<TestDatabase>:applyDrizzleSchema,configureForBusinessLogicTesting,verifyMigrationComplete:","configureForBusinessLogicTesting:150:async (db:TestDatabase,):Promise<void>::","createCleanTestDatabase:221:async ():Promise<::","createInfrastructureOnlyTestDatabase:254:async ():Promise<::","createSeededTestDatabase:279:async ():Promise<::","withTransaction:329:async (db:TestDatabase, testFn:(db:TestDatabase)::","cleanupTestDatabase:358:async (db:TestDatabase):Promise<void>::","isRLSBypassed:388:async (db:TestDatabase):Promise<boolean>::","getCurrentTestRole:406:async (db:TestDatabase,):Promise<string | null>::","getCurrentTestMode:425:async (db:TestDatabase,):Promise<string | null>::","verifyIntegrationTesterMode:447:async (db:TestDatabase):Promise<::","getIntegrationTesterDatabaseUrl:501:():string::","verifyIntegrationTesterSetup:524:async ():Promise<boolean>:getIntegrationTesterDatabaseUrl:"]],".archived-tests-2025-08-23/sr/test/helpers/rls-security-context.ts":["t",["withRLSSecurityContext:27:async (db:TestDatabase, context:RLSContext, fn:(db:TestDatabase):esc:","clearRLSSecurityContext:53:async (db:TestDatabase):Promise<void>::","esc:33:(v:string):esc:"]],".archived-tests-2025-08-23/sr/test/helpers/rls-test-context.ts":["t",["createTestUser:149:(userId:string, organizationId:string, options:{ email?:string; name?:string; role?:string; } = {},):RLSTestUser::","withTestUser:203:async (userId:string, organizationId:string, operation:()::","withRLSContext:266:async (db:TestDatabase, userId:string, organizationId:string, operation:(db:TestDatabase)::","verifyRLSContext:318:async (db:TestDatabase, expected:{ organizationId?:string; userId?:string; role?:string; email?:string; },):Promise<void>::","withAdminContext:382:async (db:TestDatabase, operation:(db:TestDatabase)::","withMemberContext:403:async (db:TestDatabase, operation:(db:TestDatabase)::","withFullRLSContext:448:async (db:TestDatabase, userId:string, organizationId:string, operation:(db:TestDatabase)::","verifyOrganizationalIsolation:526:async (db:TestDatabase, testFunction:(db:TestDatabase)::","mockNextHeaders:579:():void::"],{"RLSContextManager":["84",["setUser:87:(user:RLSTestUser):void::","clearUser:91:():void::","getCurrentUser:95:():RLSTestUser | null::","getMockSupabaseResponse:99:():MockSupabaseAuthResponse::","getMockSupabaseClient:113:():MockSupabaseClient::","setOriginalCreateClient:128:(original:unknown):void::","getOriginalCreateClient:132:():unknown::"]]}],".archived-tests-2025-08-23/sr/test/helpers/roleTestHelpers.ts":["t",["getPermissionTestScenarios:18:(requiredPermission:string):::","getRoleTestScenarios:51:(requiredPermission:string):::","getMultiTenantTestScenarios:71:():::","createPermissionTestContexts:102:(permission:string):::","createMultiTenantTestContexts:127:():::","validatePermissionInheritance:156:(role:TestRole, expectedPermissions:string[],):boolean::","validatePermissionDependencies:169:(permissions:string[]):::","generatePermissionCombinations:194:():::","getPermissionEscalationScenarios:270:():::","validateRoleSystemIntegrity:317:(roles:TestRole[]):::","createTestSuiteData:366:():::"]],".archived-tests-2025-08-23/sr/test/helpers/session-context.ts":["t",["setTestSession:26:async (db:TestDatabase, orgId:string, userId?:string, role?:string, additionalContext?:Record<string, string>,):Promise<void>::","getCurrentSession:63:async (db:TestDatabase):Promise<::","clearTestSession:107:async (db:TestDatabase):Promise<void>::","escalate:531:async (to:\"member\" | \"admin\")::"],{"MultiContextManager":["284",["constructor:292:(private db:TestDatabase)::","switchTo:319:async (contextId:string):Promise<void>::","getContextIds:341:():string[]::","clearContexts:348:():void::","__init__:292:(private db:TestDatabase)::"]]}],".archived-tests-2025-08-23/sr/test/helpers/supabase-test-setup.ts":["t",["ensureTestBucket:32:async ():Promise<void>::","clearTestStorage:56:async ():Promise<void>:getAllFilePaths:","getAllFilePaths:98:async (bucketName:string, folder:string,):Promise<string[]>:getAllFilePaths:","createTestBucket:132:async (bucketName:string, options:{ public?:boolean; fileSizeLimit?:number; allowedMimeTypes?:string[]; } = {},):Promise<void>::","deleteTestBucket:160:async (bucketName:string):Promise<void>:clearStorageBucket:","clearStorageBucket:175:async (bucketName:string):Promise<void>:getAllFilePaths:","uploadTestFile:192:async (bucketName:string, filePath:string, file:File | Blob,):Promise<string>::","verifyFileExists:218:async (bucketName:string, filePath:string,):Promise<boolean>::","getTestFileUrl:235:(bucketName:string, filePath:string):string::"]],".archived-tests-2025-08-23/sr/test/helpers/test-id-generator.ts":["t",["generateTestId:38:(prefix = \"test\"):never::","generateTestEmail:45:(prefix = \"test\"):never::","generateTestSubdomain:52:(prefix = \"test\"):never::","generateTestIds:59:(count:number, prefix = \"test\"):never::"]],".archived-tests-2025-08-23/sr/test/helpers/worker-scoped-db.ts":["t",["withIsolatedTest:84:async (db:TestDatabase, testFn:(tx:TestDatabase)::","withExplicitRollback:161:async (db:TestDatabase, testFn:(tx:TestDatabase)::","_cleanupAllTestData:207:async (_db:TestDatabase):Promise<void>::","setTestSession:264:async (db:TestDatabase, orgId:string, userId?:string, role?:string,):Promise<void>::","withRLSTest:329:async (db:TestDatabase, orgId:string, testFn:(tx:TestDatabase):withIsolatedTest:","withMultiOrgTest:348:async (db:TestDatabase, contexts:{ orgId:string; role?:string; userId?:string }[], testFn:( setContext:(contextIndex:number):setContext,setTestSession,withIsolatedTest:","withBusinessLogicTest:401:async (db:TestDatabase, testFn:(tx:TestDatabase):withIsolatedTest:","withRLSAwareTest:430:async (db:TestDatabase, orgId:string, testFn:(tx:TestDatabase):withRLSTest:","withCrossOrgTest:454:async (db:TestDatabase, contexts:{ orgId:string; role?:string; userId?:string }[], testFn:( setContext:(contextIndex:number):withMultiOrgTest:","withRLSEnabledTest:475:async (db:TestDatabase, testFn:(tx:TestDatabase):withIsolatedTest:","setContext:357:async (contextIndex:number):Promise<void>:setTestSession:"]],".archived-tests-2025-08-23/sr/test/mockContext.ts":["t",["createMockContext:94:():MockContext:createMockServiceFactory:","resetMockContext:153:(ctx:MockContext):void::","createMockServiceFactory:47:():DeepMockProxy<ServiceFactory>::"]],".archived-tests-2025-08-23/sr/test/mockUtils.ts":["t",["createMockUser:147:(overrides:Partial<MockUser> = {}):MockUser::","createMockStatus:160:(overrides:Partial<MockIssueStatus> = {},):MockIssueStatus::","createMockPriority:176:(overrides:Partial<MockPriority> = {},):MockPriority::","createMockModel:192:(overrides:Partial<MockModel> = {}):MockModel::","createMockLocation:205:(overrides:Partial<MockLocation> = {},):MockLocation::","createMockMachine:219:(overrides:Partial<MockMachine> = {},):MockMachine:createMockLocation,createMockModel:","createMockIssue:244:(overrides:Partial<MockIssue> = {}):MockIssue:createMockMachine,createMockPriority,createMockStatus,createMockUser:","createMockIssuesList:282:(options:MockFactoryOptions<MockIssue> = {},):MockIssue[]:createMockIssue:","createMockLocations:380:(options:MockFactoryOptions<MockLocation> = {},):MockLocation[]:createMockLocation:","createMockStatuses:403:(options:MockFactoryOptions<MockIssueStatus> = {},):MockIssueStatus[]:createMockStatus:","createMockMachines:428:(options:MockFactoryOptions<MockMachine> = {},):MockMachine[]:createMockMachine,createMockModel:","createMockUsers:451:(options:MockFactoryOptions<MockUser> = {},):MockUser[]:createMockUser:","createMockTRPCQueryResult:476:(data:T, options:Partial< Pick<MockTRPCQueryResult<T>, \"isLoading\" | \"isError\" | \"error\"> > = {},):MockTRPCQueryResult<T>::","createMockTRPCLoadingResult:495:():MockTRPCQueryResult<\n  T | undefined\n>::","createMockTRPCErrorResult:510:(error:Error = new Error(\"Mock error\")::","createIssueListTRPCMocks:526:():::","createPermissionScenario:624:(permissions:string[], role = \"Custom\",):::","createRealisticIssueDataSet:649:():::"]],".archived-tests-2025-08-23/sr/test/msw/handlers.ts":["t",["createMockUser:31:(overrides:Partial<User> = {}):User::","createMockOrganization:47:(overrides:Partial<Organization> = {},):Organization::","createMockMembership:59:(overrides:{ userId?:string; role?:string; organizationId?:string; permissions?:string[]; } = {},)::","mockUserProfile:77:(user:Partial<User> = {})::","mockCurrentMembership:104:(membership:Parameters<typeof createMockMembership>[0] = {},):createMockMembership:","mockCurrentOrganization:115:(org:Partial<Organization> = {})::","mockUserWithPermissions:121:(permissions:string[])::","mockAdminUser:125:()::","mockUserWithoutPermissions:148:()::","mockUnauthorizedError:155:()::","mockForbiddenError:161:(permission:string)::","mockNotFoundError:167:(resource:string)::"]],".archived-tests-2025-08-23/sr/test/msw/setup.ts":["t",["getTestBaseUrl:8:():string::","ensureListening:41:()::","ensureClosed:51:()::"]],".archived-tests-2025-08-23/sr/test/permissionTestHelpers.ts":["t",["createAuthenticatedContext:101:(permissions:readonly string[] = PERMISSION_SCENARIOS.MEMBER.permissions,):VitestMockContext &::","createPublicContext:189:():VitestMockContext &::","createCrossOrgContext:209:(organizationId = \"other-org\", permissions:readonly string[] = PERMISSION_SCENARIOS.MEMBER.permissions,):VitestMockContext &::","createPermissionTestCases:243:(requiredPermission:string, additionalCases:PermissionTestCase[] = [],):PermissionTestCase[]::","expectAuthenticationRequired:281:async (routerCall:(caller:TRouter):createPublicContext:","expectOrganizationRequired:295:async (routerCall:(caller:TRouter):createAuthenticatedContext:","expectPermissionRequired:312:async (routerCall:(caller:TRouter):createAuthenticatedContext:","expectOrganizationIsolation:333:async (routerCall:(caller:TRouter)::","createPermissionTestSuite:358:(name:string, options:PermissionTestSuiteOptions<TRouter>,):createAuthenticatedContext,createPermissionTestCases,expectAuthenticationRequired,expectOrganizationIsolation,expectOrganizationRequired,expectPermissionRequired:","setupPermissionMocks:485:(context:VitestMockContext, mockData:{ issue?:any; machine?:any; location?:any; membership?:any; [key:string]:any; },)::"]],".archived-tests-2025-08-23/sr/test/routerTestPatterns.ts":["t",["createRouterTestContext:41:(router:AppRouter):RouterTestContext::","testAuthenticatedProcedure:66:(testName:string, procedureCall:(context:RouterTestContext)::","testPublicProcedure:106:(testName:string, procedureCall:(context:RouterTestContext)::","testAdminOnlyProcedure:135:(testName:string, procedureCall:(context:RouterTestContext)::","testServiceIntegration:174:(serviceName:keyof VitestMockContext[\"services\"], methodName:string, options:{ mockReturnValue?:any; expectedCallArgs?:any[]; mockSetup?:(mockService:any)::","testInputValidation:220:(procedureCall:(input:any, context:RouterTestContext):createRouterTestContext:","testOrganizationScoping:250:(procedureCall:(context:RouterTestContext)::","createRouterTestSuite:397:(options:RouterTestSuiteOptions<TInput, TOutput>,):testAdminOnlyProcedure,testAuthenticatedProcedure,testInputValidation,testOrganizationScoping,testPublicProcedure:"]],".archived-tests-2025-08-23/sr/test/seed-data-helpers.ts":["t",["getCachedSeedData:55:async (cacheKey:string, fetchFn:()::","clearSeedDataCache:71:():void::","getUserWithRoles:82:async (email:string):Promise<SeededUser>::","getSeededAdmin:152:async ():Promise<SeededUser>:getCachedSeedData,getUserWithRoles:","getSeededMember:162:async ():Promise<SeededUser>:getCachedSeedData,getUserWithRoles:","getSeededPlayer:172:async ():Promise<SeededUser>:getCachedSeedData,getUserWithRoles:","getSeededUserByEmail:181:async (email:string):Promise<SeededUser>:getCachedSeedData,getUserWithRoles:","getSeededOrganization:208:async ():Promise<SeededOrganization>:getCachedSeedData:","getSeededIssue:260:async (titleContains:string,):Promise<SeededIssue>:getCachedSeedData:","getSeededIssues:329:async (limit = 10):Promise<SeededIssue[]>:getCachedSeedData:","getSeededOrganizationId:392:async ():Promise<string>:getSeededOrganization:","getSeededIssueStatuses:400:async ():Promise<IssueStatus[]>:getCachedSeedData,getSeededOrganizationId:","getSeededPriorities:413:async ():Promise<Priority[]>:getCachedSeedData,getSeededOrganizationId:","createSupabaseUserFromSeeded:456:(user:SeededUser):SupabaseUser::","getSeededAdminSupabaseUser:500:async ():Promise<SupabaseUser>:createSupabaseUserFromSeeded,getSeededAdmin:","getSeededMemberSupabaseUser:508:async ():Promise<SupabaseUser>:createSupabaseUserFromSeeded,getSeededMember:","getSeededPlayerSupabaseUser:516:async ():Promise<SupabaseUser>:createSupabaseUserFromSeeded,getSeededPlayer:","setupAuthTestData:529:async ():createSupabaseUserFromSeeded,getSeededAdmin,getSeededMember,getSeededOrganization,getSeededPlayer:","cleanupSeedDataHelpers:560:():void:clearSeedDataCache:"]],".archived-tests-2025-08-23/sr/test/setup/issueListTestSetup.ts":["t",["createIssueListMocks:49:():IssueListMocks::","setupIssueListTest:191:(scenario:IssueListTestScenario, mocks:ReturnType<typeof createIssueListMocks>,):::","createWorkflowIssues:308:():ReturnType<\n  typeof createMockIssuesList\n>::","createDefaultMachineData:110:():{\n  id:string;\n  name:string;\n  organizationId:string;\n  modelId:string;\n  locationId:string;\n  ownerId:null;\n  model:{\n    id:string;\n    name:string;\n    manufacturer:string;\n    year:number;\n  };\n  location:{\n    id:string;\n    name:string;\n    organizationId:string;\n  };\n}[]::","setupDefaultResponses:230:():void::","resetMocks:271:():void:setupDefaultResponses:"]],".archived-tests-2025-08-23/sr/test/setup/viTestMocks.ts":["t",["setupNavigationMocks:24:(mocks:IssueListMocks):void::","setupTRPCMocks:37:(mocks:IssueListMocks):void::","setupPermissionMocks:105:(mocks:IssueListMocks):void::","setupAllIssueListMocks:115:(mocks:IssueListMocks):void:setupNavigationMocks,setupPermissionMocks,setupTRPCMocks:"]],".archived-tests-2025-08-23/sr/test/templates/02-service-business-logic-test.template.ts":["t",["createTestData:316:async (db:any):Promise<void>::"],{"name":["348",[]]}],".archived-tests-2025-08-23/sr/test/templates/03-pglite-integration-test.template.ts":["t",["createBasicTestData:393:async (db:any):Promise<void>::","createComplexTestDataset:418:async (db:any):Promise<void>:createBasicTestData:"]],".archived-tests-2025-08-23/sr/test/templates/04-react-component-unit-test.template.tsx":["t",["ThrowingComponent:391:():JSX.Element::"]],".archived-tests-2025-08-23/sr/test/testDataFactories.ts":["t",["createIssueFactory:18:(options:FactoryOptions = {}):createMachineFactory,createPriorityFactory,createSingleIssue,createStatusFactory,createUserFactory:","createSingleIssue:21:(customOverrides:Record<string, any> = {}):createMachineFactory,createPriorityFactory,createStatusFactory,createUserFactory:","createCommentFactory:117:(options:FactoryOptions = {}):createSingleComment,createUserFactory:","createSingleComment:120:(customOverrides:Record<string, any> = {}):createUserFactory:","createUserFactory:179:(options:FactoryOptions = {})::","createMachineFactory:262:(options:FactoryOptions = {}):createLocationFactory,createModelFactory:","createModelFactory:305:(options:FactoryOptions = {})::","createLocationFactory:331:(options:FactoryOptions = {})::","createStatusFactory:363:(options:FactoryOptions = {})::","createPriorityFactory:386:(options:FactoryOptions = {})::","createRoleFactory:404:(options:FactoryOptions = {})::","createOrganizationFactory:427:(options:FactoryOptions = {})::","createSessionFactory:443:(options:FactoryOptions = {}):createUserFactory:","createAttachmentFactory:455:(options:FactoryOptions = {}):createSingleAttachment,createUserFactory:","createSingleAttachment:458:(customOverrides:Record<string, any> = {},):createUserFactory:","createActivityFactory:486:(options:FactoryOptions = {}):createSingleActivity,createUserFactory:","createSingleActivity:489:(customOverrides:Record<string, any> = {}):createUserFactory:","getSingleIssue:519:(overrides:Record<string, any> = {}):createIssueFactory:","createComplexIssueFactory:526:(options:FactoryOptions = {}):createActivityFactory,createAttachmentFactory,createCommentFactory,getSingleIssue:","createIssueWithMixedComments:542:(options:FactoryOptions = {}):getSingleIssue:","createIssueRouterContext:605:(options:{ userId?:string; organizationId?:string; permissions?:string[]; role?:string; } = {},):createUserFactory:","createMockServices:779:():any::","createTRPCCallerForIssues:807:(options:{ permissions?:string[]; userId?:string; organizationId?:string; role?:string; mockContext?:any; } = {},):createIssueRouterContext,createMockServices:","createIssueDbMocks:856:(context:any)::"]],".archived-tests-2025-08-23/sr/test/utils/mock-ids.ts":["t",["createNumberedId:13:(pattern:string, number:number):string::","createAdminId:70:(base:string, suffix:string):string::","createNumberedVariation:77:(pattern:string, number:number,):string:createNumberedId:"]],".archived-tests-2025-08-23/sr/test/vitestMockContext.ts":["t",["createVitestMockContext:112:():VitestMockContext::"]],"e2e/auth-login-flow.e2e.test.ts":["t",["testing:20:(Archetype 1)::","authenticateAsTestAdmin:469:async (page:Page)::","authenticateAsTestMember:502:async (page:Page)::"]],"e2e/dashboard-auth-flow.e2e.test.ts":["t",["authenticateTestUser:337:async (page:Page)::","setOrganizationContext:344:async (page:Page, orgId:string)::","clearAuthentication:350:async (page:Page)::"]],"e2e/helpers/unified-dashboard.ts":["t",["logout:6:async (page:Page)::"]],"middleware.ts":["t",["middleware:9:async (request:NextRequest):Promise<NextResponse>:createServerClient,getSubdomain,setAll:","getSubdomain:112:(host:string):string | null::"]],"s/convert-snake-case.ts":["t",["parseArgs:47:():Options::","log:72:(...m:any[]):log:","collectSchemaColumns:77:async ():Promise<Set<string>>::","snakeToCamel:99:(s:string):string::","buildMapping:114:async ():Promise<MappingEntry[]>:collectSchemaColumns,snakeToCamel:","listSourceFiles:138:():string[]::","includeFilter:159:(path:string):boolean::","applyMappingAll:173:(content:string, mapping:MappingEntry[],):::","applyMappingProperties:201:(content:string, mapping:MappingEntry[],):::","applyMappingToContent:248:(content:string, mapping:MappingEntry[], mode:Mode,):::","processFiles:258:async ():applyMappingToContent,buildMapping,listSourceFiles,log:"]],"s/db-reset.sh":["s",["log_info:0:()::","log_success:0:()::","log_warning:0:()::","log_error:0:()::","log_step:0:()::","validate_environment:0:()::","validate_dependencies:0:()::","validate_local_env_safety:0:()::","execute_sql_seeds:0:():log_info:","reset_supabase_database:0:()::","generate_typescript_types:0:()::","main:0:()::"]],"s/debug-colors.ts":["t",["hslToHex:18:(h:number, s:number, l:number):string:f:","parseHslString:30:(hslStr:string):::","f:21:(n:number)::"]],"s/generate-sql-constants.ts":["t",["generateSQLConstants:22:()::","main:191:():generateSQLConstants:"]],"s/safe-curl.sh":["s",["show_usage:0:()::Function to show usage","normalize_url:0:()::Function to normalize URL","extract_host:0:()::Function to extract host from URL","extract_port:0:()::Function to extract port from URL","extract_protocol:0:()::Function to extract protocol from URL","is_host_allowed:0:()::Function to check if host is allowed","is_protocol_allowed:0:()::Function to check if protocol is allowed","is_port_allowed:0:()::Function to check if port is in allowed range"]],"s/safe-psql.sh":["s",["show_usage:0:()::Function to show usage","is_host_allowed:0:()::Function to check if host is allowed","is_database_allowed:0:()::Function to check if database is allowed"]],"s/setup-pgtap.sh":["s",["print_status:0:()::Function to print colored output","print_warning:0:()::","print_error:0:()::","detect_os:0:()::Detect OS and package manager","install_pgtap:0:()::Install pgTAP extension","install_pg_prove:0:()::Install pg_prove (Perl test runner)","setup_test_database:0:():print_error:Setup database for testing","create_test_runner:0:()::Create test runner script","update_package_json:0:()::Update package.json with test scripts","create_ci_config:0:()::Create CI/CD configuration","verify_installation:0:()::Verify installation","main:0:()::Main execution"]],"s/validate-drizzle-crud.ts":["t",["main:848:async ()::"],{"DrizzleCRUDValidator":["39",["constructor:46:(minimalMode = false)::","testConnection:60:async ():Promise<boolean>::","testInsertOperations:132:async ():Promise<void>::","testSelectOperations:244:async ():Promise<void>::","testUpdateOperations:348:async ():Promise<void>::","testDeleteOperations:443:async ():Promise<void>::","testTransactionOperations:550:async ():Promise<void>::","generateReport:668:():void::","runMinimalTests:739:async ():Promise<void>::","runAllTests:815:async ():Promise<void>::","__init__:46:(minimalMode = false)::"]]}],"sr/app/api/admin/export/activity-log/route.ts":["t",["GET:8:async ():Promise<Response>::"]],"sr/app/api/dev/users/route.ts":["t",["GET:11:async ():Promise<NextResponse>::"]],"sr/app/api/health/route.ts":["t",["GET:7:async ():Promise<NextResponse>::"]],"sr/app/api/organizations/public/route.ts":["t",["GET:8:async (_request:NextRequest):Promise<NextResponse>::"]],"sr/app/api/qr/[qrCodeId]/route.ts":["t",["GET:8:async (_request:NextRequest, { params }:{ params:Promise<{ qrCodeId:string }> },):Promise<NextResponse>::","HEAD:56:async (_request:NextRequest, { params }:{ params:Promise<{ qrCodeId:string }> },):Promise<NextResponse>::"]],"sr/app/api/search/suggestions/route.ts":["t",["GET:13:async (request:NextRequest):Promise<NextResponse>::"]],"sr/app/api/search/universal/route.ts":["t",["GET:16:async (request:NextRequest):Promise<NextResponse>::","OPTIONS:111:async ():Promise<NextResponse>::"]],"sr/app/api/trpc/[trpc]/route.ts":["t",["createContext:14:async (req:NextRequest):Promise<TRPCContext>::","handler:20:(req:NextRequest):Promise<Response>:createContext:"]],"sr/app/auth-provider.tsx":["t",["AuthProvider:24:({ children, }:{ children:ReactNode; }):JSX.Element:getInitialSession,signOut:","useAuth:71:():AuthContextType::","getInitialSession:35:async ():Promise<void>::","signOut:58:async ():Promise<void>:signOut:"]],"sr/app/auth/auth-code-error/page.tsx":["t",["AuthCodeErrorPage:31:async ({ searchParams, }:AuthCodeErrorPageProps)::","ErrorDetails:90:({ error, description, }:{ error?:string | undefined; description?:string | undefined; }):getErrorMessage:","ErrorDetailsSkeleton:196:()::","getErrorMessage:97:(errorCode?:string,):{ title:string; message:string; suggestions:string[] }::"]],"sr/app/auth/callback/route.ts":["t",["GET:6:async (request:NextRequest):Promise<NextResponse>::"]],"sr/app/auth/sign-in/components/SignInForm.tsx":["t",["SignInForm:45:()::","handleOAuthSignIn:90:async (provider:\"google\")::","handleDevAuth:105:async (email:string, role:string)::"]],"sr/app/auth/sign-in/page.tsx":["t",["SignInPage:17:async ()::","SignInFormSkeleton:42:()::"]],"sr/app/auth/sign-up/components/SignUpForm.tsx":["t",["isValidOrganizationArray:49:(data:unknown):data is OrganizationOption[]::","SignUpForm:62:()::","loadOrganizations:77:async ():isValidOrganizationArray:","handleOAuthSignUp:111:async (provider:\"google\")::"]],"sr/app/auth/sign-up/page.tsx":["t",["SignUpPage:17:async ()::","SignUpFormSkeleton:44:()::"]],"sr/app/client-providers.tsx":["t",["ClientProviders:6:({ children }:{ children:React.ReactNode })::"]],"sr/app/dashboard/error.tsx":["t",["DashboardError:21:({ error, reset }:DashboardErrorProps)::"]],"sr/app/dashboard/loading.tsx":["t",["DashboardLoading:3:()::"]],"sr/app/dashboard/page.tsx":["t",["generateMetadata:15:async ()::","DashboardPage:25:async ()::","DashboardQuickActions:70:()::","DashboardStatsWithData:128:async ({ organizationId:_organizationId, }:{ organizationId:string; })::","RecentIssuesWithData:148:async ({ organizationId:_organizationId, }:{ organizationId:string; })::","StatsLoadingSkeleton:193:()::","RecentIssuesLoadingSkeleton:210:()::"]],"sr/app/error.tsx":["t",["GlobalError:22:({ error, reset }:GlobalErrorProps)::"]],"sr/app/games/[id]/page.tsx":["t",["GamePage:9:async ({ params, }:GamePageProps):Promise<never>::"]],"sr/app/games/page.tsx":["t",["GamesPage:3:():never::"]],"sr/app/issues/[issueId]/error.tsx":["t",["IssueDetailError:22:({ error, reset }:IssueDetailErrorProps)::"]],"sr/app/issues/[issueId]/loading.tsx":["t",["IssueDetailLoading:4:()::"]],"sr/app/issues/[issueId]/page.tsx":["t",["generateMetadata:15:async ({ params, }:IssuePageProps):Promise<Metadata>::","IssuePage:41:async ({ params, }:IssuePageProps):Promise<React.JSX.Element>::"]],"sr/app/issues/create/page.tsx":["t",["transformMachinesForForm:12:(machinesResult:Awaited<ReturnType<typeof getMachinesForOrg>>)::","transformUsersForForm:21:(assignableUsers:Awaited<ReturnType<typeof getAssignableUsers>>)::","CreateIssuePage:50:async ({ searchParams, }:CreateIssuePageProps):Promise<React.JSX.Element>:transformMachinesForForm,transformUsersForForm:"]],"sr/app/issues/error.tsx":["t",["IssuesError:21:({ error, reset }:IssuesErrorProps)::"]],"sr/app/issues/loading.tsx":["t",["IssuesLoading:4:()::"]],"sr/app/issues/page.tsx":["t",["generateMetadata:30:async ({ searchParams }:IssuesPageProps)::","IssuesWithData:87:async ({ searchParams, }:{ searchParams:IssuesPageProps[\"searchParams\"]; })::","IssuesPage:187:async ({ searchParams, }:IssuesPageProps):Promise<React.JSX.Element>::"]],"sr/app/layout.tsx":["t",["RootLayout:14:async ({ children, }:{ children:React.ReactNode; })::"]],"sr/app/locations/[id]/page.tsx":["t",["generateMetadata:15:async ({ params, }:LocationPageProps):Promise<Metadata>::","LocationPage:39:async ({ params, }:LocationPageProps):Promise<React.JSX.Element>::"]],"sr/app/locations/page.tsx":["t",["LocationsPage:21:async ():Promise<React.JSX.Element>::"]],"sr/app/machines/[id]/page.tsx":["t",["generateMetadata:21:async ({ params, }:MachinePageProps):Promise<Metadata>::","MachinePage:47:async ({ params }:MachinePageProps)::"]],"sr/app/machines/error.tsx":["t",["MachinesError:21:({ error, reset }:MachinesErrorProps)::"]],"sr/app/machines/new/page.tsx":["t",["NewMachinePage:19:async ()::"]],"sr/app/machines/page.tsx":["t",["generateMetadata:32:async ({ searchParams }:MachinesPageProps)::","MachinesPage:92:async ({ searchParams, }:MachinesPageProps)::"]],"sr/app/page.tsx":["t",["HomePage:3:()::"]],"sr/app/profile/page.tsx":["t",["SignOutButton:48:():JSX.Element:handleSignOut:","ProfilePage:72:():JSX.Element::","handleSignOut:51:async ():Promise<void>::","handleEditProfile:115:():void::","handleSaveProfile:123:():void::","handleUploadSuccess:130:():void::"]],"sr/app/providers.tsx":["t",["Providers:9:({ children, }:{ children:ReactNode; }):JSX.Element::"]],"sr/app/search/page.tsx":["t",["generateMetadata:14:async ({ searchParams }:SearchPageProps)::","SearchPage:36:async ({ searchParams }:SearchPageProps)::","SearchResultsWithData:115:async ({ query, entities, page, limit }:{ query:string; entities:SearchEntity[]; page:number; limit:number; })::"]],"sr/app/settings/activity/components/ActivityLogFilter.tsx":["t",["ActivityLogFilter:31:()::","applyFilters:61:()::","clearFilters:74:()::","setQuickDateRange:83:(days:number)::"]],"sr/app/settings/activity/page.tsx":["t",["ActivityLogPage:26:async ({ searchParams, }:{ searchParams:Promise<Record<string, string | string[] | undefined>>; })::","getActionIcon:60:(action:string)::","getSeverityColor:77:(severity:string)::"]],"sr/app/settings/error.tsx":["t",["SettingsError:21:({ error, reset }:SettingsErrorProps)::"]],"sr/app/settings/layout.tsx":["t",["SettingsLayout:23:async ({ children }:SettingsLayoutProps)::"]],"sr/app/settings/organization/components/OrganizationLogoForm.tsx":["t",["OrganizationLogoForm:22:({ currentLogoUrl }:OrganizationLogoFormProps):handleUrlChange:","handleUrlChange:39:(url:string)::","clearLogo:43:()::"]],"sr/app/settings/organization/components/OrganizationProfileForm.tsx":["t",["OrganizationProfileForm:28:({ organization }:OrganizationProfileFormProps)::"]],"sr/app/settings/organization/page.tsx":["t",["OrganizationSettingsPage:17:async ()::"]],"sr/app/settings/page.tsx":["t",["SettingsPage:21:async ()::"]],"sr/app/settings/roles/page.tsx":["t",["RolesSettingsPage:22:async ()::"]],"sr/app/settings/system/components/SystemNotificationSettings.tsx":["t",["SystemNotificationSettings:27:({ settings }:SystemNotificationSettingsProps):handleToggle:","handleToggle:31:(key:keyof typeof formData, value:boolean)::"]],"sr/app/settings/system/components/SystemPreferences.tsx":["t",["SystemPreferences:33:({ settings }:SystemPreferencesProps)::","handleSelectChange:37:(key:keyof typeof formData, value:string)::"]],"sr/app/settings/system/components/SystemSecuritySettings.tsx":["t",["SystemSecuritySettings:35:({ settings }:SystemSecuritySettingsProps)::","handleToggle:39:(key:keyof typeof formData, value:boolean)::","handleInputChange:43:(key:keyof typeof formData, value:string)::","handleSelectChange:50:(key:keyof typeof formData, value:string)::"]],"sr/app/settings/system/page.tsx":["t",["SystemSettingsPage:26:async ()::"]],"sr/app/settings/users/components/InviteUserDialog.tsx":["t",["InviteUserDialog:37:({ children, availableRoles = [] }:InviteUserDialogProps)::"]],"sr/app/settings/users/components/RoleChangeDialog.tsx":["t",["RoleChangeDialog:50:({ user, availableRoles, children }:RoleChangeDialogProps)::"]],"sr/app/settings/users/components/UserTableActions.tsx":["t",["UserTableActions:50:({ user, currentUserCanManage, availableRoles = [] }:UserTableActionsProps)::","handleResendInvitation:53:async ()::","handleRemoveUser:65:async ()::"]],"sr/app/settings/users/page.tsx":["t",["UsersSettingsPage:23:async ()::"]],"sr/app/sign-in/page.tsx":["t",["SignInPage:25:():React.ReactElement | null::","fetchTestUsers:43:async ():Promise<void>::","handleGoogleSignIn:68:async ():Promise<void>::","handleDevLogin:88:async (email:string):Promise<void>::","getRoleBadgeVariant:126:(role:Role | null):\"default\" | \"secondary\" | \"destructive\" | \"outline\"::"]],"sr/components/dashboard/dashboard-stats.tsx":["t",["DashboardStats:19:({ stats }:DashboardStatsProps)::","StatCard:80:({ title, value, icon, description, trend }:StatCardProps)::"]],"sr/components/dashboard/quick-actions.tsx":["t",["QuickActions:13:()::"]],"sr/components/forms/CreateIssueFormServer.tsx":["t",["CreateIssueFormServer:51:({ machines, users = [], className, action, initialMachineId, }:CreateIssueFormServerProps)::"]],"sr/components/forms/form-enhancement-client.tsx":["t",["EnhancedSubmitButton:20:({ isPending }:{ isPending:boolean })::","FormEnhancementClient:41:()::"]],"sr/components/homepage/PinPointHomepage.tsx":["t",["PinPointHomepage:24:()::"]],"sr/components/hooks/use-mobile.ts":["t",["useIsMobile:5:():boolean::","onChange:10:():void::"]],"sr/components/issues/AdvancedFiltersDropdown.tsx":["t",["AdvancedFiltersDropdown:34:({ assigneeId, reporterId, ownerId, onAssigneeChange, onReporterChange, onOwnerChange, }:AdvancedFiltersDropdownProps)::"]],"sr/components/issues/FilterPresets.tsx":["t",["FilterPresets:33:({ currentUserId, onPresetClick, activePresetId, className }:FilterPresetsProps)::"]],"sr/components/issues/FilterToolbar.tsx":["t",["FilterToolbar:49:({ filters, onFiltersChange, isLoading = false, }:FilterToolbarProps)::","handleSortOrderToggle:63:():void::","handlePresetClick:69:(presetFilters:any, presetId?:string)::"]],"sr/components/issues/GameFilterDropdown.tsx":["t",["GameFilterDropdown:26:({ onChange, value, disabled = false, showCounts = true }:GameFilterDropdownProps)::"]],"sr/components/issues/SearchTextField.tsx":["t",["SearchTextField:18:({ value, onChange, placeholder = \"Search issues...\", label = \"Search\", debounceMs = 300, }:SearchTextFieldProps)::"]],"sr/components/issues/StatusTogglePills.tsx":["t",["StatusTogglePills:41:({ value, onChange, showCounts = true, parentLoading = false, }:StatusTogglePillsProps)::","getCategoryLabel:28:(category:\"NEW\" | \"IN_PROGRESS\" | \"RESOLVED\",):string::","handleCategoryToggle:77:(category:\"NEW\" | \"IN_PROGRESS\" | \"RESOLVED\",):void::","isCategoryActive:99:(category:\"NEW\" | \"IN_PROGRESS\" | \"RESOLVED\",):boolean::","isCategoryFullySelected:109:(category:\"NEW\" | \"IN_PROGRESS\" | \"RESOLVED\",):boolean::","getStatusClasses:145:(category:\"NEW\" | \"IN_PROGRESS\" | \"RESOLVED\", isActive:boolean)::"]],"sr/components/issues/comment-form-client.tsx":["t",["CommentFormClient:13:({ issueId }:CommentFormClientProps)::"]],"sr/components/issues/issue-active-filters.tsx":["t",["IssueActiveFilters:23:({ filters, searchParams, }:IssueActiveFiltersProps)::"]],"sr/components/issues/issue-assignment-client.tsx":["t",["IssueAssignmentClient:41:({ issueId, currentAssigneeId, currentAssigneeName, availableUsers, }:IssueAssignmentClientProps)::"]],"sr/components/issues/issue-detail-server.tsx":["t",["IssueDetailServer:18:async ({ issueId }:IssueDetailServerProps)::"]],"sr/components/issues/issue-status-update-client.tsx":["t",["updateIssueStatusAction:47:async (issueId:string, _prevState:any, formData:FormData,)::","IssueStatusUpdateClient:74:({ issueId, currentStatusId, currentStatusName, availableStatuses, }:IssueStatusUpdateClientProps)::"]],"sr/components/issues/issues-list-server.tsx":["t",["IssueCard:86:({ issue }:{ issue:Issue })::","IssuesListWithData:172:async ({ limit }:{ limit?:number })::","PaginationControls:201:({ pagination, filters, sorting, }:{ pagination:PaginationResult; filters:IssueFilters; sorting:IssueSorting; }):buildUrl:","IssuesListServer:266:({ issues, pagination, filters, sorting, limit, }:IssuesListServerProps)::","IssuesListSkeleton:320:()::","buildUrl:213:(page:number)::"]],"sr/components/issues/realtime-comments-client.tsx":["t",["RealtimeCommentsClient:42:({ issueId, currentUserId, existingCommentIds = [], }:RealtimeCommentsClientProps)::","initializeRealtimeConnection:59:async ():on:"]],"sr/components/layout/NavigationSkeleton.tsx":["t",["NavigationSkeleton:4:()::"]],"sr/components/layout/client/MobileNavToggle.tsx":["t",["MobileNavToggle:14:()::"]],"sr/components/layout/client/UserMenuClient.tsx":["t",["UserMenuClient:27:({ user }:UserMenuClientProps)::","handleSignOut:30:async ()::"]],"sr/components/layout/navigation.tsx":["t",["Navigation:19:({ organizationContext }:NavigationProps)::","OrganizationLogo:122:({ organization }:{ organization:{ id:string; name:string; subdomain:string } })::","UserContextDisplay:133:({ user, organization }:{ user:{ id:string; name?:string; email:string }; organization:{ id:string; name:string; subdomain:string }; })::"]],"sr/components/layout/notification-bell-client.tsx":["t",["NotificationBellClient:22:({ initialUnreadCount, userId, }:NotificationBellClientProps)::","initializeRealtimeConnection:33:async ():on:","handleOpenChange:105:(open:boolean)::"]],"sr/components/layout/notification-bell-wrapper.tsx":["t",["NotificationBellWrapper:22:async ({ userId }:NotificationBellWrapperProps)::"]],"sr/components/layout/notifications-list-server.tsx":["t",["getNotificationIcon:27:(type:string)::","getNotificationColor:47:(type:string)::","NotificationsListServer:66:async ({ limit = 10 }:NotificationListServerProps):getNotificationColor,getNotificationIcon:"]],"sr/components/layout/user-menu-client.tsx":["t",["UserMenuClient:29:({ user }:UserMenuClientProps)::"]],"sr/components/locations/LocationDetailView.tsx":["t",["LocationDetailView:19:({ location, user:_user, locationId:_locationId }:LocationDetailViewProps)::"]],"sr/components/locations/LocationList.tsx":["t",["LocationList:18:({ locations }:LocationListProps)::"]],"sr/components/machines/client/create-machine-form-client.tsx":["t",["CreateMachineFormClient:46:({ locations, models, action, }:CreateMachineFormClientProps)::","actionWrapper:54:async (_prevState:ActionResult<{ machineId:string }> | null, formData:FormData)::"]],"sr/components/machines/client/machine-filters-client.tsx":["t",["MachineFiltersClient:43:({ locations, initialFilters, viewMode, }:MachineFiltersClientProps)::","updateFilters:56:(updates:Partial<{ locations:string[]; hasQR:boolean | undefined; view:\"table\" | \"grid\"; }>,)::","toggleLocation:98:(locationId:string):updateFilters:","clearAllFilters:106:()::"]],"sr/components/machines/client/machine-qr-code-client.tsx":["t",["MachineQRCodeClient:38:({ machineId, qrCodeUrl, qrCodeGeneratedAt, machineName, showBulkActions:_showBulkActions = false, }:MachineQRCodeClientProps)::","handleRegenerate:53:()::","handleDownload:82:()::","handlePrint:103:()::"]],"sr/components/machines/client/machine-search-client.tsx":["t",["MachineSearchClient:20:({ initialSearch = \"\", }:MachineSearchClientProps)::","clearSearch:47:()::"]],"sr/components/machines/machine-detail-server.tsx":["t",["MachineDetailServer:43:({ machine }:MachineDetailServerProps)::"]],"sr/components/machines/machine-header.tsx":["t",["MachineHeader:35:({ machine }:MachineHeaderProps)::"]],"sr/components/machines/machine-inventory-server.tsx":["t",["MachineInventoryServer:74:async ({ machines, locations, viewMode, filters, pagination:_pagination, sorting:_sorting, searchParams, }:MachineInventoryServerProps)::"]],"sr/components/machines/machine-stats-server.tsx":["t",["MachineStatsServer:15:async ({ stats }:MachineStatsServerProps)::"]],"sr/components/nav-documents.tsx":["t",["NavDocuments:28:({ items, }:{ items:{ name:string; url:string; icon:Icon; }[]; })::"]],"sr/components/nav-main.tsx":["t",["NavMain:14:({ items, }:{ items:{ title:string; url:string; icon?:Icon; }[]; })::"]],"sr/components/nav-secondary.tsx":["t",["NavSecondary:14:({ items, ...props }:{ items:{ title:string; url:string; icon:Icon; }[]; } & React.ComponentPropsWithoutRef<typeof SidebarGroup>)::"]],"sr/components/nav-user.tsx":["t",["NavUser:28:({ user, }:{ user:{ name:string; email:string; avatar:string; }; })::"]],"sr/components/notifications/notification-client.tsx":["t",["NotificationClient:60:({ userId, organizationId, maxNotifications = 5, autoHideDelay = 5000, }:NotificationClientProps)::","handleIssueUpdate:71:(_event):addNotification:","handleMachineUpdate:80:(event):addNotification:","handleFormSubmission:90:(event):addNotification:","initializeNotificationStream:124:async ():addNotification:","addNotification:173:(notification:Omit<Notification, \"id\" | \"timestamp\">):removeNotification:","removeNotification:193:(id:string)::"]],"sr/components/permissions/PermissionGate.tsx":["t",["PermissionGate:52:({ permission, hasPermission, fallback, children, showFallback = false, }:PermissionGateProps):ReactNode::"]],"sr/components/profile/ProfilePictureUpload.tsx":["t",["ProfilePictureUpload:22:({ currentUser:_currentUser, onUploadSuccess:_onUploadSuccess, size:_size, currentImage, onImageChange:_onImageChange }:ProfilePictureUploadProps)::"]],"sr/components/search/advanced-search-form-optimized.tsx":["t",["FieldRenderer:29:({ field, formState, updateFormField }:{ field:FilterField; formState:FormState; updateFormField:(fieldId:string, value:any)::","AdvancedSearchFormOptimized:205:({ entityType, fields, currentParams, buildUrl, title, description, collapsible = true, defaultExpanded = false, showActiveFilters = true, onFormSubmit, }:AdvancedSearchFormProps)::"]],"sr/components/search/advanced-search-form.tsx":["t",["AdvancedSearchForm:58:({ entityType, fields, currentParams, buildUrl, title, description, collapsible = true, defaultExpanded = false, showActiveFilters = true, onFormSubmit, }:AdvancedSearchFormProps)::","updateFormField:102:(fieldId:string, value:any)::","handleSubmit:110:(event:React.FormEvent):forEach:","handleClearFilters:161:():forEach:","renderField:209:(field:FilterField)::"]],"sr/components/search/filter-configs.tsx":["t",["getFilterFieldsForEntity:222:(entityType:\"issues\" | \"machines\" | \"universal\"):FilterField[]::","getFilterField:238:(entityType:\"issues\" | \"machines\" | \"universal\", fieldId:string):FilterField | undefined:getFilterFieldsForEntity:","validateFilterValue:246:(field:FilterField, value:any):boolean::"]],"sr/components/search/global-search-shortcut.tsx":["t",["GlobalSearchShortcut:18:({ children }:GlobalSearchShortcutProps)::","SearchButtonTrigger:125:({ variant = \"outline\", size = \"sm\", showShortcut = true, className = \"\" }:SearchButtonTriggerProps)::","useGlobalSearchShortcut:191:()::","handleKeyDown:195:(event:KeyboardEvent)::","handleResultSelect:58:(result:SearchResult)::","handleOpenChange:63:(open:boolean)::"]],"sr/components/search/universal-search-input.tsx":["t",["UniversalSearchInput:58:({ placeholder = \"Search issues, machines, users...\", showSuggestions = true, showRecentSearches = true, maxSuggestions = 5, className = \"\", autoFocus = false, onResultSelect, }:UniversalSearchInputProps)::","fetchSuggestions:105:async ()::","handleClickOutside:134:(event:MouseEvent)::","handleKeyDown:151:(event:KeyboardEvent)::","saveRecentSearch:166:(query:string)::","handleSubmit:178:(e:React.FormEvent):saveRecentSearch:","handleInputFocus:190:()::","handleInputChange:194:(e:React.ChangeEvent<HTMLInputElement>)::","clearSearch:203:()::","selectSuggestion:210:(result:SearchResult):saveRecentSearch:","selectRecentSearch:222:(recentSearch:string)::"]],"sr/components/search/universal-search-results.tsx":["t",["UniversalSearchResults:54:async ({ query, entities = [\"all\"], page = 1, limit = 20, showEntityCounts = true, showMetadata = true, }:UniversalSearchResultsProps)::","UniversalSearchResultsSkeleton:309:()::"]],"sr/components/site-header.tsx":["t",["SiteHeader:5:()::"]],"sr/components/ui/UserAvatar.tsx":["t",["UserAvatar:33:({ user, size = \"medium\", clickable = false, showTooltip = true, onClick, }:UserAvatarProps):JSX.Element::"]],"sr/components/ui/alert.tsx":["t",["Alert:22:({ className, variant, ...props }:React.ComponentProps<\"div\"> & VariantProps<typeof alertVariants>)::","AlertTitle:37:({ className, ...props }:React.ComponentProps<\"div\">)::","AlertDescription:50:({ className, ...props }:React.ComponentProps<\"div\">)::"]],"sr/components/ui/badge.tsx":["t",["Badge:28:({ className, variant, asChild = false, ...props }:React.ComponentProps<\"span\"> & VariantProps<typeof badgeVariants> & { asChild?:boolean })::"]],"sr/components/ui/calendar.tsx":["t",["Calendar:15:({ className, classNames, showOutsideDays = true, captionLayout = \"label\", buttonVariant = \"ghost\", formatters, components, ...props }:React.ComponentProps<typeof DayPicker> & { buttonVariant?:React.ComponentProps<typeof Button>[\"variant\"] })::","CalendarDayButton:176:({ className, day, modifiers, ...props }:React.ComponentProps<typeof DayButton>)::"]],"sr/components/ui/dialog.tsx":["t",["DialogHeader:56:({ className, ...props }:React.HTMLAttributes<HTMLDivElement>)::","DialogFooter:70:({ className, ...props }:React.HTMLAttributes<HTMLDivElement>)::"]],"sr/components/ui/dropdown-menu.tsx":["t",["DropdownMenu:9:({ ...props }:React.ComponentProps<typeof DropdownMenuPrimitive.Root>)::","DropdownMenuPortal:15:({ ...props }:React.ComponentProps<typeof DropdownMenuPrimitive.Portal>)::","DropdownMenuTrigger:23:({ ...props }:React.ComponentProps<typeof DropdownMenuPrimitive.Trigger>)::","DropdownMenuContent:34:({ className, sideOffset = 4, ...props }:React.ComponentProps<typeof DropdownMenuPrimitive.Content>)::","DropdownMenuGroup:54:({ ...props }:React.ComponentProps<typeof DropdownMenuPrimitive.Group>)::","DropdownMenuItem:62:({ className, inset, variant = \"default\", ...props }:React.ComponentProps<typeof DropdownMenuPrimitive.Item> & { inset?:boolean; variant?:\"default\" | \"destructive\"; })::","DropdownMenuCheckboxItem:85:({ className, children, checked, ...props }:React.ComponentProps<typeof DropdownMenuPrimitive.CheckboxItem>)::","DropdownMenuRadioGroup:111:({ ...props }:React.ComponentProps<typeof DropdownMenuPrimitive.RadioGroup>)::","DropdownMenuRadioItem:122:({ className, children, ...props }:React.ComponentProps<typeof DropdownMenuPrimitive.RadioItem>)::","DropdownMenuLabel:146:({ className, inset, ...props }:React.ComponentProps<typeof DropdownMenuPrimitive.Label> & { inset?:boolean; })::","DropdownMenuSeparator:166:({ className, ...props }:React.ComponentProps<typeof DropdownMenuPrimitive.Separator>)::","DropdownMenuShortcut:179:({ className, ...props }:React.ComponentProps<\"span\">)::","DropdownMenuSub:195:({ ...props }:React.ComponentProps<typeof DropdownMenuPrimitive.Sub>)::","DropdownMenuSubTrigger:201:({ className, inset, children, ...props }:React.ComponentProps<typeof DropdownMenuPrimitive.SubTrigger> & { inset?:boolean; })::","DropdownMenuSubContent:225:({ className, ...props }:React.ComponentProps<typeof DropdownMenuPrimitive.SubContent>)::"]],"sr/components/ui/error-boundary-card.tsx":["t",["ErrorBoundaryCard:41:({ error, reset:_reset, config }:ErrorBoundaryCardProps):getSeverityColors:","getSeverityColors:63:(severity:string)::"]],"sr/components/ui/filters-server.tsx":["t",["FiltersServer:51:({ currentFilters, searchPlaceholder = \"Search...\", filterOptions, activeFilters, actionUrl, clearAllUrl, children, }:FiltersServerProps)::","ActiveFilterBadge:160:({ filter }:{ filter:ActiveFilter })::","FilterBarServer:189:({ currentFilters, quickFilters, searchUrl, clearUrl, }:FilterBarServerProps)::","createFilterAction:255:(basePath:string, urlBuilder:(basePath:string, params:any, currentParams?:any):handleFilterSubmit:","handleFilterSubmit:259:async (formData:FormData)::","CheckboxFilter:290:({ name, label, options, selectedValues, }:CheckboxFilterProps)::"]],"sr/components/ui/label.tsx":["t",["Label:8:({ className, ...props }:React.ComponentProps<typeof LabelPrimitive.Root>)::"]],"sr/components/ui/pagination-server.tsx":["t",["PaginationServer:23:({ currentPage, totalPages, totalItems, basePath, searchParams, itemsPerPage = 20, showSummary = true, }:PaginationServerProps):buildPageUrl,generatePageNumbers:","PaginationServerCompact:188:({ currentPage, totalPages, basePath, searchParams, }:Omit<PaginationServerProps, \"totalItems\" | \"itemsPerPage\" | \"showSummary\">):buildPageUrl:","buildPageUrl:196:(page:number)::","generatePageNumbers:64:()::"]],"sr/components/ui/pagination-universal.tsx":["t",["buildPaginationUrl:24:(baseUrl:string, page:number, searchParams:Record<string, string | string[] | undefined> = {}):string::","calculateVisiblePages:56:(currentPage:number, totalPages:number):(number | \"ellipsis\")[]::","PaginationUniversal:97:({ currentPage, totalPages, totalCount, baseUrl, searchParams = {}, itemName = \"items\", }:PaginationProps):buildPaginationUrl,calculateVisiblePages:"]],"sr/components/ui/search-client.tsx":["t",["SearchClient:34:({ initialSearch = \"\", placeholder = \"Search...\", basePath, urlBuilder, className, autoFocus = false, }:SearchClientProps)::","SearchClientCompact:141:({ initialSearch = \"\", placeholder = \"Search...\", basePath, urlBuilder, }:Omit<SearchClientProps, \"className\" | \"autoFocus\">)::","SearchClientWithSuggestions:173:({ suggestions = [], onSuggestionSelect, showSuggestions = false, ...searchProps }:SearchWithSuggestionsProps)::","useSearchState:188:(initialSearch = \"\", basePath:string, urlBuilder:SearchClientProps[\"urlBuilder\"],)::","clearSearch:203:()::","handleSubmit:82:(e:React.FormEvent)::","updateSearch:199:(newValue:string)::","commitSearch:207:(value?:string)::"]],"sr/components/ui/select.tsx":["t",["Select:9:({ ...props }:React.ComponentProps<typeof SelectPrimitive.Root>)::","SelectGroup:15:({ ...props }:React.ComponentProps<typeof SelectPrimitive.Group>)::","SelectValue:21:({ ...props }:React.ComponentProps<typeof SelectPrimitive.Value>)::","SelectTrigger:27:({ className, size = \"default\", children, ...props }:React.ComponentProps<typeof SelectPrimitive.Trigger> & { size?:\"sm\" | \"default\"; })::","SelectContent:53:({ className, children, position = \"popper\", ...props }:React.ComponentProps<typeof SelectPrimitive.Content>)::","SelectLabel:88:({ className, ...props }:React.ComponentProps<typeof SelectPrimitive.Label>)::","SelectItem:101:({ className, children, ...props }:React.ComponentProps<typeof SelectPrimitive.Item>)::","SelectSeparator:125:({ className, ...props }:React.ComponentProps<typeof SelectPrimitive.Separator>)::","SelectScrollUpButton:138:({ className, ...props }:React.ComponentProps<typeof SelectPrimitive.ScrollUpButton>)::","SelectScrollDownButton:156:({ className, ...props }:React.ComponentProps<typeof SelectPrimitive.ScrollDownButton>)::"]],"sr/components/ui/sheet.tsx":["t",["Sheet:9:({ ...props }:React.ComponentProps<typeof SheetPrimitive.Root>)::","SheetTrigger:13:({ ...props }:React.ComponentProps<typeof SheetPrimitive.Trigger>)::","SheetClose:19:({ ...props }:React.ComponentProps<typeof SheetPrimitive.Close>)::","SheetPortal:25:({ ...props }:React.ComponentProps<typeof SheetPrimitive.Portal>)::","SheetOverlay:31:({ className, ...props }:React.ComponentProps<typeof SheetPrimitive.Overlay>)::","SheetContent:47:({ className, children, side = \"right\", ...props }:React.ComponentProps<typeof SheetPrimitive.Content> & { side?:\"top\" | \"right\" | \"bottom\" | \"left\"; })::","SheetHeader:84:({ className, ...props }:React.ComponentProps<\"div\">)::","SheetFooter:94:({ className, ...props }:React.ComponentProps<\"div\">)::","SheetTitle:104:({ className, ...props }:React.ComponentProps<typeof SheetPrimitive.Title>)::","SheetDescription:117:({ className, ...props }:React.ComponentProps<typeof SheetPrimitive.Description>)::"]],"sr/components/ui/sidebar.tsx":["t",["useSidebar:47:()::","SidebarProvider:56:({ defaultOpen = true, open:openProp, onOpenChange:setOpenProp, className, style, children, ...props }:React.ComponentProps<\"div\"> & { defaultOpen?:boolean; open?:boolean; onOpenChange?:(open:boolean)::","Sidebar:156:({ side = \"left\", variant = \"sidebar\", collapsible = \"offcanvas\", className, children, ...props }:React.ComponentProps<\"div\"> & { side?:\"left\" | \"right\"; variant?:\"sidebar\" | \"floating\" | \"inset\"; collapsible?:\"offcanvas\" | \"icon\" | \"none\"; }):useSidebar:","SidebarTrigger:258:({ className, onClick, ...props }:React.ComponentProps<typeof Button>):useSidebar:","SidebarRail:284:({ className, ...props }:React.ComponentProps<\"button\">):useSidebar:","SidebarInset:309:({ className, ...props }:React.ComponentProps<\"main\">)::","SidebarInput:323:({ className, ...props }:React.ComponentProps<typeof Input>)::","SidebarHeader:337:({ className, ...props }:React.ComponentProps<\"div\">)::","SidebarFooter:348:({ className, ...props }:React.ComponentProps<\"div\">)::","SidebarSeparator:359:({ className, ...props }:React.ComponentProps<typeof Separator>)::","SidebarContent:373:({ className, ...props }:React.ComponentProps<\"div\">)::","SidebarGroup:387:({ className, ...props }:React.ComponentProps<\"div\">)::","SidebarGroupLabel:398:({ className, asChild = false, ...props }:React.ComponentProps<\"div\"> & { asChild?:boolean })::","SidebarGroupAction:419:({ className, asChild = false, ...props }:React.ComponentProps<\"button\"> & { asChild?:boolean })::","SidebarGroupContent:442:({ className, ...props }:React.ComponentProps<\"div\">)::","SidebarMenu:456:({ className, ...props }:React.ComponentProps<\"ul\">)::","SidebarMenuItem:467:({ className, ...props }:React.ComponentProps<\"li\">)::","SidebarMenuButton:500:({ asChild = false, isActive = false, variant = \"default\", size = \"default\", tooltip, className, ...props }:React.ComponentProps<\"button\"> & { asChild?:boolean; isActive?:boolean; tooltip?:string | React.ComponentProps<typeof TooltipContent>; } & VariantProps<typeof sidebarMenuButtonVariants>):useSidebar:","SidebarMenuAction:550:({ className, asChild = false, showOnHover = false, ...props }:React.ComponentProps<\"button\"> & { asChild?:boolean; showOnHover?:boolean; })::","SidebarMenuBadge:582:({ className, ...props }:React.ComponentProps<\"div\">)::","SidebarMenuSkeleton:604:({ className, showIcon = false, ...props }:React.ComponentProps<\"div\"> & { showIcon?:boolean; })::","SidebarMenuSub:642:({ className, ...props }:React.ComponentProps<\"ul\">)::","SidebarMenuSubItem:657:({ className, ...props }:React.ComponentProps<\"li\">)::","SidebarMenuSubButton:671:({ asChild = false, size = \"md\", isActive = false, className, ...props }:React.ComponentProps<\"a\"> & { asChild?:boolean; size?:\"sm\" | \"md\"; isActive?:boolean; })::","handleKeyDown:98:(event:KeyboardEvent)::"]],"sr/components/ui/skeleton.tsx":["t",["Skeleton:3:({ className, ...props }:React.ComponentProps<\"div\">)::"]],"sr/components/ui/textarea.tsx":["t",["Textarea:5:({ className, ...props }:React.ComponentProps<\"textarea\">)::"]],"sr/components/ui/toggle.tsx":["t",["Toggle:31:({ className, variant, size, ...props }:React.ComponentProps<typeof TogglePrimitive.Root> & VariantProps<typeof toggleVariants>)::"]],"sr/components/ui/tooltip.tsx":["t",["TooltipProvider:8:({ delayDuration = 0, ...props }:React.ComponentProps<typeof TooltipPrimitive.Provider>)::","Tooltip:21:({ ...props }:React.ComponentProps<typeof TooltipPrimitive.Root>)::","TooltipTrigger:31:({ ...props }:React.ComponentProps<typeof TooltipPrimitive.Trigger>)::","TooltipContent:37:({ className, sideOffset = 0, children, ...props }:React.ComponentProps<typeof TooltipPrimitive.Content>)::"]],"sr/components/utils/lazy-client-island.tsx":["t",["LazyClientIsland:33:({ importComponent, componentProps, fallback = <div className=\"h-16 bg-muted animate-pulse rounded\" />, loadImmediately = false, threshold = 0.1, strategy = \"intersection\", name = \"LazyComponent\", }:LazyClientIslandProps<T>):loadComponent,loadOnIdle:","usePreloadComponent:160:(importComponent:()::","createLazyClientIsland:182:(importComponent:()::","LazyWrapper:186:(props:T & Partial<LazyClientIslandProps<T>>)::","loadOnIdle:81:():loadComponent:","loadComponent:93:async ()::","preload:165:async ()::"]],"sr/contexts/PermissionDepsContext.tsx":["t",["usePermissionDependencies:35:():PermissionDependencies::","PermissionDepsProvider:65:({ children, authHook, membershipQuery, }:{ children:ReactNode; authHook:typeof useAuth; membershipQuery:typeof api.user.getCurrentMembership.useQuery; }):ReactElement::","mockSessionHook:57:()::","mockMembershipQuery:58:()::"]],"sr/env.js":["j",["getEnvironmentType:9:()::"]],"sr/hooks/useClientMounted.ts":["t",["useClientMounted:9:():boolean::"]],"sr/hooks/usePermissions.ts":["t",["MyComponent:45:():usePermissions:","IssueActions:61:({ issue }):usePermissions:","usePermissions:89:():UsePermissionsReturn::","AdminPanel:155:():useRequiredPermission:","useRequiredPermission:164:(permission:string, redirectTo = \"/\",):::","ActionButton:199:():usePermissionTooltip,usePermissions:","usePermissionTooltip:213:(permission:string):string::"]],"sr/lib/actions/admin-actions.ts":["t",["inviteUserAction:82:async (_prevState:ActionResult<{ success:boolean }> | null, formData:FormData,):Promise<ActionResult<::","updateUserRoleAction:241:async (_prevState:ActionResult<{ success:boolean }> | null, formData:FormData,):Promise<ActionResult<::","removeUserAction:322:async (_prevState:ActionResult<{ success:boolean }> | null, formData:FormData,):Promise<ActionResult<::","updateSystemSettingsAction:399:async (_prevState:ActionResult<{ success:boolean }> | null, formData:FormData,):Promise<ActionResult<::","exportActivityLogAction:464:async ():Promise<Response>::"]],"sr/lib/actions/auth-actions.ts":["t",["sendMagicLink:35:async (_prevState:ActionResult<{ message:string }> | null, formData:FormData,):Promise<ActionResult<::","signInWithOAuth:103:async (provider:\"google\", organizationId:string, redirectTo?:string,):Promise<never>:signInWithOAuth:","devSignIn:168:async (email:string, _userData?:{ name?:string; role?:string },):Promise<ActionResult<::","signOut:209:async ():Promise<void>:signOut:"]],"sr/lib/actions/comment-actions.ts":["t",["addCommentAction:72:async (issueId:string, _prevState:ActionResult<{ commentId:string }> | null, formData:FormData,):Promise<ActionResult<::","editCommentAction:145:async (commentId:string, _prevState:ActionResult<{ success:boolean }> | null, formData:FormData,):Promise<ActionResult<::","deleteCommentAction:203:async (commentId:string, _prevState:ActionResult<{ success:boolean }> | null, _formData:FormData,):Promise<ActionResult<::","restoreCommentAction:254:async (commentId:string, _prevState:ActionResult<{ success:boolean }> | null, _formData:FormData,):Promise<ActionResult<::"]],"sr/lib/actions/issue-actions.ts":["t",["createIssueAction:96:async (_prevState:ActionResult<{ id:string }> | null, formData:FormData,):Promise<ActionResult<::","updateIssueStatusAction:180:async (issueId:string, _prevState:ActionResult<{ statusId:string }> | null, formData:FormData,):Promise<ActionResult<::","addCommentAction:255:async (issueId:string, _prevState:ActionResult<{ commentId:string }> | null, formData:FormData,):Promise<ActionResult<::","updateIssueAssignmentAction:318:async (issueId:string, _prevState:ActionResult<{ assigneeId:string | null }> | null, formData:FormData,):Promise<ActionResult<::","bulkUpdateIssuesAction:398:async (_prevState:ActionResult<{ updatedCount:number }> | null, formData:FormData,):Promise<ActionResult<::"]],"sr/lib/actions/machine-actions.ts":["t",["createMachineAction:60:async (formData:FormData,):Promise<ActionResult<::","updateMachineAction:112:async (formData:FormData,):Promise<ActionResult<::","deleteMachineAction:181:async (machineId:string,):Promise<ActionResult<::","bulkUpdateMachinesAction:232:async (formData:FormData,):Promise<ActionResult<::","generateQRCodeAction:296:async (formData:FormData,):Promise<ActionResult<::","regenerateQRCodeAction:366:async (machineId:string,):Promise<ActionResult<::","bulkGenerateQRCodesAction:431:async (formData:FormData,):Promise<ActionResult<::"]],"sr/lib/actions/notification-actions.ts":["t",["markNotificationAsReadAction:38:async (_prevState:ActionResult<{ success:boolean }> | null, formData:FormData,):Promise<ActionResult<::","bulkMarkNotificationsAsReadAction:95:async (_prevState:ActionResult<{ updatedCount:number }> | null, formData:FormData,):Promise<ActionResult<::","markAllNotificationsAsReadAction:156:async (_prevState:ActionResult<{ updatedCount:number }> | null, formData:FormData,):Promise<ActionResult<::","markNotificationAsUnreadAction:209:async (_prevState:ActionResult<{ success:boolean }> | null, formData:FormData,):Promise<ActionResult<::"]],"sr/lib/actions/organization-actions.ts":["t",["updateOrganizationProfileAction:64:async (_prevState:ActionResult<{ success:boolean }> | null, formData:FormData,):Promise<ActionResult<::","updateOrganizationLogoAction:128:async (_prevState:ActionResult<{ success:boolean }> | null, formData:FormData,):Promise<ActionResult<::"]],"sr/lib/actions/shared.ts":["t",["requireActionAuthContextWithPermission:57:async (permission:string)::","getFormField:69:(formData:FormData, field:string, required = false,):string | null::","validateRequiredFields:89:(formData:FormData, requiredFields:string[],):Record<string, string>:getFormField:","actionSuccess:108:(data:T, message?:string):ActionResult<T>::","actionError:116:(error:string, fieldErrors?:Record<string, string[]>,):ActionResult<never>::","validateFormData:130:(formData:FormData, schema:z.ZodSchema<T>,):ActionResult<T>:actionError,actionSuccess:","runAfterResponse:169:(task:()::","revalidateIssues:179:():void::","revalidateMachines:184:():void::","revalidateDashboard:189:():void::","requirePermission:198:async (membership:{ role_id?:string | null } | null, permission:string, db:Parameters<typeof baseRequirePermission>[2],):Promise<void>::","withActionErrorHandling:209:async (action:():actionError,actionSuccess:"]],"sr/lib/actions/shared.unit.test.ts":["t",["successAction:212:async ()::","failingAction:238:async ()::"]],"sr/lib/auth/dev-auth.ts":["t",["isValidDevEmail:59:(email:string):boolean::","signInDevUser:68:async (clientSupabase:SupabaseClient, email:string,):Promise<DevAuthResult>::","authenticateDevUser:139:async (clientSupabase:SupabaseClient, userData:DevUserData,):Promise<DevAuthResult>:isValidDevEmail,signInDevUser:","getAuthResultMessage:205:(result:DevAuthResult):string::","isDevAuthAvailable:223:():boolean::","getDevAuthStrategy:230:():\"immediate\" | \"unavailable\"::"]],"sr/lib/colors/material-theme-generator.ts":["t",["schemeToColors:72:(scheme:Scheme):MaterialColors::","generateMaterialTheme:135:(sourceColorHex:string):MaterialTheme:schemeToColors:","hexToHslString:154:(hex:string):string::","generateCssCustomProperties:209:(theme:MaterialTheme):hexToHslString:"]],"sr/lib/comments/accessValidation.ts":["t",["validateCommentContent:74:(content:string):ValidationResult::","validateCommentCreationInput:96:(input:CommentCreationInput,):ValidationResult:validateCommentContent:","validateCommentEditInput:120:(input:CommentEditInput,):ValidationResult:validateCommentContent:","validateCommentAccess:144:(issue:IssueReference | null, context:CommentAccessContext,):ValidationResult<IssueReference>::","validateCommentEditPermissions:181:(comment:CommentWithIssue | null, context:CommentAccessContext,):ValidationResult<CommentWithIssue>::","validateCommentDeletePermissions:234:(comment:CommentWithIssue | null, context:CommentAccessContext,):ValidationResult<CommentWithIssue>::","buildCommentCreationData:291:(input:CommentCreationInput, context:CommentAccessContext,):ValidationResult<::","buildCommentEditData:313:(input:CommentEditInput,):ValidationResult<::","validateCompleteCommentCreation:330:(input:CommentCreationInput, issue:IssueReference | null, context:CommentAccessContext,):ValidationResult<::","validateCompleteCommentEdit:398:(input:CommentEditInput, comment:CommentWithIssue | null, context:CommentAccessContext,):ValidationResult<::","isCommentAuthor:468:(comment:CommentWithIssue, userId:string,):boolean::","isCommentDeleted:479:(comment:CommentWithIssue):boolean::","getCommentAgeInMinutes:487:(comment:CommentWithIssue):number::","canEditCommentByTime:497:(comment:CommentWithIssue, maxEditMinutes = DEFAULT_COMMENT_EDIT_MINUTES,):boolean:getCommentAgeInMinutes:","validateCommentEditWithTimeLimit:508:(comment:CommentWithIssue | null, context:CommentAccessContext, maxEditMinutes = DEFAULT_COMMENT_EDIT_MINUTES,):ValidationResult<CommentWithIssue>:canEditCommentByTime,validateCommentEditPermissions:"]],"sr/lib/common/__tests__/inputValidation.test.ts":["t",["expectZodError:75:(result:any, expectedMessage?:string):void::","expectZodSuccess:82:(result:any, expectedData?:unknown):void::"]],"sr/lib/common/inputValidation.ts":["t",["createEntityIdSchema:376:(entityName:string,):z.ZodObject<Record<string, z.ZodString>>::","createNamedEntityCreationSchema:389:(requireName = true,):z.ZodObject<::","createNamedEntityUpdateSchema:403:():z.ZodObject<::","validateNonEmptyStringArray:417:(array:unknown, fieldName:string,):string[]::","validateAndNormalizeSearchQuery:444:(query:unknown,):string | undefined::","validateOptionalString:472:(value:unknown, fieldName:string, maxLength = 255,):string | undefined::"]],"sr/lib/common/organizationValidation.ts":["t",["validateResourceOrganizationBoundary:61:(input:ResourceOwnershipInput,):ValidationResult::","validateOrganizationMembership:85:(input:MembershipValidationInput,):ValidationResult<OrganizationMembership>::","validateCrossOrganizationAccess:119:(input:CrossOrganizationAccessInput,):ValidationResult::","validateOrganizationId:136:(organizationId:string,):ValidationResult::","validateUserId:177:(userId:string):ValidationResult::","validateCompleteOrganizationBoundary:206:(resourceId:string, resourceOrganizationId:string, membership:OrganizationMembership | null, userId:string, expectedOrganizationId:string, resourceType:string,):ValidationResult<::","validateIssueOrganizationBoundary:295:(issueId:string, issueOrganizationId:string, expectedOrganizationId:string,):ValidationResult:validateResourceOrganizationBoundary:","validateMachineOrganizationBoundary:312:(machineId:string, machineOrganizationId:string, expectedOrganizationId:string,):ValidationResult:validateResourceOrganizationBoundary:","validateLocationOrganizationBoundary:329:(locationId:string, locationOrganizationId:string, expectedOrganizationId:string,):ValidationResult:validateResourceOrganizationBoundary:","validateCommentOrganizationBoundary:346:(commentId:string, parentIssueOrganizationId:string, expectedOrganizationId:string,):ValidationResult:validateResourceOrganizationBoundary:","isSameOrganization:367:(orgId1:string, orgId2:string):boolean::","extractOrganizationId:375:(resource:| { readonly organizationId:string } | { readonly location:{ readonly organizationId:string } } | { readonly issue:{ readonly organizationId:string } } | null,):string | null::","createOrganizationBoundaryError:405:(resourceType:string, includeSecurityContext = false,):string::","validatePublicOrganizationContext:451:(organization:OrganizationContextPublic | null | undefined,):RouterValidationResult::","createOrganizationScope:469:(organizationId:string):::","validateRouterEntityOwnership:494:(entity:EntityWithOrganizationId | null | undefined, expectedOrganizationId:string, entityType:string, customErrorMessage?:string,):RouterValidationResult::","createEntityQuery:523:(entityId:string, organizationId:string,):::","createEntityUpdateQuery:544:(entityId:string, organizationId:string,):::","createEntityDeleteQuery:565:(entityId:string, organizationId:string,):::","validateEntityExistsAndOwned:594:(entity:T | null | undefined, organizationId:string, entityType:string, customErrorMessage?:string,):T:validateRouterEntityOwnership:","validatePublicOrganizationContextRequired:630:(organization:OrganizationContextPublic | null | undefined,):OrganizationContextPublic:validatePublicOrganizationContext:","validateRelatedEntitiesOwnership:661:(entities:readonly RelatedEntityCheck[], expectedOrganizationId:string,):RouterValidationResult::","validateMultipleEntityOwnership:686:(entities:readonly (EntityWithOrganizationId | null | undefined):validateRouterEntityOwnership:"]],"sr/lib/dal/activity-log.ts":["t",["logActivity:216:async (params:{ organizationId:string; userId:string; action:string; entity:string; entityId:string; details:string; severity?:\"info\" | \"warning\" | \"error\"; ipAddress?:string; userAgent?:string; }):Promise<void>::","exportActivityLog:340:async (organizationId:string, filters:ActivityLogFilters = {}):Promise<string>::"]],"sr/lib/dal/index.ts":["t",["getDashboardData:82:async ()::","getUserContextData:107:async ()::","getOrganizationOverviewData:127:async ()::"]],"sr/lib/dal/machines.ts":["t",["getMachinesWithIssueCounts:360:async ()::"]],"sr/lib/dal/notifications.ts":["t",["createNotificationActionUrl:216:(entityType:\"ISSUE\" | \"MACHINE\" | \"COMMENT\" | \"ORGANIZATION\", entityId:string,):string::"]],"sr/lib/dal/shared.ts":["t",["hasCompleteAuthContext:204:(context:Awaited<ReturnType<typeof getServerAuthContextWithRole>>):context is CompleteAuthContext::","getPaginationParams:243:(options:PaginationOptions = {})::"]],"sr/lib/dal/system-settings.ts":["t",["updateSystemSettings:128:async (organizationId:string, settings:Partial<SystemSettingsData>,):Promise<void>::","resetSystemSettings:213:async (organizationId:string):Promise<void>:updateSystemSettings:"]],"sr/lib/env-loaders/development.ts":["t",["loadDevelopmentEnvironment:19:():void::"]],"sr/lib/env-loaders/production.ts":["t",["loadProductionEnvironment:18:():void::"]],"sr/lib/environment-client.ts":["t",["getClientEnvironment:17:():| \"development\"\n  | \"production\"\n  | \"preview\"\n  | \"test\"::","isDevelopment:54:():boolean:getClientEnvironment:","isProduction:61:():boolean:getClientEnvironment:","isTest:69:():boolean::","isPreview:88:():boolean:getClientEnvironment:","isDevelopmentOrTest:96:():boolean:isDevelopment,isTest:","isDevelopmentOrPreview:104:():boolean:isDevelopment,isPreview:","getEnvironmentName:111:():string:getClientEnvironment:","shouldEnableDevFeatures:120:():boolean::","isDevAuthAvailable:128:():boolean:shouldEnableDevFeatures:"]],"sr/lib/environment.ts":["t",["isDevelopment:17:():boolean::","isPreview:25:():boolean::","isProduction:32:():boolean::","isDevelopmentOrPreview:40:():boolean:isDevelopment,isPreview:","getEnvironmentName:47:():string:isDevelopment,isPreview,isProduction:","shouldEnableDevFeatures:59:():boolean::","shouldEnableCredentialsProvider:73:():boolean:isDevelopment,isPreview:","shouldEnableTestLogin:86:():boolean:isDevelopment:","shouldEnableDemoLogin:94:():boolean:isPreview:","shouldRequireGoogleOAuth:102:():boolean:isPreview,isProduction:"]],"sr/lib/errors/error-configs.ts":["t",["createErrorConfig:26:(title:string, description:string, actions:((reset:()::","getErrorConfig:224:(type:keyof typeof errorConfigs, reset:()::","detectErrorType:236:(error:Error):keyof typeof errorConfigs::"]],"sr/lib/external/pinballmapTransformer.ts":["t",["transformPinballMapMachineToModel:48:(pmMachine:PinballMapMachine,):ModelCreateData::","getModelLookupStrategy:83:(pmMachine:PinballMapMachine,):::","validatePinballMapMachine:105:(pmMachine:unknown):::","findMatchingMachine:171:(modelId:string, currentMachines:{ id:string; modelId:string }[],):MachineMatchResult::","calculateSyncOperations:188:(pinballMapMachines:PinballMapMachine[], currentMachines:{ id:string; modelId:string }[], foundModels:Map<string, { id:string; name:string }>, // pmMachine.opdb_id>model):::","generateMachineName:239:(modelName:string, instanceNumber?:number,):string::","isValidUrl:253:(urlString:string):boolean::","prepareMachineCreateData:266:(modelId:string, organizationId:string, locationId:string, modelName:string,):::"]],"sr/lib/hooks/use-current-user.ts":["t",["useCurrentUser:10:():::"]],"sr/lib/hooks/use-debounce.ts":["t",["useDebounce:9:(value:T, delay:number):T::"]],"sr/lib/image-storage/local-storage.ts":["t",{"LocalImageStorage":["9",["constructor:12:()::","validateImage:23:(file:File, constraints = IMAGE_CONSTRAINTS):boolean::","deleteImage:69:async (imagePath:string):Promise<void>::","getImageUrl:79:(imagePath:string):string::","uploadIssueAttachment:91:async (file:File, issueId:string):Promise<string>::","validateIssueAttachment:94:(file:File):boolean::","uploadQRCode:100:async (buffer:Buffer, relativePath:string):Promise<string>::","uploadProfilePicture:117:async (file:File, userId:string):Promise<string>::","validateProfilePicture:124:(file:File):boolean::","uploadOrganizationLogo:130:async (file:File, subdomain:string):Promise<string>::","__init__:12:()::"]]}],"sr/lib/issues/assignmentValidation.ts":["t",["validateIssueAssignment:132:(input:IssueAssignmentInput, issue:Issue | null, assigneeMembership:Membership | null, context:AssignmentValidationContext,):AssignmentValidationResult:validateAssigneeMembership,validateAssignmentRules,validateIssueOrganizationBoundary:","validateIssueCreation:204:(input:IssueCreationInput, machine:Machine | null, defaultStatus:IssueStatus | null, defaultPriority:Priority | null, context:AssignmentValidationContext,):AssignmentValidationResult:validateDefaultPriority,validateDefaultStatus,validateIssueCreationRules,validateMachineOrganizationBoundary:","validateIssueOrganizationBoundary:275:(issue:Issue | null, expectedOrganizationId:string,):IssueValidationResult::","validateMachineOrganizationBoundary:306:(machine:Machine | null, expectedOrganizationId:string,):MachineValidationResult::","validateAssigneeMembership:337:(membership:Membership | null, expectedUserId:string, expectedOrganizationId:string,):AssignmentValidationResult::","validateAssignmentRules:375:(issue:Issue, assigneeMembership:Membership, _context:AssignmentValidationContext,):AssignmentValidationResult::","validateIssueCreationRules:396:(input:IssueCreationInput, _machine:Machine, _context:AssignmentValidationContext,):AssignmentValidationResult::","validateDefaultStatus:433:(status:IssueStatus | null, organizationId:string,):DefaultResourceValidationResult::","validateDefaultPriority:470:(priority:Priority | null, organizationId:string,):DefaultResourceValidationResult::","isAssignmentChange:511:(currentAssigneeId:string | null, newAssigneeId:string | null,):::","getAssignmentChangeEffects:537:(currentAssigneeId:string | null, newAssigneeId:string | null,):::","validateBatchAssignments:576:(operations:readonly { readonly type:\"assign\" | \"unassign\"; readonly issueId:string; readonly userId?:string; }[], issues:readonly Issue[], memberships:readonly Membership[], context:AssignmentValidationContext,):AssignmentValidationResult:validateAssigneeMembership,validateIssueOrganizationBoundary:"]],"sr/lib/issues/creationValidation.ts":["t",["validateMachineOwnership:65:(input:MachineOwnershipInput,):ValidationResult::","validateIssueCreationInput:89:(input:PublicIssueCreationInput | AuthenticatedIssueCreationInput,):ValidationResult::","buildIssueCreationData:138:(input:PublicIssueCreationInput | AuthenticatedIssueCreationInput, defaults:IssueCreationDefaults, context:IssueCreationContext,):ValidationResult<::","validateIssueCreationDefaults:193:(status:{ readonly id:string; readonly name:string } | null, priority:{ readonly id:string; readonly name:string } | null,):ValidationResult<IssueCreationDefaults>::","validateCompleteIssueCreation:224:(input:PublicIssueCreationInput | AuthenticatedIssueCreationInput, machine:MachineOwnershipInput[\"machine\"], status:{ readonly id:string; readonly name:string } | null, priority:{ readonly id:string; readonly name:string } | null, context:IssueCreationContext,):ValidationResult<::","getIssueCreationNotificationEffects:315:(issueType:\"public\" | \"authenticated\", machineId:string,):::"]],"sr/lib/issues/filterUtils.ts":["t",["getDefaultFilters:21:():IssueFilters::","mergeFilters:32:(currentFilters:IssueFilters, updates:Partial<IssueFilters>,):IssueFilters::","validateFilters:74:(filters:Partial<IssueFilters>):IssueFilters:getDefaultFilters,isValidSortField,isValidSortOrder:","hasActiveFilters:99:(filters:IssueFilters):boolean::","clearAllFilters:114:():IssueFilters:getDefaultFilters:","isValidSortField:121:(value:unknown):value is IssueFilters[\"sortBy\"]::","isValidSortOrder:128:(value:unknown):value is IssueFilters[\"sortOrder\"]::","getFilterSummary:135:(filters:IssueFilters):string[]::"]],"sr/lib/issues/selectionUtils.ts":["t",["toggleSelection:10:(currentSelection:string[], itemId:string, selected:boolean,):string[]::","selectAll:29:(itemIds:string[]):string[]::","selectNone:36:():string[]::","isSelected:43:(selection:string[], itemId:string):boolean::","isAllSelected:50:(selection:string[], availableIds:string[],):boolean::","isSomeSelected:61:(selection:string[], availableIds:string[],):boolean::","getSelectedCount:75:(selection:string[], availableIds:string[],):number::","getSelectionSummary:85:(selection:string[], availableIds:string[],):string:getSelectedCount:","filterValidSelection:104:(selection:string[], availableIds:string[],):string[]::","toggleSelectAll:115:(currentSelection:string[], availableIds:string[],):string[]:isAllSelected,selectAll,selectNone:","getStaleSelections:127:(selection:string[], availableIds:string[],):string[]::","batchToggleSelection:137:(currentSelection:string[], operations:{ itemId:string; selected:boolean }[],):string[]:toggleSelection:"]],"sr/lib/issues/statusValidation.ts":["t",["validateStatusTransition:46:(input:StatusTransitionInput, newStatus:IssueStatus, context:StatusValidationContext,):StatusValidationResult:validateOrganizationBoundary,validateTransitionRules,validateUserPermissions:","validateOrganizationBoundary:93:(currentStatus:IssueStatus, newStatus:IssueStatus, _expectedOrganizationId:string,):StatusValidationResult::","validateUserPermissions:122:(currentStatus:IssueStatus, newStatus:IssueStatus, userPermissions:readonly string[],):StatusValidationResult:getTransitionType:","validateTransitionRules:158:(currentStatus:IssueStatus, newStatus:IssueStatus,):StatusValidationResult:getTransitionType:","getTransitionType:193:(currentStatus:IssueStatus, newStatus:IssueStatus,):\"progress\" | \"regress\" | \"reopen\" | \"same_category\"::","validateStatusLookup:232:(_statusId:string, _organizationId:string, lookupResult:IssueStatus | null,):StatusLookupResult::","getValidStatusTransitions:258:(currentStatus:IssueStatus, availableStatuses:readonly IssueStatus[], context:StatusValidationContext,):readonly IssueStatus[]:validateStatusTransition:","getStatusChangeEffects:281:(currentStatus:IssueStatus, newStatus:IssueStatus,):::"]],"sr/lib/issues/urlUtils.ts":["t",["filtersToUrlParams:12:(filters:IssueFilters):URLSearchParams::","urlParamsToFilters:37:(params:URLSearchParams,):Partial<IssueFilters>:isValidSortBy,isValidSortOrder:","createFilteredUrl:85:(basePath:string, filters:IssueFilters,):string::","hasValidFilterParams:115:(params:URLSearchParams):boolean::","sanitizeUrlParams:140:(params:URLSearchParams):URLSearchParams::","isValidSortBy:167:(value:string | null,):value is \"created\" | \"updated\" | \"status\" | \"severity\" | \"game\"::","isValidSortOrder:176:(value:string | null):value is \"asc\" | \"desc\"::","urlParamsEqual:183:(params1:URLSearchParams, params2:URLSearchParams,):boolean::"]],"sr/lib/logger.ts":["t",["isErrorObject:11:(obj:unknown,):obj is::","hasCodeAndMessage:17:(error:Record<string, unknown>,):error is::","createLogger:33:():pino.Logger | LoggerInterface:createFallbackLogger,hasCodeAndMessage,isErrorObject:","createFallbackLogger:118:(context:object = {}):LoggerInterface:createFallbackLogger,mergeContext:","mergeContext:120:(obj:object):object::","createDualChildLogger:144:(mainChild:LoggerInterface, fileChild?:LoggerInterface,):LoggerInterface:createDualChildLogger:"]],"sr/lib/opdb/client.ts":["t",{"OPDBClient":["20",["constructor:28:(apiToken?:string, baseUrl?:string)::","searchMachines:152:async (query:string):Promise<OPDBSearchResult[]>::","getMachineById:177:async (opdbId:string):Promise<OPDBMachineDetails | null>::","getMachinesByIds:201:async (opdbIds:string[]):Promise<OPDBMachineDetails[]>::","exportMachines:222:async (page = 1, perPage = 100):Promise<OPDBMachine[]>::","getMachinesByGroupId:245:async (groupId:string):Promise<OPDBMachine[]>::","clearCache:265:():void::","getCacheStats:272:():::","validateConnection:282:async ():Promise<boolean>::","__init__:28:(apiToken?:string, baseUrl?:string)::"]]}],"sr/lib/opdb/utils.ts":["t",["parseOPDBId:15:(opdbId:string):OPDBParsedId | null::","isValidOPDBId:32:(opdbId:string):boolean:parseOPDBId:","getGroupIdFromOPDBId:39:(opdbId:string):string | null:parseOPDBId:","buildOPDBId:47:(groupId:string, machineId?:string, aliasId?:string,):string::","getPreferredImageUrl:66:(machine:OPDBMachine):string | null::","formatMachineName:93:(machine:OPDBMachine):string:getManufacturerName,getYearValue:","normalizeDescription:141:(description?:string):string | null::","generateCacheKey:151:(endpoint:string, params:Record<string, unknown> = {},):string::","isDataStale:167:(lastSynced:Date | null, maxAgeHours = 24,):boolean::","getManufacturerName:97:(manufacturer:unknown):string | null::","getYearValue:107:(machine:OPDBMachine):string | null::"]],"sr/lib/organization-context.ts":["t",["extractSubdomain:45:async ():Promise<string | null>::","setRLSOrganizationContext:219:async (organizationId:string):Promise<void>::"]],"sr/lib/permissions/descriptions.ts":["t",["getPermissionDescription:45:(permission:string):string::"]],"sr/lib/pinballmap/client.ts":["t",["fetchLocationDetails:95:(locationId:number,):Promise<PinballMapLocation>::","fetchLocationMachineDetails:100:(locationId:number,):Promise<PinballMapMachineDetailsResponse>::"],{"PinballMapError":["13",["__init__:14:(message:string, public statusCode?:number, public response?:unknown,)::"]],"PinballMapClient":["24",["constructor:26:(baseUrl:string = API_BASE_URL)::","fetchLocationDetails:34:async (locationId:number):Promise<PinballMapLocation>::","__init__:26:(baseUrl:string = API_BASE_URL)::"]]}],"sr/lib/search-params/issue-search-params.ts":["t",["parseIssueSearchParams:75:(searchParams:Record<string, string | string[] | undefined>,):IssueSearchParams::","buildIssueUrl:93:(basePath:string, params:Partial<IssueSearchParams>, currentSearchParams?:Record<string, string | string[] | undefined>,):string::","cleanIssueUrl:147:(url:string):string:buildIssueUrl,parseIssueSearchParams:","getIssueFilterDescription:158:(filters:IssueSearchParams,):string[]::","getIssueCanonicalUrl:193:(basePath:string, params:IssueSearchParams,):string:buildIssueUrl,cleanIssueUrl:"]],"sr/lib/search-params/machine-search-params.ts":["t",["parseMachineSearchParams:95:(searchParams:Record<string, string | string[] | undefined>,):MachineSearchParams::","buildMachineUrl:113:(basePath:string, params:Partial<MachineSearchParams>, currentSearchParams?:Record<string, string | string[] | undefined>,):string::","cleanMachineUrl:167:(url:string):string:buildMachineUrl,parseMachineSearchParams:","getMachineFilterDescription:178:(filters:MachineSearchParams,):string[]::","getMachineCanonicalUrl:220:(basePath:string, params:MachineSearchParams,):string:buildMachineUrl,cleanMachineUrl:"]],"sr/lib/search-params/shared.ts":["t",["buildMetadataDescription:83:(baseDescription:string, filterDescriptions:string[], totalCount:number,):string::","extractSearchParamErrors:126:(error:z.ZodError,):SearchParamError[]::","safeParseSearchParams:139:(searchParams:Record<string, string | string[] | undefined>, schema:z.ZodSchema<T>, entityName:string,):T:extractSearchParamErrors:"]],"sr/lib/services/notification-generator.ts":["t",["createNotificationForUser:51:async (userId:string, notificationData:BaseNotificationData, context:NotificationContext,)::","getIssueStakeholders:81:async (issueId:string, organizationId:string)::","generateCommentNotifications:150:async (issueId:string, _commentId:string, context:NotificationContext,):createNotificationForUser,getIssueStakeholders:","generateAssignmentNotifications:207:async (issueId:string, newAssigneeId:string | null, _previousAssigneeId:string | null, context:NotificationContext,):createNotificationForUser:","generateStatusChangeNotifications:261:async (issueId:string, newStatusName:string, context:NotificationContext,):createNotificationForUser,getIssueStakeholders:","generateIssueCreationNotifications:316:async (issueId:string, context:NotificationContext,):createNotificationForUser:"]],"sr/lib/services/qr-code-service.ts":["t",["generateMachineQRCode:29:async (machineId:string, options:QRCodeOptions = {}):Promise<GeneratedQRCode>::","generateMachineQRCodeBuffer:75:async (machineId:string, options:QRCodeOptions = {}):Promise<Buffer>::","validateQRCodeParams:105:(machineId:string):boolean::","getDefaultQROptions:122:():QRCodeOptions::"]],"sr/lib/services/search-service.ts":["t",["searchIssues:142:async (query:string, organizationId:string, limit:number):Promise<SearchResult[]>::","searchMachines:202:async (query:string, organizationId:string, limit:number):Promise<SearchResult[]>::","searchUsers:265:async (query:string, organizationId:string, limit:number):Promise<SearchResult[]>::","searchLocations:310:async (query:string, organizationId:string, limit:number):Promise<SearchResult[]>::","countIssues:362:async (query:string, organizationId:string):Promise<number>::","countMachines:379:async (query:string, organizationId:string):Promise<number>::","countUsers:397:async (query:string, organizationId:string):Promise<number>::","countLocations:415:async (query:string, organizationId:string):Promise<number>::"]],"sr/lib/supabase/error-handler.ts":["t",["handleResponse:87:(response:unknown, context:SupabaseOperationContext, dataValidator?:(data:unknown)::","createStructuredError:125:(error:unknown, context:SupabaseOperationContext,):SupabaseErrorResult:classifyGenericError,isAuthError:","throwStructuredError:180:(result:SupabaseFailureResult):never::","isAuthError:238:(error:unknown):error is AuthError::","classifyGenericError:250:(message:string):AuthErrorType::","handleListUsersResponse:288:(response:unknown, context:Omit<SupabaseOperationContext, \"operation\">,):SupabaseOperationResult<::","handleCreateUserResponse:306:(response:unknown, context:Omit<SupabaseOperationContext, \"operation\">,):SupabaseOperationResult<::","handleDeleteUserResponse:324:(response:unknown, context:Omit<SupabaseOperationContext, \"operation\">,):SupabaseOperationResult<Record<string, never>>:handleResponse:","handleGetUserResponse:337:(response:unknown, context:Omit<SupabaseOperationContext, \"operation\">,):SupabaseOperationResult<::","safeSupabaseOperation:359:async (operation:()::","safeSupabaseOperationOrThrow:386:async (operation:()::","logSupabaseError:407:(error:SupabaseErrorResult, logger:{ error:(msg:string, meta?:Record<string, unknown>)::"]],"sr/lib/supabase/errors.ts":["t",["createAuthenticationError:134:(reason?:string, originalError?:Error,):AuthenticationError::","createSessionError:148:(context:string, details?:string, originalError?:Error,):InvalidSessionError::","createOrganizationError:163:(context:string, originalError?:Error,):MissingOrganizationError::","createJWTError:174:(operation:string, details?:string, originalError?:Error,):InvalidJWTError::","createNetworkError:189:(operation:string, originalError?:Error,):NetworkError::","createConfigurationError:200:(component:string, issue:string, originalError?:Error,):ConfigurationError::","isSupabaseError:215:(error:unknown):error is SupabaseError::","isAuthenticationError:219:(error:unknown,):error is AuthenticationError::","isSessionExpiredError:225:(error:unknown,):error is SessionExpiredError::","isInvalidSessionError:231:(error:unknown,):error is InvalidSessionError::","isMissingOrganizationError:237:(error:unknown,):error is MissingOrganizationError::","isInvalidJWTError:243:(error:unknown):error is InvalidJWTError::","isNetworkError:247:(error:unknown):error is NetworkError::","isConfigurationError:251:(error:unknown,):error is ConfigurationError::"],{"with":["12",["constructor:21:(type:AuthErrorType, message:string, originalError?:Error)::","__init__:21:(type:AuthErrorType, message:string, originalError?:Error)::"]],"to":["14",["constructor:21:(type:AuthErrorType, message:string, originalError?:Error)::","__init__:21:(type:AuthErrorType, message:string, originalError?:Error)::"]],"SupabaseError":["18",["constructor:21:(type:AuthErrorType, message:string, originalError?:Error)::","__init__:21:(type:AuthErrorType, message:string, originalError?:Error)::"]],"AuthenticationError":["72",["constructor:73:(message:string, originalError?:Error)::","__init__:73:(message:string, originalError?:Error)::"]],"SessionExpiredError":["79",["constructor:80:(message = \"Session has expired\", originalError?:Error)::","__init__:80:(message = \"Session has expired\", originalError?:Error)::"]],"InvalidSessionError":["86",["constructor:87:(message:string, originalError?:Error)::","__init__:87:(message:string, originalError?:Error)::"]],"MissingOrganizationError":["93",["__init__:94:(message = \"Organization context is missing or invalid\", originalError?:Error,)::"]],"InvalidJWTError":["103",["constructor:104:(message:string, originalError?:Error)::","__init__:104:(message:string, originalError?:Error)::"]],"NetworkError":["110",["constructor:111:(message:string, originalError?:Error)::","__init__:111:(message:string, originalError?:Error)::"]],"ConfigurationError":["117",["constructor:118:(message:string, originalError?:Error)::","__init__:118:(message:string, originalError?:Error)::"]]}],"sr/lib/supabase/multi-tenant-client.ts":["t",["createOrganizationAwareClient:63:async ():Promise<OrganizationAwareClient>::","createOptionalOrganizationClient:95:async ():Promise<::","hasOrganizationContext:118:(client:Awaited<ReturnType<typeof createOptionalOrganizationClient>>,):client is OrganizationAwareClient::","withOrganizationClient:152:(action:(client:OrganizationAwareClient, ...args:T):createOrganizationAwareClient:"]],"sr/lib/supabase/rls-helpers.ts":["t",["updateUserOrganization:41:async (userId:string, organizationId:string,):Promise<void>::","getUserOrganizationId:80:async (supabase?:SupabaseClient,):Promise<string | null>::","getUserWithOrganization:118:async (supabase?:SupabaseClient,):Promise<::","removeUserOrganization:156:async (userId:string):Promise<void>::","hasOrganizationContext:180:(user:Awaited<ReturnType<SupabaseClient[\"auth\"][\"getUser\"]>>[\"data\"][\"user\"],):user is NonNullable<typeof user> &::","validateOrganizationContext:198:async (supabase?:SupabaseClient,):Promise<void>:getUserWithOrganization:"],{"OrganizationContextError":["20",["constructor:21:(message = \"User does not have organization context\")::","__init__:21:(message = \"User does not have organization context\")::"]]}],"sr/lib/supabase/server.ts":["t",["createClient:23:async ():createServerClient,setAll:","createAdminClient:83:async ():createServerClient,setAll:","getCurrentUser:143:async ():Promise<\n  Awaited<ReturnType<SupabaseClient[\"auth\"][\"getUser\"]>>[\"data\"][\"user\"]\n>:createClient:","getCurrentUserOrganizationId:174:async ():Promise<string | null>:getCurrentUser:","requireOrganizationContext:193:async ():Promise<::"]],"sr/lib/supabase/type-guards.ts":["t",["isSupabaseUser:28:(value:unknown):value is User::","isPinPointSupabaseUser:42:(value:unknown,):value is PinPointSupabaseUser:isSupabaseUser:","isSupabaseAuthError:54:(value:unknown):value is AuthError::","isSuccessfulUserResponse:66:(response:UserResponse,):response is::","isSuccessfulAuthResponse:79:(response:AuthResponse,):response is::","isSuccessfulListUsersResponse:96:(response:unknown,):response is::","isSuccessfulCreateUserResponse:114:(response:unknown,):response is::","isSuccessfulDeleteUserResponse:130:(response:any,):response is::","classifySupabaseError:143:(error:AuthError):AuthErrorType::","hasValidResponseStructure:181:(response:unknown,):response is::","extractUserFromResponse:195:(response:unknown):User | null:hasValidResponseStructure,isSupabaseUser:","extractErrorFromResponse:216:(response:unknown):::","hasValidPinPointMetadata:242:(user:User,):user is PinPointSupabaseUser::","extractOrganizationId:255:(user:User):string | null:hasValidPinPointMetadata:","extractUserRole:263:(user:User):string | null:hasValidPinPointMetadata:","validateSupabaseResponse:288:(response:unknown, expectedDataValidator?:(data:unknown):extractErrorFromResponse,hasValidResponseStructure:"]],"sr/lib/supabase/types.ts":["t",["isPinPointSupabaseUser:123:(user:SupabaseUser,):user is PinPointSupabaseUser::","isPinPointSupabaseSession:129:(session:SupabaseSession,):session is PinPointSupabaseSession:isPinPointSupabaseUser:","isValidOrganizationContext:135:(context:unknown,):context is OrganizationContext::"]],"sr/lib/temp-production-overrides.ts":["t",["shouldForcePreviewBehavior:21:():boolean::","shouldEnablePreviewAuthInProduction:29:():boolean:shouldForcePreviewBehavior:"]],"sr/lib/tracing.ts":["t",["generateTraceId:14:():string::","generateRequestId:18:():string::","getTraceContext:22:():TraceContext | undefined::","createTraceContext:26:():TraceContext:generateRequestId,generateTraceId:"]],"sr/lib/users/roleManagementValidation.ts":["t",["validateRoleAssignment:100:(input:RoleAssignmentInput, targetRole:Role, userMembership:Membership | null, allMemberships:readonly Membership[], context:RoleManagementContext,):RoleValidationResult:validateAdminCountPreservation,validateOrganizationBoundary,validateRoleAssignmentRules,validateUserMembership:","validateUserRemoval:163:(membership:Membership, allMemberships:readonly Membership[], context:RoleManagementContext,):RoleValidationResult:validateAdminCountForRemoval,validateUserMembership,validateUserRemovalRules:","validateRoleReassignment:202:(input:RoleReassignmentInput, roleToDelete:Role, reassignRole:Role | null, memberships:readonly Membership[], context:RoleManagementContext,):RoleReassignmentValidationResult:validateReassignmentRole,validateRoleDeletion:","validateOrganizationBoundary:263:(role:Role, expectedOrganizationId:string,):RoleValidationResult::","validateUserMembership:280:(membership:Membership | null, organizationId:string,):RoleValidationResult::","validateAdminCountPreservation:305:(currentMembership:Membership, newRole:Role, allMemberships:readonly Membership[],):AdminCountValidationResult:countAdmins:","validateAdminCountForRemoval:342:(membership:Membership, allMemberships:readonly Membership[],):AdminCountValidationResult:countAdmins:","validateRoleAssignmentRules:370:(currentMembership:Membership, newRole:Role, _context:RoleManagementContext,):RoleValidationResult::","validateUserRemovalRules:391:(_membership:Membership, _context:RoleManagementContext,):RoleValidationResult::","validateRoleDeletion:403:(role:Role, _context:RoleManagementContext,):RoleValidationResult::","validateReassignmentRole:421:(reassignRole:Role, roleToDelete:Role, context:RoleManagementContext,):RoleValidationResult:validateOrganizationBoundary:","countAdmins:456:(memberships:readonly Membership[]):number::","getAdminMembers:464:(memberships:readonly Membership[],):readonly Membership[]::","isAdminRoleChange:473:(currentRole:Role, newRole:Role,):::","getRoleAssignmentEffects:495:(currentMembership:Membership, newRole:Role, allMemberships:readonly Membership[],):::","validateBatchRoleOperations:525:(operations:readonly { readonly type:\"assign\" | \"remove\"; readonly membership:Membership; readonly newRole?:Role; }[], allMemberships:readonly Membership[], _context:RoleManagementContext,):RoleValidationResult:countAdmins:"]],"sr/lib/utils.ts":["t",["cn:4:(...inputs:ClassValue[])::","muiToTailwind:9:(_muiStyles:Record<string, any>)::"]],"sr/lib/utils/api-response-transformers.ts":["t",["transformIssueResponse:43:(issue:Record<string, unknown>,):IssueResponse::","transformCommentResponse:68:(comment:Record<string, unknown>,):CommentWithAuthorResponse::","transformAttachmentResponse:80:(attachment:Record<string, unknown>,):AttachmentResponse::","transformIssuesResponse:100:(issues:Record<string, unknown>[],):IssueResponse[]:transformIssueResponse:","transformCommentsResponse:113:(comments:Record<string, unknown>[],):CommentWithAuthorResponse[]:transformCommentResponse:","transformAttachmentsResponse:126:(attachments:Record<string, unknown>[],):AttachmentResponse[]:transformAttachmentResponse:","transformIssueWithRelationsResponse:142:(issueWithRelations:Record<string, unknown>,):IssueWithRelationsResponse::","transformCommentWithAuthorResponse:157:(commentWithAuthor:Record<string, unknown>,):CommentWithAuthorResponse::","transformForDatabaseInsert:172:(data:Record<string, unknown>,):Record<string, unknown>::","safeTransformRelation:186:(relation:Record<string, unknown> | null | undefined, transformer:(obj:Record<string, unknown>)::"]],"sr/lib/utils/auth-response-transformers.ts":["t",["transformUserResponse:71:(user:unknown):UserResponse::","transformOrganizationResponse:87:(org:unknown,):OrganizationResponse::","transformMembershipResponse:110:(membership:unknown,):MembershipResponse:transformUserResponse:","transformUploadAuthContextResponse:170:(ctx:unknown,):UploadAuthContextResponse:transformMembershipResponse,transformOrganizationResponse:","transformAuthUserProfile:212:(profile:unknown):AuthUserProfile::","transformAuthArray:228:(items:unknown[], transformer:(item:unknown)::","transformUserArray:242:(users:unknown[]):UserResponse[]:transformAuthArray:","transformMembershipArray:249:(memberships:unknown[],):MembershipResponse[]:transformAuthArray:","transformOrganizationArray:258:(organizations:unknown[],):OrganizationResponse[]:transformAuthArray:"]],"sr/lib/utils/case-transformers.ts":["t",["toCamelCase:50:(str:string):string::","toSnakeCase:82:(str:string):string::","isPlainObject:110:(obj:unknown):obj is Record<string, unknown>::","transformKeysToCamelCase:176:(obj:unknown):unknown:isPlainObject,toCamelCase,transformKeysToCamelCase:","transformKeysToSnakeCase:228:(obj:unknown):unknown:isPlainObject,toSnakeCase,transformKeysToSnakeCase:"]],"sr/lib/utils/form-data.ts":["t",["extractFormField:11:(formData:FormData, fieldName:string, schema:z.ZodSchema<T>):T::","extractOptionalFormField:32:(formData:FormData, fieldName:string, schema:z.ZodSchema<T>):T | null::"]],"sr/lib/utils/id-generation.ts":["t",["generateId:7:():string::","generatePrefixedId:25:(prefix:string):string:generateId:"]],"sr/lib/utils/image-processing.ts":["t",["processImageFile:12:async (file:File,):Promise<ImageProcessingResult>:calculateDimensions:","calculateDimensions:104:(originalWidth:number, originalHeight:number, maxWidth:number, maxHeight:number,):::","processIssueImageFile:130:async (file:File,):Promise<ImageProcessingResult>:calculateDimensions:","getDefaultAvatarUrl:222:():string::"]],"sr/lib/utils/machine-response-transformers.ts":["t",["transformMachineResponse:89:(machine:unknown):MachineResponse::","transformMachinesResponse:115:(machines:unknown,):MachineResponse[]:transformMachineResponse:","transformLocationResponse:144:(location:unknown):LocationResponse:transformMachinesResponse:","transformLocationsResponse:182:(locations:unknown,):LocationResponse[]:transformLocationResponse:","transformMachineForIssuesResponse:209:(machine:Record<string, unknown>,):MachineForIssues::","transformMachinesForIssuesResponse:222:(machines:unknown,):MachineForIssues[]:transformMachineForIssuesResponse:","transformApiRequestToDb:257:(data:Record<string, unknown>,):Record<string, unknown>::","transformDbResultToApiResponse:273:(data:unknown):unknown::"]],"sr/lib/utils/membership-transformers.ts":["t",["transformMembershipForValidation:20:(membership:unknown,):Membership::","transformMembershipsForValidation:56:(memberships:unknown[],):Membership[]::","transformRoleForValidation:70:(role:unknown):Role::"]],"sr/server/api/routers/issue.comment.ts":["t",["createCommentWithAuthor:31:async (ctx:RLSOrganizationTRPCContext, input:{ issueId:string; content:string },):Promise<CommentWithAuthorResponse>::"]],"sr/server/api/routers/issue.status.ts":["t",["generateId:21:():string::","isValidCategory:146:(category:string,):category is keyof typeof categoryCounts::"]],"sr/server/api/routers/role.ts":["t",["createRoleService:52:(ctx:RLSOrganizationTRPCContext):RoleService:createRoleService:"]],"sr/server/api/routers/utils/commentService.ts":["t",{"CommentService":["34",["constructor:35:(private drizzle:DrizzleClient)::","restoreComment:81:async (commentId:string):Promise<::","getDeletedComments:119:async (organizationId:string):Promise<::","__init__:35:(private drizzle:DrizzleClient)::"]]}],"sr/server/api/routers/utils/commentValidation.ts":["t",["validateCommentExists:30:(comment:CommentData | null | undefined, organizationId:string,):ValidationResult::","validateCommentDeletionPermissions:54:(comment:CommentData, context:ValidationContext,):ValidationResult::","validateCommentEditPermissions:76:(comment:CommentData, context:ValidationContext,):ValidationResult::","validateCommentDeletionState:94:(comment:CommentData, shouldBeDeleted:boolean,):ValidationResult::","validateAdminPermissions:120:(userPermissions:string[], requiredPermission = \"issue:delete\",):ValidationResult::","validateOrganizationMembership:137:(membership:{ id:string; userId:string; organizationId:string } | null, context:ValidationContext,):ValidationResult::","validateCommentDeletion:164:(comment:CommentData | null | undefined, membership:{ id:string; userId:string; organizationId:string } | null, context:ValidationContext,):ValidationResult:validateCommentDeletionPermissions,validateCommentDeletionState,validateCommentExists,validateOrganizationMembership:","validateCommentRestoration:217:(comment:CommentData | null | undefined, context:ValidationContext,):ValidationResult:validateAdminPermissions,validateCommentDeletionState,validateCommentExists:","validateCommentEdit:257:(comment:CommentData | null | undefined, context:ValidationContext,):ValidationResult:validateCommentDeletionState,validateCommentEditPermissions,validateCommentExists:"]],"sr/server/api/trpc.base.ts":["t",["createTRPCContext:122:async (opts:CreateTRPCContextOptions,):Promise<TRPCContext>::"]],"sr/server/api/trpc.permission.ts":["t",["supabaseUserToSession:26:(user:PinPointSupabaseUser, organizationId?:string,):Session::"]],"sr/server/auth/permissions.ts":["t",["hasPermission:29:async (membership:{ roleId:string | null }, permission:string, db:DrizzleClient,):Promise<boolean>::","requirePermission:76:async (membership:{ roleId:string | null }, permission:string, db:DrizzleClient,):Promise<void>:hasPermission:","getUserPermissions:96:async (membership:{ roleId:string | null }, db:DrizzleClient,):Promise<string[]>::","hasPermissionForSession:143:async (session:Session | null, permission:string, db:DrizzleClient,):Promise<boolean>:hasPermission:","requirePermissionForSession:162:async (session:Session | null, permission:string, db:DrizzleClient,):Promise<void>:requirePermission:","getUserPermissionsForSession:180:async (session:Session | null, db:DrizzleClient,):Promise<string[]>:getUserPermissions:","getUserPermissionsForSupabaseUser:197:async (user:PinPointSupabaseUser | null, db:DrizzleClient,):Promise<string[]>:getUserPermissionsForSupabaseUser:"]],"sr/server/auth/supabase.ts":["t",["getSupabaseUser:16:async ():Promise<PinPointSupabaseUser | null>::"]],"sr/server/auth/types.ts":["t",["isValidUser:60:(user:unknown):user is User::","isValidOrganization:68:(org:unknown):org is Organization::","isValidMembership:76:(membership:unknown,):membership is MembershipWithPermissions::"]],"sr/server/auth/uploadAuth.ts":["t",["transformUploadAuthContext:41:(ctx:unknown):unknown::","getUploadAuthContext:50:async (req:NextRequest, drizzle:DrizzleClient,):Promise<UploadAuthContext>:transformUploadAuthContext:","requireUploadPermission:128:(ctx:UploadAuthContext, permission:string,):void::","validateUploadAuth:140:(_drizzle:DrizzleClient, _sessionId?:string, _organizationId?:string,):void::"]],"sr/server/auth/validation.ts":["t",["validateGoogleOAuth:20:():OAuthValidationResult::","validateAllOAuthProviders:76:():OAuthValidationResult[]:validateGoogleOAuth:","validateAndLogOAuthConfig:92:():boolean:validateAllOAuthProviders:","assertOAuthConfigValid:149:():void:validateAndLogOAuthConfig:"]],"sr/server/db/client-factory.ts":["t",["createDrizzle:14:(adapter:Sql | PGlite, loggerEnabled?:boolean,):PostgresJsDatabase<typeof schema> | PgliteDatabase<typeof schema>::"]],"sr/server/db/drizzle.ts":["t",["getDatabaseConfig:19:():DatabaseConfig::","createDrizzleClientInternal:52:():DrizzleClient:getDatabaseConfig:","createDrizzleClient:171:():DrizzleClient:createDrizzleClientInternal:","closeDrizzleConnection:185:async ():Promise<void>::"],{"DatabaseSingleton":["93",["getClient:106:():DrizzleClient::","cleanup:146:async ():Promise<void>::","reset:159:():void::"]]}],"sr/server/db/provider.ts":["t",["getGlobalDatabaseProvider:31:():DatabaseProvider::"],{"DatabaseProvider":["7",["getClient:11:():DrizzleClient::","disconnect:17:async ():Promise<void>::","reset:23:():void::"]]}],"sr/server/db/queries/audit-queries.ts":["t",["getMembershipsWithUserAndRole:29:async (organizationId:string,):Promise<::","getMachineByQrCode:67:async (qrCodeId:string):Promise<::","getIssuesByStatus:98:async (organizationId:string, statusName:string,):Promise<::","getIssuesByStatus_INCORRECT:140:async (organizationId:string)::"]],"sr/server/db/utils/common-queries.ts":["t",["withOrganizationScope:19:(column:PgColumn, organizationId:string,):SQL::","excludeSoftDeleted:30:(deletedAtColumn:PgColumn):SQL::","withOrgScopeAndNotDeleted:40:(orgColumn:PgColumn, organizationId:string, deletedAtColumn:PgColumn,):SQL:excludeSoftDeleted,withOrganizationScope:","getSingleRecord:62:async (query:Promise<T[]>,):Promise<T | null>::","getSingleRecordWithLimit:74:async (baseQuery:T,):Promise<Awaited<ReturnType<T[\"execute\"]>>[0] | null>::","validateQueryFields:103:(tableName:Parameters<typeof devValidateFields>[0], fields:string[],):void::"]],"sr/server/db/utils/field-validation.ts":["t",["getFieldMapping:123:(camelCaseField:string):string::","isCamelCase:133:(fieldName:string):boolean::","validateFieldExists:145:(_tableName:TableName, fieldName:string,):::","convertToSnakeCase:174:(camelCase:string):string::","validateFieldAccess:185:(tableName:TableName, fields:string[],):::","devValidateFields:202:(tableName:TableName, fields:string[],):void:validateFieldAccess:","validateCommonPattern:244:(tableName:TableName, pattern:keyof typeof COMMON_FIELDS,):ReturnType<typeof validateFieldAccess>:validateFieldAccess:"]],"sr/server/db/utils/role-validation.ts":["t",["ensureAtLeastOneAdmin:13:async (drizzle:DrizzleClient, organizationId:string,):Promise<void>::"]],"sr/server/services/collectionService.service.test.ts":["t",{"name":["360",[]]}],"sr/server/services/collectionService.ts":["t",{"CollectionService":["80",["constructor:81:(private db:DrizzleClient)::","getLocationCollections:87:async (locationId:string):Promise<::","generateAutoCollections:313:async ():Promise<::","getOrganizationCollectionTypes:566:async ():Promise<CollectionTypeWithCount[]>::","__init__:81:(private db:DrizzleClient)::"]]}],"sr/server/services/commentCleanupService.ts":["t",{"CommentCleanupService":["24",["constructor:25:(private db:DrizzleClient)::","cleanupOldDeletedComments:30:async ():Promise<number>::","getCleanupCandidateCount:52:async ():Promise<number>::","restoreComment:91:async (commentId:string):Promise<void>::","getDeletedComments:106:async ():Promise<Comment[]>::","__init__:25:(private db:DrizzleClient)::"]]}],"sr/server/services/factory.ts":["t",{"ensures":["13",["createNotificationService:26:():NotificationService::","createCollectionService:46:():CollectionService::","createPinballMapService:50:():PinballMapService::","createIssueActivityService:54:():IssueActivityService::","createCommentCleanupService:58:():CommentCleanupService::","createQRCodeService:62:():QRCodeService::","createRoleService:68:(organizationId?:string):RoleService::","withOrganization:77:(organizationId:string):ServiceFactory::","__init__:22:(private db:DrizzleClient, private organizationId?:string,)::"]],"ServiceFactory":["21",["createNotificationService:26:():NotificationService::","createCollectionService:46:():CollectionService::","createPinballMapService:50:():PinballMapService::","createIssueActivityService:54:():IssueActivityService::","createCommentCleanupService:58:():CommentCleanupService::","createQRCodeService:62:():QRCodeService::","createRoleService:68:(organizationId?:string):RoleService::","withOrganization:77:(organizationId:string):ServiceFactory::","__init__:22:(private db:DrizzleClient, private organizationId?:string,)::"]]}],"sr/server/services/issueActivityService.ts":["t",{"IssueActivityService":["48",["constructor:49:(private db:DrizzleClient)::","recordIssueCreated:106:async (issueId:string, actorId:string):Promise<void>::","recordIssueResolved:185:async (issueId:string, actorId:string):Promise<void>::","getIssueTimeline:254:async (issueId:string):Promise<\n    (\n      |::","__init__:49:(private db:DrizzleClient)::"]]}],"sr/server/services/notificationService.ts":["t",{"NotificationService":["43",["constructor:44:(private db:DrizzleClient)::","createNotification:52:async (data:NotificationData):Promise<void>::","markAsRead:229:async (notificationId:string, userId:string):Promise<void>::","markAllAsRead:247:async (userId:string):Promise<void>::","getUnreadCount:262:async (userId:string):Promise<number>::","__init__:44:(private db:DrizzleClient)::"]]}],"sr/server/services/permissionService.ts":["t",{"PermissionService":["32",["constructor:33:(private db:DrizzleClient)::","getUserPermissions:98:async (session:Session | null):Promise<string[]>::","expandPermissionsWithDependencies:169:(permissions:string[]):string[]::","__init__:33:(private db:DrizzleClient)::"]]}],"sr/server/services/pinballmapService.ts":["t",["syncLocationGames:451:async (db:DrizzleClient, locationId:string,):Promise<SyncResult>::","processFixtureData:459:async (db:DrizzleClient, fixtureData:PinballMapMachineDetailsResponse, locationId:string,):Promise<::"],{"PinballMapService":["33",["constructor:34:(private db:DrizzleClient)::","enableIntegration:39:async (organizationId:string):Promise<void>::","syncLocation:93:async (locationId:string):Promise<SyncResult>::","getOrganizationSyncStatus:409:async (organizationId:string):Promise<::","__init__:34:(private db:DrizzleClient)::"]]}],"sr/server/services/qrCodeService.ts":["t",{"QRCodeService":["40",["constructor:41:(private db:DrizzleClient)::","generateQRCode:46:async (machineId:string):Promise<QRCodeInfo>::","getQRCodeInfo:109:async (machineId:string):Promise<QRCodeInfo | null>::","regenerateQRCode:142:async (machineId:string):Promise<QRCodeInfo>::","generateQRCodesForOrganization:230:async ():Promise<BulkGenerationResult>::","regenerateQRCodesForOrganization:267:async ():Promise<BulkGenerationResult>::","getOrganizationQRCodeStats:313:async ():Promise<::","__init__:41:(private db:DrizzleClient)::"]]}],"sr/server/services/roleService.ts":["t",{"RoleService":["32",["createSystemRoles:47:async ():Promise<void>::","deleteRole:368:async (roleId:string):Promise<void>::","getRoles:423:async ():Promise<\n    (Role &::","ensureAtLeastOneAdmin:484:async ():Promise<void>::","getDefaultRole:506:async ():Promise<Role | null>::","getAdminRole:520:async ():Promise<Role | null>::","__init__:34:(private drizzle:DrizzleClient, private organizationId:string,)::"]]}],"sr/server/services/types.ts":["t",["isDatabaseResult:61:(obj:unknown):obj is DatabaseResult<object>::"]],"sr/server/services/validation-helper.ts":["t",["validateDrizzleFieldAccess:38:(fieldName:string):void::","validateQueryFields:56:(query:object, expectedFields?:string[],):void:validateDrizzleFieldAccess:","isSnakeCaseResult:83:(result:object):boolean::","auditDatabaseQuery:95:(queryObject:object):void:validateQueryFields:"]],"sr/server/utils/qrCodeUtils.ts":["t",["constructReportUrl:1:(machine:{ id:string; organization:{ subdomain:string }; }):string::"]],"sr/test/archived-templates/service.test.template.ts":["t",{"name":["12",[]]}],"sr/test/constants/seed-test-ids.ts":["t",["createMockAdminContext:440:():TestMockContext::","createMockMemberContext:447:(memberNumber:1 | 2 = 1,):TestMockContext::"],{"for":["288",[]]}],"sr/test/helpers/anonymous-test-helpers.ts":["t",["createAnonymousTestContext:47:(options:{ /** Organization to use for testing (defaults to primary)::","createCrossOrgTestContext:123:():::","mockSessionVariableSetup:146:(mockDb:MockProxy<DrizzleClient>, _organizationId:string,):void::","expectSessionVariableSet:173:(mockDb:MockProxy<DrizzleClient>, expectedOrgId:string,):void::","createCrossOrgAccessScenario:190:():::"]],"sr/test/helpers/service-test-helpers.ts":["t",["createMockDatabase:21:():MockProxy<DrizzleClient>::","createServiceTestContext:103:():ServiceTestContext:createMockDatabase:","expectOrganizationScoping:117:(mockCall:unknown, expectedOrgId:string,):void::"]],"sr/test/integration/archetype-integration-example.test.ts":["t",["mockAction:65:async ()::","getIssuesForOrg:99:async ()::","getIssueById:131:async (issueId:string)::","createIssueFlow:213:async (formData:FormData)::"]],"sr/test/mocks/seed-based-mocks.ts":["t",{"SeedBasedMockFactory":["74",[]],"MockAuthContextFactory":["304",[]],"MockDatabaseFactory":["330",[]],"MockFormDataFactory":["392",[]],"MockScenarioFactory":["450",[]]}],"sr/test/rsc-helpers/dal-test-helpers.ts":["t",["createMockAuthContext:13:(userId?:string, orgId?:string)::","mockSupabaseAuth:33:(mockContext = createMockAuthContext()::","createTrustedSubdomainHeaders:68:(subdomain:string):Headers::","createUntrustedSubdomainHeaders:78:(subdomain:string):Headers::","testDALFunction:88:async (dalFunction:():mockSupabaseAuth:","assertOrganizationScoping:100:async (dalFunction:():testDALFunction:"]],"sr/test/rsc-helpers/server-action-test-helpers.ts":["t",["createTestFormData:17:(fields:Record<string, string | File>,):FormData::","mockServerActionAuth:33:(mockContext = createMockAuthContext()::","mockAdminAuth:87:():mockServerActionAuth:","mockMemberAuth:94:():mockServerActionAuth:","mockAuthWithPermissions:98:(permissions:string[]):mockServerActionAuth:","createTrustedSubdomainHeaders:108:(subdomain:string):Headers::","createUntrustedSubdomainHeaders:118:(subdomain:string):Headers::","testServerAction:128:async (serverAction:(formData:FormData)::","expectDatabaseChange:143:async (options:{ table:string; where:Record<string, any>; toExist:boolean; changes?:Record<string, any>; })::"]],"sr/test/templates/dal.template.ts":["t",["createTrustedSubdomainHeaders:50:(subdomain:string):Headers::","createUntrustedSubdomainHeaders:56:(subdomain:string):Headers::"]],"sr/test/templates/e2e.template.ts":["t",["authenticateTestUser:356:async (page:Page)::","setOrganizationContext:364:async (page:Page, orgId:string)::","clearAuthentication:370:async (page:Page)::","expireSession:378:async (page:Page)::"]],"sr/test/templates/server-action.template.ts":["t",["createTrustedSubdomainHeaders:53:(subdomain:string):Headers::","createUntrustedSubdomainHeaders:59:(subdomain:string):Headers::"]],"sr/test/templates/service.test.template.ts":["t",{"name":["345",[]]}],"sr/trpc/query-client.ts":["t",["createQueryClient:7:():QueryClient::"]],"sr/trpc/react.tsx":["t",["TRPCReactProvider:53:(props:{ children:React.ReactNode; }):React.JSX.Element:getBaseUrl,getQueryClient,isClientDevelopment:","getBaseUrl:90:():string::","isClientDevelopment:17:():boolean::","getQueryClient:26:():QueryClient::"]],"sr/utils/supabase/client.ts":["t",["createClient:14:():TypedSupabaseClient::","getClient:34:():TypedSupabaseClient:createClient:"]],"sr/utils/supabase/middleware.ts":["t",["updateSession:5:async (request:NextRequest):createServerClient,setAll:"]],"sr/utils/supabase/server.ts":["t",["createClient:7:async ():Promise<TypedSupabaseClient>:createServerClient,setAll:"]],"sr/utils/version.ts":["t",["getVersion:12:():string::"]],"supabase/t/run-tests.sh":["s",["log_info:0:()::Helper functions","log_success:0:()::","log_warning:0:()::","log_error:0:()::","check_psql:0:()::Check if psql is available","check_pg_prove:0:()::Check if pg_prove is available (for better test output)","test_connection:0:()::Test database connection","setup_pgtap:0:()::Install pgTAP extension if not present","setup_test_environment:0:()::Setup test environment (roles, etc.)","run_tests_with_pg_prove:0:()::Run pgTAP tests using pg_prove","run_tests_with_psql:0:()::Run pgTAP tests using basic psql execution","run_tests:0:()::Run all tests","main:0:()::Main execution"]]},"g":[["generatePrefixedId","generateId"],["auditMultiTenantSecurity","measureRLSPerformance"],["validateCommentEditInput","validateCommentContent"],["createCompetitorAdminContext","createSeededLocationTestContext"],["expectOrganizationRequired","createAuthenticatedContext"],["PaginationServer","generatePageNumbers"],["auditMultiTenantSecurity","getDataSizeConfig"],["getSeededIssueStatuses","getCachedSeedData"],["signInWithOAuth","signInWithOAuth"],["withMultiOrgTest","setTestSession"],["getSeededOrganization","getCachedSeedData"],["cleanMachineUrl","parseMachineSearchParams"],["getSeededIssues","getCachedSeedData"],["resetSystemSettings","updateSystemSettings"],["validateTestArchetype","validateRLSContext"],["validateCommentDeletion","validateOrganizationMembership"],["middleware","setAll"],["auditDatabaseQuery","validateQueryFields"],["createMockIssuesList","createMockIssue"],["isValidOPDBId","parseOPDBId"],["createPermissionTestSuite","expectOrganizationRequired"],["mockMemberAuth","mockServerActionAuth"],["createWithMemberships","createMultipleForOrganization"],["transformMembershipArray","transformAuthArray"],["createSystemRoleSet","createMemberRole"],["createAdminClient","createServerClient"],["withBusinessLogicTest","withIsolatedTest"],["transformOrganizationArray","transformAuthArray"],["createAllPermissions","createLocationPermissions"],["getUploadAuthContext","transformUploadAuthContext"],["transformKeysToCamelCase","toCamelCase"],["createMockMachines","createMockModel"],["createPermissionTestSuite","expectAuthenticationRequired"],["createAdmin","createWithRole"],["generateCommentNotifications","createNotificationForUser"],["transformUserArray","transformAuthArray"],["mockAuthWithPermissions","mockServerActionAuth"],["getEnvironmentName","isProduction"],["getIssueCanonicalUrl","buildIssueUrl"],["isPinPointSupabaseSession","isPinPointSupabaseUser"],["LazyClientIsland","loadOnIdle"],["validateSupabaseResponse","extractErrorFromResponse"],["signOut","signOut"],["withMultiOrgTest","withIsolatedTest"],["SystemNotificationSettings","handleToggle"],["devValidateFields","validateFieldAccess"],["createSystemRoleSet","createAdminRole"],["createSessionFactory","createUserFactory"],["createTestMembership","createTestUser"],["withOrganizationClient","createOrganizationAwareClient"],["createWithMemberCount","create"],["withRLSEnabledTest","withIsolatedTest"],["getSeededIssueStatuses","getSeededOrganizationId"],["validateDrizzleConfiguration","expectPoolConfiguration"],["validateIssueAssignment","validateAssigneeMembership"],["validateLocationOrganizationBoundary","validateResourceOrganizationBoundary"],["log","log"],["middleware","createServerClient"],["createMockLocations","createMockLocation"],["PaginationUniversal","calculateVisiblePages"],["setup_test_database","print_error"],["ErrorBoundaryCard","getSeverityColors"],["SignOutButton","handleSignOut"],["transformKeysToSnakeCase","toSnakeCase"],["assertOAuthConfigValid","validateAndLogOAuthConfig"],["createTraceContext","generateRequestId"],["createCustomRole","create"],["createActivityFactory","createSingleActivity"],["transformUploadAuthContextResponse","transformOrganizationResponse"],["validateFilters","isValidSortField"],["clearTestStorage","getAllFilePaths"],["createMockIssue","createMockMachine"],["createAttachmentFactory","createSingleAttachment"],["validateStatusTransition","validateTransitionRules"],["validateRoleAssignment","validateOrganizationBoundary"],["createLocationPermissions","create"],["middleware","getSubdomain"],["withMultiOrgTest","setContext"],["validateTestArchetype","validatePerformancePatterns"],["getSingleIssue","createIssueFactory"],["auditMultiTenantSecurity","createAuditTestData"],["getSeededIssue","getCachedSeedData"],["formatMachineName","getManufacturerName"],["validateIssueAssignment","validateIssueOrganizationBoundary"],["validateQueryFields","validateDrizzleFieldAccess"],["createSingleIssue","createUserFactory"],["getFilterField","getFilterFieldsForEntity"],["transformUploadAuthContextResponse","transformMembershipResponse"],["processFiles","listSourceFiles"],["validateIssueCreation","validateDefaultPriority"],["verifyPublicOnlyContent","verifyPublicContent"],["deleteTestBucket","clearStorageBucket"],["createIssueWithMixedComments","getSingleIssue"],["createWithMemberships","createSystemRoleSet"],["createMemberRole","create"],["isProduction","getClientEnvironment"],["expectPermissionRequired","createAuthenticatedContext"],["createWithRole","createWithPermissions"],["assertOrganizationScoping","testDALFunction"],["createMultipleForOrganization","createSystemRoleSet"],["setContext","setTestSession"],["ReportingService.__init__","groupByPriority"],["urlParamsToFilters","isValidSortBy"],["createCompetitorOrgContext","createMockTRPCContext"],["getSeededAdminSupabaseUser","getSeededAdmin"],["isDevelopment","getClientEnvironment"],["handleMachineUpdate","addNotification"],["validateAndLogOAuthConfig","validateAllOAuthProviders"],["createPinballMapTestContext","setMockPermissions"],["validateRequiredFields","getFormField"],["createSingleIssue","createStatusFactory"],["updateSession","createServerClient"],["createMultipleForTesting","createWithMemberships"],["validateRoleReassignment","validateRoleDeletion"],["createWithPermissions","createCustomRole"],["createComplexIssueFactory","createCommentFactory"],["loginAsUser","clearSession"],["createActivityFactory","createUserFactory"],["validateIssueCreation","validateIssueCreationRules"],["createRoleService","ensures.createRoleService"],["seedCompleteTestData","seedTestSampleData"],["getUserPermissionsForSupabaseUser","getUserPermissionsForSupabaseUser"],["createPrimaryAdminContext","createSeededLocationTestContext"],["getValidStatusTransitions","validateStatusTransition"],["isDevelopmentOrTest","isDevelopment"],["expectAuthenticationRequired","createPublicContext"],["validateRoleReassignment","validateReassignmentRole"],["withOrgScopeAndNotDeleted","withOrganizationScope"],["createMachineFactory","createLocationFactory"],["createWithPermissions","create"],["validateMultipleEntityOwnership","validateRouterEntityOwnership"],["validateSingleFile","generateValidationReport"],["getSeededMemberSupabaseUser","getSeededMember"],["transformKeysToSnakeCase","transformKeysToSnakeCase"],["createPermissionTestSuite","createPermissionTestCases"],["withCrossOrgTest","withMultiOrgTest"],["hslToHex","f"],["clearStorageBucket","getAllFilePaths"],["validateCommentOrganizationBoundary","validateResourceOrganizationBoundary"],["transformLocationsResponse","transformLocationResponse"],["getEnvironmentName","isPreview"],["createRoleService","ServiceFactory.createRoleService"],["createComplexTestDataset","createBasicTestData"],["transformMembershipResponse","transformUserResponse"],["createComplexIssueFactory","getSingleIssue"],["resetMocks","setupDefaultResponses"],["AuthProvider","getInitialSession"],["createAdminClient","setAll"],["validateIssueAssignment","validateAssignmentRules"],["validateReassignmentRole","validateOrganizationBoundary"],["createUnauthenticated","createWithRole"],["mockAdminAuth","mockServerActionAuth"],["createMockIssue","createMockStatus"],["validateCommentRestoration","validateAdminPermissions"],["createAdminRole","create"],["createTraceContext","generateTraceId"],["validateTransitionRules","getTransitionType"],["getSeededPriorities","getCachedSeedData"],["setupAuthTestData","createSupabaseUserFromSeeded"],["transformMachinesResponse","transformMachineResponse"],["transformAttachmentsResponse","transformAttachmentResponse"],["isDevAuthAvailable","shouldEnableDevFeatures"],["getSeededUserByEmail","getCachedSeedData"],["getSeededMember","getCachedSeedData"],["configureProductionMocks","createRemoteURL"],["createLogger","isErrorObject"],["handleSubmit","saveRecentSearch"],["ActionButton","usePermissionTooltip"],["toggleLocation","updateFilters"],["createMockContext","createMockServiceFactory"],["createTestDatabase","configureForBusinessLogicTesting"],["PaginationControls","buildUrl"],["validateCommentCreationInput","validateCommentContent"],["transformKeysToSnakeCase","isPlainObject"],["createRouterTestSuite","testOrganizationScoping"],["createIssuePermissions","create"],["createAdminRole","createAllPermissions"],["createAdminMembership","createAdminRole"],["createIssueFactory","createPriorityFactory"],["shouldRequireGoogleOAuth","isProduction"],["shouldEnableCredentialsProvider","isDevelopment"],["createRoleService","createRoleService"],["IssueActions","usePermissions"],["getSeededPriorities","getSeededOrganizationId"],["Sidebar","useSidebar"],["validateDrizzleConfiguration","expectLoggingConfiguration"],["selectSuggestion","saveRecentSearch"],["withRLSAwareTest","withRLSTest"],["SidebarMenuButton","useSidebar"],["getCurrentUser","createClient"],["withActionErrorHandling","actionSuccess"],["createPermissionTestSuite","createAuthenticatedContext"],["requirePermissionForSession","requirePermission"],["extractUserFromResponse","hasValidResponseStructure"],["createClient","createServerClient"],["createPrimaryAdminContext","createSeededMachineTestContext"],["getUserPermissionsForSession","PermissionService.getUserPermissions"],["createMachineWithoutCustomName","createMockMachine"],["validateCommentEdit","validateCommentEditPermissions"],["validateRoleAssignment","validateUserMembership"],["createPermissionTestSuite","expectPermissionRequired"],["generateMaterialTheme","schemeToColors"],["validateUserRemoval","validateUserMembership"],["TRPCReactProvider","isClientDevelopment"],["validateEntityExistsAndOwned","validateRouterEntityOwnership"],["PaginationUniversal","buildPaginationUrl"],["updateSession","setAll"],["getEnvironmentName","isDevelopment"],["esc","esc"],["initializeNotificationStream","addNotification"],["createMockIssue","createMockPriority"],["processFiles","log"],["validateCommentDeletion","validateCommentDeletionState"],["createAdminMembership","createTestUser"],["handleDeleteUserResponse","handleResponse"],["createWithMemberships","create"],["getClient","createClient"],["createComplexIssueFactory","createAttachmentFactory"],["createFilterAction","handleFilterSubmit"],["shouldEnablePreviewAuthInProduction","shouldForcePreviewBehavior"],["createIssueFactory","createSingleIssue"],["createPermissionTestSuite","expectOrganizationIsolation"],["formatMachineName","getYearValue"],["getSeededAdmin","getCachedSeedData"],["validateCommentEditWithTimeLimit","canEditCommentByTime"],["getSeededPlayer","getCachedSeedData"],["createMembership","createTestRole"],["handleIssueUpdate","addNotification"],["createCompetitorAdminContext","createSeededMachineTestContext"],["validateTestArchetype","validateErrorHandling"],["processFiles","buildMapping"],["shouldEnableCredentialsProvider","isPreview"],["validateIssueOrganizationBoundary","validateResourceOrganizationBoundary"],["createCompetitorMembership","createMockMembership"],["extractOrganizationId","hasValidPinPointMetadata"],["transformMachinesForIssuesResponse","transformMachineForIssuesResponse"],["withMachineOwnerBusinessLogicSetup","setupTestData"],["validateStatusTransition","validateOrganizationBoundary"],["seedTestInfrastructure","seedProductionInfrastructure"],["validateSingleFile","validateTestArchetype"],["withRLSSecurityContext","esc"],["createCommentFactory","createUserFactory"],["generateIssueCreationNotifications","createNotificationForUser"],["createPrimaryMemberContext","createSeededLocationTestContext"],["mockCurrentMembership","createMockMembership"],["transformKeysToCamelCase","isPlainObject"],["createAdminPermissions","create"],["hasCycle","hasCycle"],["createIssueRouterContext","createUserFactory"],["main","generateSQLConstants"],["transformIssuesResponse","transformIssueResponse"],["createTechnician","createWithRole"],["generateOrganizationalReport","calculateAvgResolutionTime"],["handleSubmit","forEach"],["getSeededPlayerSupabaseUser","createSupabaseUserFromSeeded"],["createMockUsers","createMockUser"],["createAllPermissions","createMachinePermissions"],["withRLSTest","withIsolatedTest"],["createSystemRoleSet","createUnauthenticatedRole"],["validateCommentDeletion","validateCommentExists"],["getCurrentUserOrganizationId","RLSContextManager.getCurrentUser"],["batchToggleSelection","toggleSelection"],["isPinPointSupabaseUser","isSupabaseUser"],["validateAllOAuthProviders","validateGoogleOAuth"],["validateFormData","actionSuccess"],["shouldRequireGoogleOAuth","isPreview"],["execute_sql_seeds","log_info"],["setupAllIssueListMocks","setupNavigationMocks"],["createStructuredError","classifyGenericError"],["validateFilters","getDefaultFilters"],["generateStatusChangeNotifications","getIssueStakeholders"],["isPreview","getClientEnvironment"],["createMembership","createTestUser"],["validateCommentRestoration","validateCommentDeletionState"],["getEnvironmentName","getClientEnvironment"],["requirePermission","hasPermission"],["createComplexIssueFactory","createActivityFactory"],["createAllPermissions","createIssuePermissions"],["createNumberedVariation","createNumberedId"],["getSeededUserByEmail","getUserWithRoles"],["getSeededMember","getUserWithRoles"],["createSingleIssue","createPriorityFactory"],["processImageFile","calculateDimensions"],["generateCssCustomProperties","hexToHslString"],["seedTestSampleData","seedProductionSampleData"],["CreateIssuePage","transformUsersForForm"],["validateDrizzleConfiguration","expectSSLConfiguration"],["createSingleActivity","createUserFactory"],["setupAuthTestData","getSeededAdmin"],["validateCommentEdit","validateCommentDeletionState"],["validateIssueCreation","validateDefaultStatus"],["getMachineCanonicalUrl","buildMachineUrl"],["seedCompleteTestData","seedTestInfrastructure"],["createAllPermissions","createAttachmentPermissions"],["createWithPermissions","createWithRole"],["createWithUser","create"],["getIssueCanonicalUrl","cleanIssueUrl"],["cleanIssueUrl","buildIssueUrl"],["AuthProvider","signOut"],["canEditCommentByTime","getCommentAgeInMinutes"],["generateCommentNotifications","getIssueStakeholders"],["createIssueFactory","createStatusFactory"],["loginAsTechnician","loginAsUserWithPermissions"],["createUnauthenticatedRole","create"],["addNotification","removeNotification"],["ReportingService.constructor","groupByPriority"],["verifyIntegrationTesterSetup","getIntegrationTesterDatabaseUrl"],["createUser","createWithRole"],["createCompetitorOrganization","createMockOrganization"],["createClient","setAll"],["createMockIssue","createMockUser"],["withActionErrorHandling","actionError"],["CreateIssuePage","transformMachinesForForm"],["createMultipleForOrganization","createWithUser"],["buildMapping","collectSchemaColumns"],["setupMultiOrgContext","createOrgContext"],["generateStatusChangeNotifications","createNotificationForUser"],["getCurrentUserOrganizationId","getCurrentUser"],["createWithRole","getRolePermissions"],["validateCommentEditWithTimeLimit","validateCommentEditPermissions"],["transformLocationResponse","transformMachinesResponse"],["createCommentFactory","createSingleComment"],["authenticateDevUser","isValidDevEmail"],["SidebarRail","useSidebar"],["validateUserPermissions","getTransitionType"],["MyComponent","usePermissions"],["hasPermission","getRolePermissions"],["createLogger","hasCodeAndMessage"],["validateAdminCountForRemoval","countAdmins"],["setupAuthTestData","getSeededMember"],["validateCommentRestoration","validateCommentExists"],["NotificationsListServer","getNotificationColor"],["logout","waitForLogout"],["createRouterTestSuite","testAdminOnlyProcedure"],["createRouterTestSuite","testPublicProcedure"],["getSelectionSummary","getSelectedCount"],["getUserPermissionsForSession","getUserPermissions"],["toggleSelectAll","selectAll"],["loginAsUser","waitForAuthentication"],["createIssueFactory","createMachineFactory"],["createStructuredError","isAuthError"],["getSeededOrganizationId","getSeededOrganization"],["createMockMachine","createMockLocation"],["loadOrganizations","isValidOrganizationArray"],["getGroupIdFromOPDBId","parseOPDBId"],["createTRPCCallerForIssues","createMockServices"],["createServiceTestContext","createMockDatabase"],["cleanIssueUrl","parseIssueSearchParams"],["withOrgScopeAndNotDeleted","excludeSoftDeleted"],["validateUserRemoval","validateAdminCountForRemoval"],["validateCommentEdit","validateCommentExists"],["processFiles","applyMappingToContent"],["createSystemRoleSet","createTechnicianRole"],["createFallbackLogger","createFallbackLogger"],["createTestDatabase","applyDrizzleSchema"],["createPrimaryMemberContext","createSeededMachineTestContext"],["createRouterTestSuite","testAuthenticatedProcedure"],["validateTestArchetype","validateArchetypeCompliance"],["transformCommentsResponse","transformCommentResponse"],["AdminPanel","useRequiredPermission"],["toggleSelectAll","isAllSelected"],["createDualChildLogger","createDualChildLogger"],["getSeededAdmin","getUserWithRoles"],["validateStatusTransition","validateUserPermissions"],["createRouterTestSuite","testInputValidation"],["createMachinePermissions","create"],["getSeededPlayer","getUserWithRoles"],["validateAdminCountPreservation","countAdmins"],["handler","createContext"],["createDrizzleClientInternal","getDatabaseConfig"],["configureDevelopmentMocks","createLocalhost5432URL"],["initializeRealtimeConnection","on"],["handleFormSubmission","addNotification"],["extractTrustedSubdomain","isSubdomainHeaderTrusted"],["validateRoleAssignment","validateRoleAssignmentRules"],["getAllFilePaths","getAllFilePaths"],["validateBatchRoleOperations","countAdmins"],["createSingleAttachment","createUserFactory"],["testInputValidation","createRouterTestContext"],["createFallbackLogger","mergeContext"],["validateTestArchetype","validateMemorySafety"],["validateTestArchetype","detectArchetype"],["auditMultiTenantSecurity","auditTableIsolation"],["isDevelopmentOrTest","isTest"],["getMachineCanonicalUrl","cleanMachineUrl"],["validateBatchAssignments","validateAssigneeMembership"],["setupAllIssueListMocks","setupPermissionMocks"],["createTechnicianRole","create"],["createTestDatabase","verifyMigrationComplete"],["clearAllFilters","getDefaultFilters"],["createDrizzleClient","createDrizzleClientInternal"],["setupAuthTestData","getSeededOrganization"],["urlParamsToFilters","isValidSortOrder"],["transformKeysToCamelCase","transformKeysToCamelCase"],["createMembershipValidationInput","createMockMembership"],["OrganizationLogoForm","handleUrlChange"],["PaginationServer","buildPageUrl"],["isDevelopmentOrPreview","isDevelopment"],["ErrorDetails","getErrorMessage"],["extractUserFromResponse","isSupabaseUser"],["logout","clearSession"],["validateFormData","actionError"],["setupAllIssueListMocks","setupTRPCMocks"],["getSeededMemberSupabaseUser","createSupabaseUserFromSeeded"],["toggleSelectAll","selectNone"],["validateTestArchetype","validateImportStructure"],["validateMachineOrganizationBoundary","validateResourceOrganizationBoundary"],["validateIssueCreation","validateMachineOrganizationBoundary"],["createMockMachines","createMockMachine"],["validateMemorySafety","getLineNumber"],["validateUserRemoval","validateUserRemovalRules"],["getSeededAdminSupabaseUser","createSupabaseUserFromSeeded"],["createAttachmentPermissions","create"],["getRolePermissions","createMatrix"],["validateBatchAssignments","validateIssueOrganizationBoundary"],["createWithRoles","create"],["safeParseSearchParams","extractSearchParamErrors"],["validateCommonPattern","validateFieldAccess"],["createMockStatuses","createMockStatus"],["getSeededPlayerSupabaseUser","getSeededPlayer"],["validateFilters","isValidSortOrder"],["loadOnIdle","loadComponent"],["TRPCReactProvider","getBaseUrl"],["createWithRoles","createSystemRoleSet"],["createMachineFactory","createModelFactory"],["LazyClientIsland","loadComponent"],["extractUserRole","hasValidPinPointMetadata"],["validateTestFiles","validateTestArchetype"],["validateImportStructure","getLineNumber"],["buildMapping","snakeToCamel"],["testDALFunction","mockSupabaseAuth"],["NotificationsListServer","getNotificationIcon"],["SidebarTrigger","useSidebar"],["PaginationServerCompact","buildPageUrl"],["configureCIMocks","createRemoteURL"],["hasPermissionForSession","hasPermission"],["createIssueFactory","createUserFactory"],["generateOrganizationalReport","getTopMachinesByIssues"],["createLogger","createFallbackLogger"],["validateOrganizationContext","getUserWithOrganization"],["validateSupabaseResponse","hasValidResponseStructure"],["validateCommentDeletion","validateCommentDeletionPermissions"],["createServerMockContext","createMockSupabaseUser"],["createAllPermissions","createAdminPermissions"],["validateRoleAssignment","validateAdminCountPreservation"],["handleClearFilters","forEach"],["cleanupSeedDataHelpers","clearSeedDataCache"],["createTRPCCallerForIssues","createIssueRouterContext"],["setupAuthTestData","getSeededPlayer"],["authenticateDevUser","signInDevUser"],["createSingleComment","createUserFactory"],["createMockMachine","createMockModel"],["cleanMachineUrl","buildMachineUrl"],["shouldEnableDemoLogin","isPreview"],["validateDrizzleConfiguration","expectTimeoutConfiguration"],["validatePublicOrganizationContextRequired","validatePublicOrganizationContext"],["shouldEnableTestLogin","isDevelopment"],["createSingleIssue","createMachineFactory"],["TRPCReactProvider","getQueryClient"],["isDevelopmentOrPreview","isPreview"],["createCompetitorOrgUser","createMockSupabaseUser"],["ActionButton","usePermissions"],["processIssueImageFile","calculateDimensions"],["createAttachmentFactory","createUserFactory"],["generateAssignmentNotifications","createNotificationForUser"]],"d":{"AGENTS.md":["Repository Guidelines","Project Structure & Modules","Build, Test, and Development","Coding Style & Naming","Testing Guidelines","Commit & Pull Requests","Security & Configuration"],"RLS_IMPLEMENTATION_TASKS.md":["RLS & Visibility Implementation Task List","1. Schema Changes","1.1 Visibility Foundations","1.2 Ownership & Relationships","1.3 Soft Delete / Lifecycle","1.4 Cross-Org Transfer Support (Future-Proofing)","1.5 Integrity & Invariants","1.6 Permissions Seeding","1.7 Auxiliary Columns / Views","2. Functions (SQL / PLpgSQL)"],"docs/security/rls-assertions.md":["RLS Assertions","1. Purpose & Scope","2. Terminology","3. Core Principles","4. Containment Hierarchy (Authoritative)","5. Invariants (Must Always Hold)","6. Visibility / `is_public` Inheritance","7. Roles & Permission Model","8. Permission Catalog (Authoritative)"],".archived-tests-2025-08-23/ARCHIVE_MANIFEST.md":["Test Archive Manifest - 2025-08-23","Archive Purpose","Archive Timestamp","\ud83c\udfaf Final Result","What Was Preserved (NOT archived)","\ud83d\udfe2 Functional Tests (4 files remain)","\ud83d\udfe2 Essential Infrastructure","\ud83d\udfe2 CI/CD Maintained","What Was Archived (Complete)","\u2705 Test Files Archived (~73 files)"],".archived-tests-2025-08-23/src/test/MIGRATION_GUIDE.md":["Permission Testing Migration Guide","Migration Strategy","Phase 1: Identify Duplication Patterns","Phase 2: Replace with Utilities","File-by-File Migration","1. notification.test.ts","2. issue.test.ts","3. collection.router.test.ts","4. Other Router Tests"],".archived-tests-2025-08-23/src/test/README.md":["Permission Testing Utilities","Quick Start","Core Concepts","1. Permission Scenarios","2. Context Factories","3. Permission Test Helpers","Router Test Patterns","Basic Patterns","Input Validation Testing","Service Integration Testing"],".github/ISSUE_TEMPLATE.md":["Issue Template","Summary","Steps to Reproduce","Expected Behavior","Actual Behavior","Additional Context"],".github/SECRETS.md":["Required GitHub Secrets for CI/CD","Smoke Test Workflow","Supabase Configuration","Database Connection","Setting Up Secrets","Security Notes","Alternative: Staging Instance"],".github/chatmodes/researcher.chatmode.md":["Researcher Chat Mode","Core Operating Principles","Allowed Tool Usage Patterns","Strictly Prohibited in This Mode","Standard Research Workflow"],".github/issue_template.md":["Migrate Integration Tests to Memory-Optimized Pattern","\ud83c\udfaf Objective","\ud83d\udccb Background","\ud83d\udd0d Files to Migrate","Primary Target","Secondary Targets","\ud83d\udcd6 Migration Guide","6-Step Migration Checklist","Working Example Pattern","\ud83c\udfaf Success Criteria"],"CLAUDE.md":["PinPoint Development Instructions","\ud83d\udea8 CRITICAL CONSTRAINTS","Non-Negotiable Patterns","Mandatory Context7 Usage","Forbidden Commands","\ud83d\udccd PROJECT CONTEXT","Current Phase: Dual Evolution","Project Status","\ud83c\udfd7\ufe0f ARCHITECTURE DIRECTIVES","Server-First Principles"],"COMPETING_ARCHITECTURE_PLANS.md":["Competing Architecture Plans for PinPoint","Plan A: Server-First Next.js (Current Plan)","Core Philosophy","Technical Implementation","Multi-Tenancy Strategy","Migration Path","Concrete System Changes","Production Examples","Tradeoffs","Plan B: Remix Server-First Migration"],"CURRENT_ARCHITECTURE_ANALYSIS.md":["PinPoint Current Architecture Analysis","System Overview","Tech Stack","Core Business Logic","Current Architecture Pattern","Authentication Flow","Data Flow Pattern","Critical Problems","1. **Hydration Mismatch Errors** \ud83d\udea8","2. **Authentication State Complexity** \ud83d\udd04"],"ESLINT_REMAINING_WORK_BREAKDOWN.md":["ESLint Remaining Work: Detailed Breakdown","Executive Summary","Error Distribution by Rule Type","HIGH VOLUME: Type Safety Issues (135 errors - 73%)","MEDIUM VOLUME: Code Quality Issues (50 errors - 27%)","Error Concentration by Architecture Layer","Frontend Components (~60 errors)","Backend Services (~75 errors)","Test Infrastructure (~50 errors)","Strategic Categories for Resolution"],"PHASE_4_COMPLETION_SUMMARY.md":["Phase 4 Completion Summary: React 19 Cache Performance Optimization","\ud83c\udfaf Mission Accomplished","\u2705 Phase 4 Implementation Results","Phase 4A: DAL Cache() Coverage - **COMPLETE**","Phase 4B: Duplicate Query Hot Spots - **COMPLETE**","Phase 4C: Cache Verification & Debug Tools - **COMPLETE**","Phase 4D: Server Action Cache Invalidation - **COMPLETE**","\ud83d\udcca Performance Impact Achieved","**Database Query Reduction**","**Page Load Performance**  "],"README.md":["PinPoint: Modern Issue Tracking for Arcades & Collectives","About The Project","Key Features","Built With","Current Development Phase","\ud83d\udea8 Development User Reset Warning","Architecture Changes"],"RSC_MIGRATION/COMPREHENSIVE_RSC_TEST_SYSTEM_PLAN.md":["PinPoint RSC Test System Comprehensive Plan","Executive Summary","RSC Architectural Impact on Testing","Obsolete Test Patterns (Left Behind by RSC Migration)","New RSC Test Requirements","RSC Test Archetype System","**Archetype 1: Unit Tests** (`*.unit.test.ts`)","**Archetype 2: Server Component Tests** (`*.server-component.test.ts`)","**Archetype 3: Client Island Tests** (`*.client-island.test.tsx`)","**Archetype 4: Server Action Tests** (`*.server-action.test.ts`)"],"RSC_MIGRATION/FILE_MIGRATION_PLAN.md":["Complete File Migration Impact Analysis","App Router Structure (`/src/app/`)","Root Layout & Providers","Authentication Routes","Dashboard & Main Pages","Issue Management Routes","Machine & Location Routes","Component Library (`/src/components/`)","Issue Management Components (\ud83d\udea8 HIGHEST COMPLEXITY)","Machine & Location Components"],"RSC_MIGRATION/MIGRATION_OVERVIEW.md":["React Server Components Migration Overview","Technology Stack Updates","Migration Philosophy & Approach","Current Architecture Analysis","Existing Component Hierarchy","Current Data Flow Patterns","Target Server-First Architecture","Server Component Hierarchy Design"],"RSC_MIGRATION/PHASE_1A_SHADCN_TAILWIND_SETUP.md":["Phase 1A: shadcn/ui + Tailwind CSS Foundation Setup","Technology Stack","**Tailwind CSS v4 Changes**","**Material UI v7 Updates**  ","**shadcn/ui Components**","Implementation Goals","\ud83c\udfaf Implementation Plan","Step 1: Install Tailwind v4 + shadcn/ui Dependencies","Tailwind v4 with revolutionary CSS-based configuration","Remove old v3 config if exists"],"RSC_MIGRATION/PHASE_1B_DATA_ACCESS_LAYER.md":["Phase 1B: Data Access Layer (DAL) Implementation (2025 Revolution)","\ud83d\ude80 2025 Performance Revolution Overview","**Revolutionary Technology Stack**","\ud83d\udccb Enhanced Implementation Goals","\ud83c\udfaf Implementation Plan","Step 1: Revolutionary DAL Architecture Foundation (React 19 cache() API)"],"RSC_MIGRATION/PHASE_1C_SERVER_ACTIONS.md":["Phase 1C: Server Actions Infrastructure","\ud83d\udccb Overview","\ud83d\udea8 CRITICAL: 2025 Tech Stack Updates","\ud83c\udfaf Implementation Plan","Step 1: Server Actions Foundation (2025 Patterns)"],"RSC_MIGRATION/PHASE_1D_LAYOUT_CONVERSION.md":["Phase 1D: Layout System Conversion","\ud83d\udccb Overview","\ud83c\udfaf Implementation Plan","Step 1: Supabase Client Utilities (2025 SSR Patterns)"],"RSC_MIGRATION/PHASE_1_FOUNDATION_PLAN.md":["RSC Migration Phase 1: Foundation Infrastructure Plan","\ud83d\udccb Phase 1 Overview & Strategy","\ud83c\udfaf Phase 1 Deliverables & Implementation Plan","1. shadcn/ui Foundation Setup","Install shadcn/ui and dependencies","2. Server-Side Data Access Layer (DAL)","3. Server Actions Infrastructure"],"RSC_MIGRATION/PHASE_2A_DATA_ACCESS_LAYER.md":["Phase 2A: Data Access Layer Foundation","Core Infrastructure Files","Authentication Context (`src/lib/dal/auth-context.ts`)","Issues DAL (`src/lib/dal/issues.ts`)","Organizations DAL (`src/lib/dal/organizations.ts`)","Implementation Steps","1. Authentication Context Setup"],"RSC_MIGRATION/PHASE_2B_SERVER_ACTIONS.md":["Phase 2B: Server Actions Infrastructure","Core Infrastructure Files","Server Actions Utilities (`src/lib/actions/shared.ts`)","Issue Server Actions (`src/lib/actions/issue-actions.ts`)"],"RSC_MIGRATION/PHASE_2C_AUTHENTICATION.md":["Phase 2C: Authentication Integration","Core Authentication Files","Server Authentication Context (`src/lib/auth/server-auth.ts`)","Authentication Middleware (`src/middleware.ts`)","Middleware Authentication Logic (`src/lib/auth/middleware-auth.ts`)"],"RSC_MIGRATION/PHASE_2D_ISSUE_MANAGEMENT.md":["Phase 2D: Issue Management Server Components","Core Issue Management Components","Issues List Server Component (`src/components/issues/issues-list-server.tsx`)"],"RSC_MIGRATION/PHASE_2E_DASHBOARD.md":["Phase 2E: Authenticated Dashboard","Core Dashboard Components","Dashboard Server Component (`src/app/dashboard/page.tsx`)"],"RSC_MIGRATION/PHASE_2_OVERVIEW.md":["RSC Migration Phase 2: Server-First Foundation","Phase 2 Architecture Transformation","**From**: Client-Heavy MUI Architecture","**To**: Server-First React Server Components","Phase 2 Subphases Overview","**[Phase 2A: Data Access Layer Foundation](./PHASE_2A_DATA_ACCESS_LAYER.md)**","**[Phase 2B: Server Actions Infrastructure](./PHASE_2B_SERVER_ACTIONS.md)**","**[Phase 2C: Authentication Integration](./PHASE_2C_AUTHENTICATION.md)**","**[Phase 2D: Issue Management Server Components](./PHASE_2D_ISSUE_MANAGEMENT.md)**","**[Phase 2E: Authenticated Dashboard](./PHASE_2E_DASHBOARD.md)** "],"RSC_MIGRATION/PHASE_3A_ISSUE_SYSTEM_REWRITE.md":["Phase 3A: Issue System Complete Rewrite","Current Architecture Analysis","Existing Issue Components Assessment","Performance and Complexity Problems","Target Architecture: Server-First Issue System","Core Transformation Strategy","Component Architecture Blueprint","Implementation Deliverables","1. Server Component Issue List (`src/app/issues/page.tsx`)"],"RSC_MIGRATION/PHASE_3B_MACHINE_MANAGEMENT.md":["Phase 3B: Machine Management Server-First Conversion","Current Machine System Analysis (Updated: August 27, 2025)","**ARCHIVED**: Machine Components Successfully Removed","Performance and Complexity Issues","Target Architecture: Server-First Machine Management","Core Transformation Strategy","Component Architecture Blueprint","Implementation Deliverables","1. Machine Inventory Server Component (`src/app/machines/page.tsx`)"],"RSC_MIGRATION/PHASE_3B_URL_STATE_MANAGEMENT.md":["Phase 3B: URL-Based State Management","Current State Management Problems","**Client-Side State Issues in Current Codebase**","Target URL-Based Architecture","**Core URL State Management Pattern**","**Shareable URL Structure Design**","**Type-Safe Search Parameter Parsing**"],"RSC_MIGRATION/PHASE_3C_SEARCH_AND_FILTERING.md":["Phase 3C: Search and Filtering Systems","Current Search and Filtering Analysis","Existing Search System Assessment","Performance and UX Problems","Target Architecture: Server-Side Search and Filtering","Core Transformation Strategy","System Architecture Blueprint","Implementation Deliverables","1. Universal Search Service (`src/lib/services/search-service.ts`)"],"RSC_MIGRATION/PHASE_3D_CLIENT_ISLAND_PRECISION.md":["Phase 3D: Client Island Precision","Client Island Architecture Philosophy","**Current Problem: Over-Client Components**","**Target: Server-First with Precise Client Islands**","Client Island Categories and Implementation","**Category 1: Real-Time Updates**","**Category 2: Form Interactivity**"],"RSC_MIGRATION/PHASE_3_CLIENT_ISLAND_CONVERSION.md":["RSC Migration Phase 3: Client Island Conversion","Current Architecture Analysis","\u2705 **Already Converted (Phase 2 Complete)**","\ud83d\udd04 **Partially Converted (Mixed State)**","\u274c **Needs Full Conversion (47 Client Components)**","Phase 3 Strategic Approach","**3A: Complex Client Components \u2192 Server-First Architecture**","**3B: URL-Based State Management**","**3C: Form Modernization**","**3D: Client Island Precision**"],"RSC_MIGRATION/PHASE_3_IMPLEMENTATION_ROADMAP.md":["Phase 3 Implementation Roadmap: Complete RSC Migration","Executive Summary","**Current Architecture Analysis**","**Phase 3 Transformation Goals**","**Expected Performance Impact**","Phase 3 Subphase Breakdown","**[Phase 3A: Complex Component Conversion](./PHASE_3A_COMPLEX_COMPONENT_CONVERSION.md)**","**[Phase 3B: URL-Based State Management](./PHASE_3B_URL_STATE_MANAGEMENT.md)**","**[Phase 3C: Material UI Conversion](./PHASE_3C_MATERIAL_UI_CONVERSION.md)**","**[Phase 3D: Client Island Precision](./PHASE_3D_CLIENT_ISLAND_PRECISION.md)**"],"RSC_MIGRATION/PHASE_3_OVERVIEW.md":["Phase 3: Core Feature Systems Transformation","Strategic Context & Impact Analysis","Current Architecture Analysis (Updated: August 27, 2025)","Performance Impact Projections","Architectural Transformation Scope","Phase 3 Execution Strategy","Phase 3A: Issue System Complete Rewrite","Phase 3B: Machine Management Server-First Conversion  ","Phase 3C: Search and Filtering Systems Modernization","Phase 3D: Client Island Precision and Optimization"],"RSC_MIGRATION/PHASE_4_ADVANCED_FEATURES_OPTIMIZATION.md":["Phase 4: Advanced Features and Performance Optimization","Phase Overview","Strategic Focus Areas","1. **Essential Real-Time Features**","2. **Administrative Interface Completion**","3. **Performance Optimization and Polish**","Phase 4A: Essential Real-Time Features","**Objective**: Real-Time Where It Matters","**Sub-Issues**:","Phase 4B: Essential Administrative Interfaces"],"RSC_MIGRATION/PHASE_5_MIGRATION_COMPLETION.md":["RSC Migration Phase 5: Migration Completion & Legacy Cleanup","Overview","Phase 5A: Legacy File Cleanup (Week 1)","Objective","Success Criteria","Files to DELETE","Verification Process","Phase 5B: Core MUI Migration (Week 2)","Objective  ","Success Criteria"],"RSC_MIGRATION/RSC_TEST_SYSTEM_INTEGRATION.md":["RSC Test System Integration Plan","Executive Summary","RSC Impact on Test Archetype System","Current Archetype System (CLIENT-HEAVY ASSUMPTIONS)","RSC Architectural Reality","New RSC Test Archetypes","**Server Component Tests** (Enhanced Archetype 2a)","**Server Action Tests** (New Archetype)","**Client Island Tests** (Traditional Archetype 2b)"],"RSC_MIGRATION/STRATEGIC_TRANSFORMATION_OVERVIEW.md":["PinPoint Strategic Transformation Overview","Architectural Philosophy Shift","Current State: Client-Heavy Architecture","Target State: Server-First Architecture  ","Technology Stack Evolution","Foundation Technologies Transformation","Performance Technology Leverage","Core Transformation Categories","1. Component Architecture Transformation","2. Data Flow Architecture Changes  "],"RSC_MIGRATION/phase-3d-client-component-audit.md":["Phase 3D Client Component Audit & Optimization Matrix","\ud83c\udfaf **Executive Summary**","**Current Distribution**","**Optimization Potential**","\ud83d\udcca **Priority Matrix**","**\ud83d\udd34 PRIORITY 1: High-Impact Conversions (Target: Week 1)**","**\ud83d\udfe1 PRIORITY 2: Medium-Impact Optimizations (Target: Week 1-2)**"],"SERVER_FIRST_ARCHITECTURE_PLAN.md":["Server-First Architecture Migration Plan (Plan A)","Overview","Core Philosophy","Decision Point Alignment","**Simplicity** \u2b50\u2b50\u2b50\u2b50","**Maintainability** \u2b50\u2b50\u2b50\u2b50","**Multi-tenancy** \u2b50\u2b50\u2b50\u2b50","Production Examples (2025)","Migration Benefits","Phase 1: Foundation Layer (Week 1)"],"TYPESCRIPT_CLEANUP_ROADMAP.md":["TypeScript Cleanup Roadmap","\ud83c\udfaf **Overview**","\ud83d\udccb **Task Categories by Priority**","**\ud83d\udd25 CRITICAL - Phase 1: Database Relations (Blocking Everything)**","**\u26a0\ufe0f HIGH - Phase 2: Index Signature & Realtime Issues**","**\ud83d\udd27 MEDIUM - Phase 3: Null Safety & Optional Properties**","**\ud83d\udd0d LOW - Phase 4: Schema Consistency & Minor Fixes**"],"copilot-instructions.md":["PinPoint \u2013 Copilot Instructions (Developer Quick Guide)","Context you must assume","Do / Don't (critical)","Commands you\u2019ll actually use","Test architecture patterns (Phase 3.3 validated)","Hardcoded test data (SEED_TEST_IDS)","RLS Testing","Database rules (pre\u2011beta)","Safe tooling","Useful repo facts"],"docs/INDEX.md":["PinPoint Documentation","Project Status","Quick Start","For New Developers","For Current Development","Documentation Structure","Essential","Reference","Archive","Quick Commands"],"docs/NON_NEGOTIABLES.md":["PinPoint Non-Negotiables","\ud83d\udea8 ABSOLUTELY FORBIDDEN PATTERNS","\u26a1 HIGH PRIORITY VIOLATIONS","\ud83d\udd10 SECURITY REQUIREMENTS","\ud83e\uddea TESTING REQUIREMENTS","\ud83d\udccb DRIZZLE NAMING"],"docs/NON_NEGOTIABLES_EXAMPLES.md":["PinPoint Non-Negotiables Examples","Memory Safety Violations","Migration Files","\u274c NEVER CREATE THESE FILES","Schema Modifications","Deprecated Imports","TypeScript Safety Defeats","Deep Relative Imports","Seed Data Modifications","Missing Return Types"],"docs/README.md":["PinPoint Documentation","\ud83c\udfaf Authoritative Documents (Always Current)","Planning & Roadmap","Architecture & Design","Reference","Implementation Guides","Development Resources","\ud83d\udccb Implementation Status","Completed Backend Tasks","Pending Backend Tasks"],"docs/TARGET_ARCHITECTURE.md":["PinPoint Target Architecture","Table of Contents","1. Technology Foundation","Core Technology Stack","UI and Styling Systems","Database and Authentication","Development and Quality Assurance","Architectural Principles"],"docs/TARGET_ARCHITECTURE_CONDENSED.md":["PinPoint Target Architecture (Condensed)","Core Technology Stack","Authentication Architecture","Database Architecture","Application Architecture","Security Model","Directory Structure","Testing Architecture","Key Architectural Principles"],"docs/architecture/INDEX.md":["Architecture Documentation","Current Stack","Current Phase","Contents"],"docs/architecture/api-routes.md":["API Routes Documentation","Overview","Why tRPC-First?","Legitimate API Routes","1. Authentication Handler","2. tRPC Handler","3. Health Check","4. QR Code Redirect","5. Development User Utility","Removed API Routes"],"docs/architecture/current-state.md":["PinPoint Architecture: Current State","Overview","Technology Stack (As Implemented)","Multi-Tenancy Architecture","Current State: Single-Tenant Beta \u2192 Multi-Tenant V1.0","Database Schema (Current Implementation)","Core Models","RBAC Implementation","API Architecture","tRPC-First Strategy"],"docs/architecture/dependency-injection.md":["Dependency Injection Architecture","Overview","Core Architecture","Service Factory Pattern","Database Provider Singleton","tRPC Context Injection","Context Structure","Context Creation Flow","Usage in Routers","Authentication Context Hierarchy"],"docs/architecture/permissions-roles-implementation.md":["Permissions and Roles System Implementation","Overview","Database Schema","Core Models","Permission System","Permission Categories","Permission Dependencies","System Roles","Role Templates","Frontend Components"],"docs/architecture/source-map.md":["PinPoint Source Code Map","Core Common Files","Authentication & Authorization","Frontend Components","Backend Implementation","Database Models","Tests","Issue Management System","Frontend Components","Backend Implementation"],"docs/architecture/terminology.md":["PinPoint Terminology Reference","Model Renames (Historical \u2192 Current)","Core Concepts","Organization & Multi-Tenancy","Users & Access","Physical Assets","Issue Management","Data Sources","Technical Terms","Development Terms"],"docs/authentication-consolidation-final.md":["Authentication Consolidation - Final Implementation","\ud83c\udfaf Executive Summary","\ud83c\udfc6 Key Achievements","\u2705 **Login Loop Issue: RESOLVED**","\u2705 **Authentication Patterns: UNIFIED**","\u2705 **Architecture: MODERNIZED**","\ud83d\udccb Final Authentication Patterns","**Pattern 1: Protected Pages (Require Membership)**","**Pattern 2: Flexible Pages (Optional Authentication)**","**Pattern 3: Internal DAL Functions**"],"docs/configuration/multi-config-strategy.md":["PinPoint Multi-Configuration Strategy","Overview","Configuration Architecture","File Pattern System","Rule Hierarchy","Key Configuration Files","`tooling.config.ts` - Central Command","TypeScript Configs","ESLint Multi-Tier System","Betterer Regression Prevention"],"docs/deployment/INDEX.md":["Deployment","Current Stack","Guides"],"docs/deployment/development-deployment-guide.md":["PinPoint Development & Preview Deployment Guide","Architecture Overview","Local Development Setup","Prerequisites","Required accounts","- GitHub account","- Vercel account (free)","- Prisma account (free)","Install dependencies","Environment Setup"],"docs/deployment/environment-management.md":["PinPoint Environment Management Strategy","Overview","Vercel Environment Types","1. Development Environment","2. Preview Environment","3. Production Environment","Environment Variable Management","Vercel Dashboard Configuration","Development Environment Variables (Local)","Preview Environment Variables (Vercel)"],"docs/deployment/github-actions-vercel-supabase-integration.md":["GitHub Actions + Vercel + Supabase Integration Setup","\ud83c\udfaf Overview","\ud83d\ude80 Step 1: Vercel Marketplace Integration","Setup Supabase via Vercel Marketplace","\ud83d\udd11 Step 2: Configure GitHub Secrets","Get Vercel Information","Add GitHub Secrets","\ud83d\udd27 Step 3: Enable Supabase GitHub Integration (Optional)","For Advanced Features (Branch Sync, Auto-Migration)","\u2705 Step 4: Test the Integration"],"docs/deployment/production-deployment-guide.md":["PinPoint Production Deployment Guide","Architecture Overview","Prerequisites","Accounts Required","Local Setup","Install Vercel CLI (latest version)","Verify installation","Authenticate with Vercel","Database Setup: Prisma Postgres","What is Prisma Postgres?"],"docs/deployment/vercel-environment-configuration.md":["Vercel Environment Configuration","Overview","Dev Features Toggle Configuration","NEXT_PUBLIC_ENABLE_DEV_FEATURES","Setting Up in Vercel Dashboard","Verification","Local Development","Environment Variable Strategy","Troubleshooting","Dev Features Not Working in Preview"],"docs/deprecated/INDEX.md":["Deprecated Documentation","Contents","Testing Documentation (Deprecated August 2025)","Status"],"docs/deprecated/coverage-setup.md":["Code Coverage Setup","Overview","Setup Instructions","1. Codecov Token Setup","2. Branch Protection (Optional but Recommended)","Coverage Thresholds","Local Development","Running Tests with Coverage","Run all tests with coverage","Watch mode (no coverage)"],"docs/deprecated/e2e-testing-plan.md":["PinPoint E2E Testing Implementation Plan","Overview","Current State Analysis","\u2705 Working","\ud83d\udd27 Needs Fixing","\u274c Missing","Implementation Phases","Phase 1: Fix Current Auth Flow Tests (IMMEDIATE)","Phase 2: Implement Beta CUJs (CORE FOCUS)","Phase 3: Enhance Existing Tests"],"docs/deprecated/testing/GUIDE.md":["PinPoint Testing Guide","New Testing Philosophy","Quick Start","Writing Tests","Running Tests","Core Principles","1. Explicit Mocking","2. TypeScript Strictest","3. Multi-Tenant Safety","Common Patterns"],"docs/deprecated/testing/INDEX.md":["Testing Documentation","\ud83c\udfaf Testing Archetype Decision Guide (Updated from Phase 3.3)","\ud83d\ude80 **Phase 3.3 Validated Approaches**","\ud83c\udfaf Seed Data Architecture Foundation","\ud83e\uddea The 3 Testing Archetypes (Phase 3.3 Enhanced)","**Unit Testing Archetype** \u2192 `unit-test-architect`","**Integration Testing Archetype** \u2192 `integration-test-architect`","**Security Testing Archetype** \u2192 `security-test-architect`","\ud83d\udea6 Dual-Track Testing Decision"],"docs/deprecated/testing/advanced-mock-patterns.md":["Advanced Mock Patterns","Hoisted Mock Pattern","Basic Structure","Benefits","Deep Object Mocking with Type Preservation","Pattern for Nested API Mocks","Usage in Tests","Service Layer Mocking with Accelerate","Mock Factory for Prisma with Extensions","Testing Services with Mocked Dependencies"],"docs/deprecated/testing/archetype-integration-testing.md":["Integration Testing Archetype","\ud83d\udea8 CRITICAL: Memory Safety Requirements","When to Use This Archetype","Core Principles","Memory Safety Architecture (MANDATORY)","Worker-Scoped PGlite Pattern","Memory Safety Guidelines","Pattern 1: Service Business Logic with RLS","RLS Session Context Management"],"docs/deprecated/testing/archetype-security-testing.md":["Security Testing Archetype","When to Use This Archetype","Core Principles","Pattern 1: Direct RLS Policy Testing with SEED_TEST_IDS","Two-Organization Security Architecture"],"docs/deprecated/testing/archetype-unit-testing.md":["Unit Testing Archetype","When to Use This Archetype","Core Principles","Pattern 1: Pure Function Testing","Utility Functions","Validation Logic","Pattern 2: Business Logic Testing","Extracted Business Logic (No Database)"],"docs/deprecated/testing/architecture-patterns.md":["Testing Architecture Patterns (Phase 3.3 Enhanced)","\ud83c\udfaf Validated Architecture Approaches (Phase 3.3)","**Archetype 5: tRPC Router Integration with Mocks**","**Archetype 3: PGlite Integration RLS-Enhanced**","\ud83d\ude80 Phase 3.3 Implementation Results","**Sub-Phase Success Summary**","**Key Architectural Insights**","\ud83c\udfaf Current 3-Archetype System Enhanced","The Enhanced Architecture:","Phase 3.3 Proven Benefits:"],"docs/deprecated/testing/codecov-setup.md":["Codecov Configuration","Overview","Configuration Files","`codecov.yml`","`vitest.config.ts`","Coverage Targets","Global Thresholds","Coverage Exclusions","GitHub Actions Integration","Coverage Upload"],"docs/deprecated/testing/configuration.md":["Testing Configuration & Multi-Config TypeScript","Overview","Multi-Config TypeScript for Testing","TypeScript Configuration Hierarchy","Testing Context Standards","Vitest Configuration with Multi-Project Setup","Key Configuration Patterns","1. Projects Configuration (Modern Approach)","2. Path Aliases","3. File Naming Convention"],"docs/deprecated/testing/current-memory-safe-patterns.md":["Current Memory-Safe Testing Patterns","\ud83c\udfaf Problem Solved","\ud83c\udfd7\ufe0f Worker-Scoped Database Pattern","Core Implementation","Transaction Isolation","\u2699\ufe0f Vitest Configuration","Memory Management Settings","\ud83d\udcdd Usage Patterns","Integration Test Template","Router Test Pattern"],"docs/deprecated/testing/drizzle-router-testing-guide.md":["Drizzle Router Testing Guide","Overview","Updated Test Infrastructure","Enhanced Drizzle Mock Structure","Supported Query Patterns","Testing Migrated Routers","Basic Testing Approach","Mock Configuration Patterns","IssueStatus Router Example","Operations Converted"],"docs/deprecated/testing/dual-track-testing-strategy.md":["Dual-Track Testing Strategy","\u26a0\ufe0f CRITICAL: PGlite RLS Limitations","Strategic Overview","The Dual-Track Approach","Why Dual-Track?","Decision Framework","When to Use pgTAP (Track 1)","When to Use PGlite + integration_tester (Track 2)","Clear Boundaries","Implementation Patterns"],"docs/deprecated/testing/e2e-test-status.md":["E2E Test Status Report","Executive Summary","\u2705 **Major Improvements Achieved**","\ud83d\udcca **Current Status**","Test File Breakdown","1. `e2e/auth-flow.spec.ts` - Authentication Core \u2705","2. `e2e/dashboard.spec.ts` - Basic Dashboard \u2705","3. `e2e/location-browsing.spec.ts` - Location Features","4. `e2e/unified-dashboard-flow.spec.ts` - Complex Flows","Performance Analysis"],"docs/deprecated/testing/hook-testing-patterns.md":["Hook Testing Patterns","Dependency Injection Wrapper Pattern","Basic Hook Wrapper","TypeScript exactOptionalPropertyTypes Compliance","Testing Permission Hooks","usePermissions Hook Testing","Testing Loading and Error States","Testing Hooks with Multiple Dependencies","Complex Hook with Multiple Contexts","Testing Hook Interactions"],"docs/deprecated/testing/integration-patterns.md":["Integration Testing Patterns (Phase 3.3 Enhanced)","\ud83c\udfaf **Phase 3.3 Validated Integration Approaches**","**Archetype 5: tRPC Router Integration with Mocks**","**Archetype 3: PGlite Integration RLS-Enhanced**","\ud83d\udea8 **Critical Memory Safety Patterns (Phase 3.3 Validated)**","\ud83d\udcca **Phase 3.3 Implementation Lessons**","**RLS Context Establishment (Critical Learning)**","**SEED_TEST_IDS Success Pattern**"],"docs/deprecated/testing/memory-optimized-testing.md":["Memory-Optimized Testing Research","Problem Statement","Solution: Worker-Scoped Database Sharing","Core Concept","Implementation Strategy","What We Built","Infrastructure Components","Working Implementations","Implementation Status","\u2705 Completed"],"docs/deprecated/testing/multi-tenant-testing.md":["\u26a0\ufe0f DEPRECATED: Multi-Tenant Testing Patterns","\ud83c\udfaf Use the New Security Testing Archetype","Legacy Content (For Reference Only)","Organization Boundary Testing","Basic Organization Context Setup","Testing Component-Level Security","API-Level Tenant Isolation","Testing tRPC Procedures","Testing Database Queries","Cross-Organization Assignment Prevention"],"docs/deprecated/testing/performance.md":["Vitest Performance Results","Executive Summary","Benchmark Results","Overall Performance Improvements","Real Migration Data","Why Vitest is Faster","1. Native ESM Support","2. Parallel Execution","3. Smart Caching","4. Lightweight Architecture"],"docs/deprecated/testing/pgtap-rls-testing.md":["pgTAP RLS Testing Guide","Overview","Benefits of pgTAP for RLS Testing","Installation and Setup","1. Install pgTAP Extension","2. Test Database Roles","3. Environment Configuration","pgTAP tests use superuser for role switching","Business logic tests bypass RLS","4. Project Structure"],"docs/deprecated/testing/refactoring-methodology.md":["Test Refactoring Methodology","Core Principle: Systematic Refactoring Over Ad-Hoc Changes","3-Phase Refactoring Methodology","Phase 1: Extract Utilities","Phase 2: Consolidate Tests","Phase 3: Validation","Refactoring Patterns","Pattern 1: Test Component Factories","Pattern 2: Assertion Helper Functions","Pattern 3: Mock Configuration Helpers"],"docs/deprecated/testing/resilient-ui-patterns.md":["Resilient UI Testing Patterns","Core Principle: Test Behavior, Not Implementation","1. Semantic Role Queries Over Implementation Details","\ud83c\udfaf Pattern: Use `getByRole()` for Interactive Elements","2. Case-Insensitive Regex Patterns Over Exact Text","\ud83c\udfaf Pattern: Flexible Text Matching","3. Semantic Content Queries Over Layout Details","\ud83c\udfaf Pattern: Target Content Meaning, Not Position","\ud83c\udfaf Pattern: Heading Level Disambiguation","4. Behavior-Focused Loading and Error States"],"docs/deprecated/testing/seed-data-architecture.md":["Seed Data Architecture: Predictable Testing Foundation","\ud83c\udfaf Architecture Overview","**Core Philosophy**","\ud83c\udfd7\ufe0f Two-Tier Seed Structure","**Minimal Seed (Foundation for All Tests)**","**Full Seed (Additive Enhancement)**","\ud83d\udd11 SEED_TEST_IDS: Central Constants","**Single Source of Truth**","**Human-Readable Design**","\ud83c\udfdb\ufe0f Usage Patterns by Test Type"],"docs/deprecated/testing/seed-test-ids-guide.md":["SEED_TEST_IDS Usage Guide","Standard Patterns by Test Type","Unit Tests (Mock Data)","Integration Tests (Real Data)","Service Tests (Business Logic)","Cross-Organization Tests","Replacement Patterns","Before (Inconsistent)","After (Standardized)"],"docs/deprecated/testing/supabase-auth-patterns.md":["Supabase Authentication Testing Patterns","Mock Context Factory Pattern","Basic Pattern","Key Differences from NextAuth","Testing Authentication States","\ud83d\udd13 Unauthenticated User Testing","\ud83d\udc64 Authenticated User Testing","\ud83d\udc51 Admin User Testing","Mocking Supabase User Objects","Complete User Mock"],"docs/deprecated/testing/test-categorization-plan.md":["Test Categorization Plan: 306 Tests \u2192 3 Archetypes","\ud83d\udcca Test Inventory Overview","Current Test Distribution","Target Archetype Distribution","\ud83c\udfaf Categorization Methodology","Step 1: Automated Classification","Analyze test files and suggest archetype classification","Output: test-classification-report.json with suggestions","Step 2: Manual Review and Validation","\ud83d\udccb Test File Inventory and Classification"],"docs/deprecated/testing/test-database.md":["Test Database Setup","Overview","\ud83d\udea8 CRITICAL: Memory-Safe PGlite Integration Testing","Memory Safety Overview","Memory-Safe Setup (MANDATORY)","\ud83d\udea8 CRITICAL: PGlite RLS Policy Limitations","RLS Limitation Overview","Impact on Test Design","Memory-Safe Usage Example (REQUIRED PATTERN)","\u274c DANGEROUS Anti-Patterns (NEVER USE)"],"docs/deprecated/testing/test-failure-analysis.md":["Test Failure Analysis - Phase 3 Migration","\ud83c\udfaf Executive Summary","\ud83d\udd25 Category 1: Critical Infrastructure Issues","**1A. Database Constraint Violations - SYSTEMATIC BLOCKER**","**1B. Drizzle Relation Definition Errors - SYSTEMATIC BLOCKER**","\u26a0\ufe0f Category 2: Schema & Database Setup Issues","**2A. Drizzle Database Helper Issues**","**2B. Schema Data Integrity Issues**"],"docs/deprecated/testing/test-map.md":["PinPoint Test File Map","Test Organization Strategy","Unit Tests","API Router Tests","Library Function Tests","External Integration Tests","Utility and Helper Tests","Integration Tests","Full-Stack Feature Tests"],"docs/deprecated/testing/test-utilities-guide.md":["Test Utilities Reference","\ud83d\ude80 Quick Reference","Essential Imports","Quick Test Template","Common Patterns","\ud83e\uddea Unit Testing Utilities","VitestTestWrapper - Primary Component Test Wrapper","Permission Scenarios"],"docs/deprecated/testing/testing-design-doc.md":["Testing Design Document","\ud83d\udea8 Critical Testing Gap: API Contract Validation","Root Cause Analysis","Immediate Solutions Required","Process Improvements","Code Coverage Requirements","1\\\\. Current Testing Philosophy","2\\\\. What We Test Now vs Later","\u2705 CURRENT: Unit Tests Only","Running Tests"],"docs/deprecated/testing/testing-patterns.md":["Testing Patterns: Modern Vitest & Hardcoded ID Architecture","\ud83c\udfaf Testing Philosophy for Direct Conversion","\ud83e\uddea Modern Vitest Patterns","Modern Mock Patterns","Configuration Migration","\ud83d\uddc4\ufe0f Memory-Safe Database Testing with PGlite","\ud83d\udea8 CRITICAL: Memory Safety Rules","Database Testing Setup","\ud83d\udea8 CRITICAL: PGlite RLS Limitations","\ud83d\udd10 Authentication Testing"],"docs/deprecated/testing/troubleshooting.md":["Vitest Troubleshooting Guide","Common Issues and Solutions","Module Resolution Errors","TypeScript Errors","Environment Issues","Mock-Related Issues","Async/Promise Issues","Import/Export Issues","Infrastructure Issues","The Cascade Effect"],"docs/deprecated/testing/unit-patterns.md":["\u26a0\ufe0f DEPRECATED: Unit Testing Patterns","\ud83c\udfaf Use the New Archetype System","Legacy Content (For Reference Only)","Overview","When to Use Unit Tests","Pure Function Testing","Utility Functions","Validation Logic","Service Layer Testing","Business Logic Extraction"],"docs/deprecated/testing/validation-factory-patterns.md":["Validation Testing Factory Patterns","Test Data Factory Pattern","Basic Factory Structure","Readonly Type Safety","Validation Input Factories","Complex Input Object Factories","Context Object Factories","Edge Case Testing Patterns","Email Validation Testing","Boundary Testing"],"docs/deprecated/testing/vitest-guide.md":["Vitest Testing Guide - Complete Reference","\ud83c\udfaf Archetype Integration","Testing Archetype Mapping","\ud83d\ude80 Agent Quick Reference","Essential Commands","Run tests","Agent validation","Core Import Pattern","Essential Mocking Patterns","Consistent Test Data with SEED_TEST_IDS"],"docs/design-docs/INDEX.md":["Design Documentation","Migration Impact","Contents"],"docs/design-docs/cujs-list.md":["**PinPoint \\- Critical User Journeys (CUJs)**","**Beta Journeys**","**1\\. Anonymous / Public User Journeys**","**2\\. Authenticated Public User (\"Member\") Journeys**","**3\\. Machine Owner Journeys**","**4\\. Technician Journeys**","**5\\. Admin Journeys**","**V1.0 & Future Journeys**","**6\\. Advanced Asset & Workflow Journeys**","**7\\. Advanced Filtering & Organization Journeys**"],"docs/design-docs/frontend-phase-1-authentication.md":["Phase 1: Authentication Foundation","Overview","Current State Analysis","Authentication Backend Status \u2705","Current Frontend Limitations \u274c","Goals","Primary Goals","Secondary Goals","Technical Architecture","Authentication Flow"],"docs/design-docs/frontend-phase-2-issue-management.md":["Phase 2: Core Issue Management","Overview","Current State Analysis","Backend API Status \u2705","Archived Frontend Patterns \u2705","Current Frontend Limitations \u274c","Goals","Primary Goals","Secondary Goals","Technical Architecture"],"docs/design-docs/frontend-phase-3-dashboard-enhancement.md":["Phase 3: Dashboard Enhancement","Overview","Current State Analysis","Dashboard Strengths to Preserve \u2705","Current Limitations \u274c","Backend Integration Ready \u2705","Goals","Primary Goals","Secondary Goals","Technical Architecture"],"docs/design-docs/frontend-phase-4-user-organization.md":["Phase 4: User & Organization Features","Overview","Current State Analysis","Backend Infrastructure Ready \u2705","Archived Frontend Patterns \u2705","Current Frontend State \u274c","Goals","Primary Goals","Secondary Goals","Technical Architecture"],"docs/design-docs/frontend-rebuild-roadmap.md":["PinPoint Frontend Rebuild Roadmap","Overview","Current State Analysis","Frontend Strengths to Preserve","Backend Infrastructure (Ready)","Archived Frontend Analysis","Implementation Strategy","Core Principles","Phase-Based Approach","Phase 1: Authentication Foundation (3-5 days)"],"docs/design-docs/roles-permissions-design.md":["Roles and Permissions Design","Overview","Core Principles","Role Structure","System Roles (Immutable)","Template-Based Roles","Permission Dependencies","Implementation Plan","Beta Release","V1.0 Release"],"docs/design-docs/subdomain-development-setup.md":["Local Development Setup","Option 1: Simple Setup (Recommended)","Option 2: Hosts File Configuration (If needed)","Open as Administrator: C:\\\\Windows\\\\System32\\\\drivers\\\\etc\\\\hosts","Testing Multiple Organizations","How It Works","Middleware","Organization Resolution","Authentication","Production Deployment"],"docs/design-docs/technical-design-document.md":["Technical Design Document","System Architecture","Architectural Model","External Data Integration: OPDB and PinballMap","Technology Stack","Data Model & Database Schema"],"docs/design-docs/ui-architecture-plan.md":["**PinPoint UI/UX Architecture Plan (Updated for Frontend Rebuild)**","**0. Global Components**","**Authentication Modal**","**1. Organization & Location Pages**","**/ (Organization Homepage)**","**/locations/{locationId} (Location Page)**","**2. Machine Pages**","**/machines (All Machines Page)**","**/machines/{machineId} (Machine Detail Page)**","**/machines/{machineId}/report-issue**"],"docs/design-docs/z-patterns-ui-analysis.md":["Z Patterns and Related Design Patterns in PinPoint","Overview","Identified Z Patterns","1. CSS Z-Index Layering Patterns","2. Visual Z-Pattern Layouts","3. Layout Flex Patterns"],"docs/developer-guides/database-review-procedure.md":["Database & Testing Code Review Procedure (2025)","Pre-Review Analysis","File Categorization","Automated Review Checklist","Category: `DATABASE_SCHEMA` - Modern Schema Design","Category: `ROUTER` - Database Integration","Category: `SERVICE` - Business Logic Layer","Category: `UNIT_TEST` - Modern Vitest Patterns (2025)"],"docs/developer-guides/drizzle-current-patterns.md":["Current Drizzle Patterns (Post-RLS)","\ud83d\udd04 Query Patterns","Simple Queries","Relational Queries","Complex Filtering","Legacy vs Modern Comparison","\u270d\ufe0f Mutation Patterns","Create Operations","Update Operations","Upsert Pattern"],"docs/developer-guides/eslint-security-config.md":["ESLint Security Configuration Guide","\ud83d\udee1\ufe0f Security Foundation Overview","\ud83d\udce6 Validated Plugin Stack","Core Security Plugins","\u2699\ufe0f ESLint 9 Configuration","Plugin Registration (ESLint Flat Config)","Security Rules Configuration","Test-Specific Rules","\ud83c\udfaf Rule Severity Strategy","\ud83d\udeab Avoided Tools & Alternatives"],"docs/developer-guides/general-code-review-procedure.md":["General Code Review Procedure (2025)","Pre-Review Analysis","File Categorization","\ud83d\udea8 CRITICAL: Mandatory Safety Validations","\u26d4 ABSOLUTELY FORBIDDEN Patterns","Automated Review Checklist","Category: `TRPC_ROUTER` - tRPC Router Files","Category: `SERVER_ACTION` - Next.js Server Actions","Category: `INTEGRATION_TEST` - PGlite Database Testing"],"docs/developer-guides/supabase-auth-patterns.md":["Supabase Authentication Patterns","Overview","JWT Structure","Session Management","Server-Side Sessions","Client-Side Sessions","tRPC Integration","Context Setup","Protected Procedures","OAuth Configuration"],"docs/developer-guides/supabase-current-auth-patterns.md":["Current Supabase Auth Patterns","\ud83c\udfd7\ufe0f Client Creation Patterns","Server Client","Browser Client","\ud83d\udd04 tRPC Context Pattern","Current Context Implementation","\ud83c\udf10 Middleware Pattern","Token Refresh Middleware","\u26a1 Server Actions","Authentication Actions"],"docs/latest-updates/INDEX.md":["Latest Tech Stack Updates","\ud83d\udea8 Breaking Changes Alert (August 2025)","Contents","**Critical Updates (August 2025)**","**Existing Technologies**"],"docs/latest-updates/drizzle-orm.md":["Drizzle ORM: Latest Updates for Direct Migration","Key Changes (2024-2025)","**\ud83d\ude80 2025 Integration Improvements**","\ud83c\udfaf **Critical for Direct Conversion**","\ud83e\uddea **Testing Improvements**","\u26a1 **Performance & Developer Experience**","Direct Conversion Workflow","Phase 1: Schema Foundation","Generate Drizzle schema from existing Prisma","Or use Prisma generator for hybrid approach"],"docs/latest-updates/material-ui-v7.md":["Material UI v7: API Cleanup & CSS Layers","Key Changes Since November 2025","\ud83d\udea8 **Major API Cleanup**","\u26a1 **CSS Layers Support**","\ud83d\udd04 **Component API Standardization**","Migration Patterns","Hidden Component Replacement","CSS Layers Setup","Component Props Migration","CSS Class Migration"],"docs/latest-updates/nextjs.md":["Next.js: App Router & Caching Revolution","\ud83d\udea8 CRITICAL BREAKING CHANGES (Next.js 15.x - 2025)","**Caching Defaults Completely Changed**","**PinPoint Migration Impact**","**New APIs in Next.js 15.5+**","Key Architecture Changes (2024-2025)","\ud83d\udea8 **Paradigm Shift: Server-Centric Architecture**","\u26a1 **New Data Paradigms**","\ud83d\udd04 **Caching & Revalidation**","Migration Patterns"],"docs/latest-updates/quick-reference.md":["Quick Reference: Tech Stack Updates for Direct Migration","\ud83c\udfaf Migration Context","\ud83d\udea8 Breaking Changes Alert (August 2025)","\ud83d\udcca Summary Table: Critical Updates","\ud83d\uddc4\ufe0f Drizzle ORM: Database-First Architecture","**Critical for Direct Conversion**","\ud83d\udd10 Supabase: Server-Centric Authentication","**Breaking Changes (Immediate Action Required)**","\ud83d\udea8 Next.js 15: CRITICAL Caching Changes","**IMMEDIATE ACTION REQUIRED**"],"docs/latest-updates/react-19.md":["React 19: Official Release & New APIs","React 19.0 Release","Migration Context","Key Features","**PinPoint Data Access Layer Integration**","\u26a1 Enhanced use() API","**Conditional Resource Loading**","**Better Suspense Integration**"],"docs/latest-updates/shadcn-ui.md":["shadcn/ui: 2025 Updates","Key Updates","Migration Context","2025 Updates","\ud83d\ude80 Revolutionary Features (2025)","**1. Blocks System (January 2025)**","NEW: Pre-built component compositions","**2. Universal Registry (July 2025)**","NEW: Local file support and custom registries","**3. Enhanced CLI Features**"],"docs/latest-updates/supabase.md":["Supabase: Latest Updates for Server-Centric Architecture","Key Changes (2024-2025)","**\ud83d\ude80 2025 Platform Updates**","\ud83d\udea8 **Critical Migration Required**","\ud83d\udd04 **New Authentication Patterns**","\u26a1 **Realtime Architecture Changes**","\ud83d\udee0 **Backend Capabilities**","Migration Workflow","Phase 1: Package Migration","Remove deprecated packages"],"docs/latest-updates/tailwind-css-v4.md":["Tailwind CSS v4: CSS-First Configuration","Breaking Changes","Migration Context","Key Changes","\ud83d\udd25 Critical Breaking Changes","**1. Configuration Migration (CRITICAL)**","**2. Import Changes**","**3. Plugin System Overhaul**","\ud83c\udfa8 PinPoint-Specific Implementation","**CSS Layers Integration (Critical for MUI Coexistence)**"],"docs/latest-updates/vitest.md":["Vitest: Modern ES Module Mocking & Type Safety","Key Changes (2024-2025)","**\ud83d\ude80 Vitest 3.0 Updates (2025)**","\ud83c\udfaf **Modern ES Module Mocking Standard**","\u26a1 **Vitest v4.0 Beta Changes**","\ud83d\udee0 **Integration Patterns**","Modern Mocking Patterns","Type-Safe Partial Module Mocking","Hoisted Mock Variables","Advanced Object Mocking"],"docs/lessons-learned/INDEX.md":["Lessons Learned","Status","Migration Context","Contents","Recent Critical Discoveries (Phase 2A)"],"docs/lessons-learned/completed-task-consolidation.md":["Completed Task Consolidation Lessons Learned","Overview","Task Organization and Management Insights","What Worked Well","Challenges and Solutions","Technical Implementation Lessons","Security-First Architecture","Testing Strategy Evolution","Documentation and Knowledge Management","Development Process Insights"],"docs/lessons-learned/public-api-endpoints.md":["Public API Endpoints Implementation","Context","Task Outcome","Key Discoveries","1. Implementation Already Complete","2. Security-First Design Validation","3. Mock Testing Challenges and Solutions","4. Test-Driven Validation Strategy","Technical Implementation Details","API Architecture"],"docs/material3-color-conversion-guide.md":["Material 3 Color Conversion Guide","Overview","Material 3 Color System","Common Conversion Patterns","Background Colors","Text Colors","Border Colors","Gradient Colors","Context-Specific Replacements","Authentication Components"],"docs/oauth-setup-instructions.md":["OAuth Setup Instructions for Phase 1A","Overview","1. Google OAuth Production Configuration","Update Google Cloud Console","Add Google Credentials to Vercel Production","Add to Production environment (if not already present)","Paste the Google Client ID when prompted","Paste the Google Client Secret when prompted","3. Verification Steps","Test OAuth Configuration"],"docs/planning/INDEX.md":["Planning Documentation","Active Planning","Contents"],"docs/planning/archive/INDEX.md":["Planning Archive","Status","Contents"],"docs/planning/archive/feature-spec.md":["ARCHIVED: Initial Feature Specifications","Pinpoint Detailed Feature Specifications (Phased Development Plan)","1. Core Concepts & Terminology","1.1 OPDB and PinballMap Integration","2. Minimum Viable Product (MVP) Features","3. Core Features (\"Version 1.0\" Release)"],"docs/planning/archive/overview.md":["ARCHIVED: Initial Project Overview","Introduction: Why We Need a Better System","High-Level Features","For the Public (Players & Guests)","For the Internal Team (Members, Admins & Owners)","Basic Architecture Plan","Estimated Costs","Future Expansion","[Click here for an interactive mockup of the initial features](https://g.co/gemini/share/4e4cbb38fa56)"],"docs/planning/backend_impl_plan.md":["**Backend Implementation Plan: V1.0**","**1\\. Core Architecture Overview**","**2\\. Authentication & Authorization (RBAC)**","**3\\. Multi-Tenancy & Subdomain Strategy**","**4\\. API Layer (tRPC)**","**5\\. V1.0 Database Schema**"],"docs/planning/environment-variable-architecture-cleanup.md":["**Environment Variable Architecture Cleanup \\- Implementation Plan**","**Executive Summary**","**1\\. Problem Statement**","**Core Issues**","**Project Context**","**2\\. The New Architecture: A Four-Tier Strategy**","**3\\. Implementation Plan**","**Phase 0: Simplify Local Development Workflow (Highest Priority)**","**Phase 1: Secure and Standardize Environment Files (High Priority)**"],"docs/planning/future-features/INDEX.md":["Future Features","Migration Context","Contents"],"docs/planning/future-features/enhanced-permissions-system.md":["Enhanced Permissions System (DRAFT)","Overview","Core Design Principles","Permission Structure","Implicit Rights (No Permission Required)","Explicit Permissions","Default Roles","Role Descriptions","System Roles","Issue Confirmation Workflow"],"docs/planning/future-features/future-ideas.md":["Future Ideas","Permission System Enhancements","Location-Scoped Permissions","Machine Owner Special Permissions","Other Ideas"],"docs/planning/future-features/video-upload-strategy.md":["1. Goal","2. Core Challenge: The Media Handling Trade-Off","3. Option A: Vercel Blob (Simple Storage)","4. Option B: Cloudinary (Digital Asset Management)","5. Cost & Free Tier Comparison","6. The Hybrid Solution: Vercel Blob + Client-Side Processing","7. Recommendation"],"docs/planning/production-readiness-tasks.md":["Production Readiness Tasks","Current Development Standards","1. CI/CD and Deployment","\ud83d\udccb Issue: Implement Comprehensive CI/CD Pipeline for Vercel",".github/workflows/ci.yml","2. Security","\ud83d\udccb Issue: Integrate Automated Security Scanning with CodeQL",".github/workflows/codeql.yml"],"docs/planning/rejected-ideas/INDEX.md":["Rejected Migration Approaches","Why These Were Rejected","Big Bang Approach (`big-bang-approach.md`)","Early Discussions (`migration-discussions.md`)","Current Approach"],"docs/planning/rejected-ideas/big-bang-approach.md":["PinPoint Drizzle + Supabase Migration Plan","Executive Summary","What We Lose vs What We Gain","What We Lose \ud83d\ude14","What We Gain \ud83d\ude80","Risk Analysis & Mitigation","High Risks \u26a0\ufe0f","Medium Risks \u26a1","Low Risks \u2713","Testing Strategy - Complete Rewrite"],"docs/planning/rejected-ideas/migration-discussions.md":["Supabase Integration Discussion Summary","Context & Initial Request","Key Discoveries & Corrections Made During Discussion","1. Row Level Security (RLS) Misconceptions","2. Prisma + RLS Compatibility Issues","3. Current Security Model Assessment","4. Pricing Reality Check","Architecture Patterns Explored","Pattern A: Complete Migration","Pattern B: Infrastructure Hybrid"],"docs/planning/roadmap.md":["**PinPoint Release Plan**","**Beta**","**Core Capabilities**","**Technical Principles**","**Version 1.0**","**Core Capabilities**","**Version 1.x**","**Core Capabilities**"],"docs/planning/ui-mockup-tools.md":["UI Mockup Tools Analysis for PinPoint","Executive Summary","Current Context & Requirements","PinPoint's Design Needs","Success Criteria","Tool Categories & Analysis","1. Professional Design Platforms","2. AI-Powered Design Tools"],"docs/quick-reference/INDEX.md":["Quick Reference Navigation","\ud83c\udfaf Direct Conversion Context","\ud83d\udd27 Core Pattern Guides","**Architecture & Security**","**Language & Framework**","\ud83d\udccb Current Implementation Guides","**Stack References**","\ud83d\ude80 Usage Patterns","\ud83d\udcd6 Relationship to Other Docs"],"docs/quick-reference/api-security-patterns.md":["API Security Patterns Quick Reference","Protected Procedure Patterns","tRPC Procedure Patterns","Drizzle Query Security Patterns","Organization Scoping","Resource Ownership Validation","Relational Security","Server Actions Security","Authentication Wrapper","Organization Context"],"docs/quick-reference/migration-patterns.md":["Drizzle-Only Architecture Patterns","\ud83c\udfaf Architecture Status","\ud83d\udd27 Service Layer Architecture","Standard Service Pattern","Service Architecture","\ud83c\udfd7\ufe0f Infrastructure Architecture","tRPC Context Pattern","\ud83d\udd10 Supabase SSR Authentication","Server Client Creation","Next.js Middleware Integration"],"docs/quick-reference/testing-patterns.md":["Testing Patterns Quick Reference","Current Test System (Post-Archive)","Available Commands","Active Test Infrastructure","Current Testing Patterns","Pure Function Unit Tests","RLS Policy Testing (pgTAP)","Run database policy tests","Individual test files","Smoke Testing (Playwright)"],"docs/quick-reference/typescript-strictest-patterns.md":["TypeScript Strictest Patterns","Core Safety Patterns","Null Safety & Optional Chaining","Optional Property Assignment (exactOptionalPropertyTypes)","Type Guards","Common Error Fixes","\"Object is possibly null\" Errors","\"Argument of type X is not assignable to parameter\" Errors","Union Type Errors","tRPC Context Safety"],"docs/research/drizzle-kit-programmatic-api.md":["Drizzle-Kit Programmatic API Research","Executive Summary","Available APIs","Core Functions (`drizzle-kit/api`)","Database-Specific Variants","Implementation Examples","Basic Schema-to-SQL Generation","PGlite Integration (Recommended for Our Use Case)","Enhanced Error Handling Pattern","Advantages Over CLI Approach"],"docs/security/INDEX.md":["Security Documentation","Current Stack (Being Replaced)","Migration Target","Contents"],"docs/security/api-security.md":["API Security Guidelines","Overview","Core Security Principles","1. Default Deny","2. Defense in Depth","3. Least Privilege","tRPC Security","Procedure Security Levels","Input Validation","Error Handling"],"docs/security/audit-findings.md":["tRPC Security Audit Findings - Task 003","Executive Summary","Security Classification","\ud83d\udfe2 NO CRITICAL ISSUES FOUND","\ud83d\udfe1 NEEDS REVIEW - Security Concerns","\ud83d\udfe2 SECURE - No Issues Found","Permission Architecture Analysis","\u2705 Strengths","\u26a0\ufe0f Architecture Gaps","Detailed Permission Matrix"],"docs/security/environment-specific-auth.md":["Environment-Specific Authentication Strategy","Overview","Environment Detection","Authentication Providers by Environment","Development Environment","Preview Environment","Production Environment","Test Environment","Database Seeding Strategy","Modern Seeding Architecture"],"docs/security/organization-access-patterns.md":["Organization Access Patterns & Security Architecture","Executive Summary","Core Architectural Principles","1. Users Are Organization-Agnostic Entities","2. Organization Context Is Request-Scoped","3. Access Level Is Contextual","Access Pattern Matrix","Anonymous Users (Not Authenticated)","Authenticated Users","Data Visibility Levels"],"docs/security/organization-vulnerabilities.md":["Organization Handling Vulnerabilities - Critical Security Audit","Executive Summary","Critical Vulnerabilities","1. Metadata Access Inconsistency (CRITICAL)","2. Non-Functional RLS Policies (CRITICAL)","3. \"Home Organization\" Architecture Flaw (HIGH)","4. JWT vs Request Context Mismatch (HIGH)"],"docs/security/system-audit.md":["System Audit Report - Roles & Permissions Implementation","Executive Summary","Security Audit Results","\u2705 API Route Security","\u2705 Permission Coverage","\u2705 Authentication System","Implementation Highlights","Core Components Delivered","Key Security Features","Quality Metrics"],"docs/testing/INDEX.md":["Testing System","Current State","Test Types","Future System","Archive"],"docs/testing/RISK_ANALYSIS.md":["Test System Reboot: Risk Analysis & Failure Modes","\ud83d\udea8 High-Risk Problem Areas","~~1. **Archetype Decision Paralysis & Boundary Confusion**~~ \u2705 RESOLVED","~~2. **Seed Data Explosion & Extended Seed Anti-Patterns**~~ \u2705 RESOLVED","3. **Coverage Gaming & Quality Degradation**","4. **Template Rigidity vs. Flexibility Tension**","5. **Memory Safety Assumptions Breaking Down**","6. **Slash Command Brittleness**","~~7. **Organizational Complexity Underestimated**~~ \u2705 NOT A CONCERN","\ud83c\udfaf Missing System Components (Trouble Spots)"],"docs/testing/SERVICE_TESTS_ARCHETYPE.md":["Service Tests Archetype (Archetype 3)","Overview","Why Service Tests First?","**Highest Value Archetype**","Implementation Status","\u2705 **Infrastructure Complete**","\u2705 **Working Examples**","Usage Patterns","**File Naming Convention**","**Test Structure Pattern**"],"docs/troubleshooting.md":["PinPoint Troubleshooting Guide","Development Server Issues","Problem: Server says \"Ready\" but doesn't respond","Problem: Material-UI TypeScript errors","Problem: Next.js dynamic route errors","Problem: Development environment not responding","Problem: Services starting but not responding","Database Issues","Problem: Drizzle schema out of sync","Problem: Database has old/inconsistent data"],"scripts/README.md":["Development Scripts","Core Development Scripts","Development Server Management","Worktree Management","Database Validation","Utility Scripts","CI and Development","Agent Workflow","Database Management","Usage Patterns"],"src/lib/cache/invalidation-patterns.md":["React 19 Cache Invalidation Patterns","Overview","Core Invalidation Strategy","1. **Path-Based Invalidation** ","2. **Tag-Based Invalidation**","Invalidation Patterns by Entity","Issues System","Organizations System","Cache Tag Naming Conventions","Performance Optimizations"],"src/lib/utils/README.md":["Utility Functions","Boundary Convention","When to Use Transformers","Examples","Type Safety","Important Notes","Available Utilities","Case Transformers (`case-transformers.ts`)","Membership Transformers (`membership-transformers.ts`)","Other Utilities"],"src/test/README.md":["Test Infrastructure Documentation","Structure","Testing Archetypes","1. Service Layer Testing","2. Anonymous User RLS Testing","Key Testing Patterns","Organization Scoping Validation","Cross-Organization Security Testing","RLS Policy Testing","Test Data Constants"],"supabase/tests/rls/README.md":["pgTAP RLS Testing Guide","Quick Start","Running RLS Tests","Run all RLS tests","Run specific RLS test","Run with pg_prove for detailed output","Test Structure","Writing RLS Tests","Basic Test Template","JWT Claims Simulation"]},"deps":{"src/lib/subdomain-verification.ts":["~/lib/environment"],".archived-tests-2025-08-23/e2e/helpers/auth.ts":["@playwright/test"],".archived-tests-2025-08-23/e2e/helpers/unified-dashboard.ts":["@playwright/test"],".archived-tests-2025-08-23/e2e/issue-confirmation.spec.ts":["@playwright/test"],".archived-tests-2025-08-23/e2e/roles-permissions.spec.ts":["@playwright/test"],".archived-tests-2025-08-23/src/app/api/dev/__tests__/users-simple.test.ts":["vitest","~/test/constants/seed-test-ids"],".archived-tests-2025-08-23/src/app/dashboard/_components/__tests__/PrimaryAppBar.test.tsx":["@testing-library/react","react","vitest","~/test/msw/setup","~/test/VitestTestWrapper"],".archived-tests-2025-08-23/src/app/machines/components/MachineCard.test.tsx":["@testing-library/react","@testing-library/user-event","vitest","~/test/msw/setup","~/test/VitestTestWrapper"],".archived-tests-2025-08-23/src/components/issues/__tests__/MachineSelector.test.tsx":["@testing-library/react","@testing-library/user-event","vitest","~/test/mockUtils","~/test/VitestTestWrapper"],".archived-tests-2025-08-23/src/components/locations/__tests__/LocationDetailView.test.tsx":["@testing-library/react","vitest","~/test/msw/setup","~/test/VitestTestWrapper"],".archived-tests-2025-08-23/src/components/locations/__tests__/MachineGrid.test.tsx":["@testing-library/react","vitest"],".archived-tests-2025-08-23/src/components/permissions/__tests__/PermissionGate.test.tsx":["@testing-library/react","vitest","~/server/auth/permissions.constants"],".archived-tests-2025-08-23/src/components/react-environment.test.tsx":["@testing-library/react","vitest"],".archived-tests-2025-08-23/src/hooks/__tests__/usePermissions.test.tsx":["@testing-library/react","react","react","vitest","~/server/auth/permissions.constants","~/test/VitestTestWrapper"],".archived-tests-2025-08-23/src/integration-tests/comment.integration.test.ts":["vitest","drizzle-orm","~/server/api/root","~/server/db/schema","~/test/helpers/worker-scoped-db","~/test/helpers/createSeededIssueTestContext","~/test/constants/seed-test-ids"],".archived-tests-2025-08-23/src/integration-tests/cross-org-isolation.test.ts":["vitest","drizzle-orm","~/test/helpers/worker-scoped-db","~/test/constants/seed-test-ids","~/server/db/schema"],".archived-tests-2025-08-23/src/integration-tests/machine.location.integration.test.ts":["@trpc/server","drizzle-orm","vitest","~/server/api/routers/machine.location","~/server/db/schema","~/test/helpers/pglite-test-setup","~/test/helpers/worker-scoped-db","~/test/constants/seed-test-ids","~/test/helpers/createSeededMachineTestContext"],".archived-tests-2025-08-23/src/integration-tests/machine.owner.integration.test.ts":["drizzle-orm","vitest","~/server/api/routers/machine.owner","~/server/db/schema","~/test/helpers/worker-scoped-db","~/test/constants/seed-test-ids","~/test/helpers/createSeededMachineTestContext"],".archived-tests-2025-08-23/src/integration-tests/model.core.integration.test.ts":["@trpc/server","drizzle-orm","vitest","~/server/api/root","~/server/db/schema","~/test/constants/seed-test-ids","~/test/helpers/worker-scoped-db"],".archived-tests-2025-08-23/src/integration-tests/pinballMap.integration.test.ts":["drizzle-orm","vitest","msw","~/server/api/root","~/server/db/schema","~/test/msw/setup","~/test/helpers/worker-scoped-db","~/server/services/factory"],".archived-tests-2025-08-23/src/integration-tests/schema-migration-validation.integration.test.ts":["drizzle-orm","vitest","~/server/db/schema","~/test/helpers/test-id-generator","~/test/helpers/worker-scoped-db"],".archived-tests-2025-08-23/src/lib/common/__tests__/organizationValidation.test.ts":["vitest","~/test/constants/seed-test-ids"],".archived-tests-2025-08-23/src/lib/issues/__tests__/assignmentValidation.test.ts":["vitest","~/test/constants/seed-test-ids"],".archived-tests-2025-08-23/src/lib/issues/__tests__/creationValidation.test.ts":["vitest","~/test/constants/seed-test-ids"],".archived-tests-2025-08-23/src/lib/issues/__tests__/statusValidation.test.ts":["vitest","~/test/constants/seed-test-ids"],".archived-tests-2025-08-23/src/lib/pinballmap/__tests__/apiMocker.ts":["vitest",".archived-tests-2025-08-23/src/lib/pinballmap/__tests__/fixtures/api_responses/locations/location_26454_machine_details.json"],".archived-tests-2025-08-23/src/lib/users/__tests__/roleManagementValidation.test.ts":["vitest","~/test/constants/seed-test-ids"],".archived-tests-2025-08-23/src/server/api/__tests__/msw.trpc.test.ts":["@trpc/server","vitest","~/test/msw/handlers","~/test/msw/setup","~/test/msw/setup"],".archived-tests-2025-08-23/src/server/api/__tests__/trpc.permission.test.ts":["@trpc/server","vitest","~/server/auth/permissions","~/test/vitestMockContext","~/test/constants/seed-test-ids"],".archived-tests-2025-08-23/src/server/api/routers/__tests__/collection.test.ts":["drizzle-orm","vitest","~/server/api/root","~/server/db/schema","~/test/constants/seed-test-ids","~/test/helpers/worker-scoped-db"],".archived-tests-2025-08-23/src/server/api/routers/__tests__/issue.confirmation.test.ts":["vitest","@trpc/server","drizzle-orm","zod","~/test/vitestMockContext","~/test/constants/seed-test-ids","~/server/api/trpc","~/server/api/trpc.permission","~/server/auth/permissions","~/server/db/schema"],".archived-tests-2025-08-23/src/server/api/routers/__tests__/issue.integration.test.ts":["drizzle-orm","vitest","~/lib/utils/id-generation","~/server/api/root","~/server/db/schema","~/test/helpers/pglite-test-setup","~/test/helpers/worker-scoped-db","~/test/testDataFactories","~/test/constants/seed-test-ids"],".archived-tests-2025-08-23/src/server/api/routers/__tests__/issue.notification.test.ts":["vitest","~/server/services/notificationService","~/test/vitestMockContext","~/test/constants/seed-test-ids"],".archived-tests-2025-08-23/src/server/api/routers/__tests__/issue.test.ts":["drizzle-orm","vitest","~/server/api/root","~/server/db/schema","~/test/constants/seed-test-ids","~/test/helpers/worker-scoped-db","~/test/helpers/createSeededIssueTestContext","~/server/services/factory"],".archived-tests-2025-08-23/src/server/api/routers/__tests__/model.core.test.ts":["@trpc/server","drizzle-orm","vitest","~/server/api/root","~/server/db/schema","~/test/constants/seed-test-ids","~/test/helpers/test-id-generator","~/test/helpers/worker-scoped-db","~/test/helpers/pglite-test-setup"],".archived-tests-2025-08-23/src/server/api/routers/__tests__/notification.test.ts":["drizzle-orm","vitest","~/server/api/root","~/server/db/schema","~/test/helpers/test-id-generator","~/test/helpers/worker-scoped-db","~/server/services/factory","~/test/constants/seed-test-ids"],".archived-tests-2025-08-23/src/server/api/routers/utils/__tests__/commentService.integration.test.ts":["drizzle-orm","vitest","~/server/api/routers/comment","~/server/db/schema","~/test/helpers/pglite-test-setup","~/test/helpers/createSeededIssueTestContext","~/test/constants/seed-test-ids","~/test/helpers/worker-scoped-db"],".archived-tests-2025-08-23/src/server/api/routers/utils/__tests__/commentValidation.test.ts":["vitest",".archived-tests-2025-08-23/src/test/constants/seed-test-ids.ts"],".archived-tests-2025-08-23/src/server/auth/__tests__/permissions.constants.test.ts":["vitest"],".archived-tests-2025-08-23/src/server/auth/__tests__/uploadAuth.test.ts":["@trpc/server","vitest","~/test/constants/seed-test-ids"],".archived-tests-2025-08-23/src/server/db/__tests__/drizzle-singleton.test.ts":["vitest",".archived-tests-2025-08-23/src/test/helpers/worker-scoped-db.ts"],".archived-tests-2025-08-23/src/server/db/__tests__/drizzle-test-helpers.ts":["vitest"],".archived-tests-2025-08-23/src/server/services/__tests__/roleService.test.ts":["vitest","~/server/auth/permissions.constants","~/server/services/roleService","~/test/constants/seed-test-ids"],".archived-tests-2025-08-23/src/test/VitestTestWrapper.tsx":["@tanstack/react-query","react","~/contexts/PermissionDepsContext"],".archived-tests-2025-08-23/src/test/context.ts":["drizzle-orm/node-postgres","pg","~/server/db/schema","~/server/db/client-factory"],".archived-tests-2025-08-23/src/test/database-test-helpers.ts":["drizzle-orm","~/server/db/schema","~/test/constants/seed-test-ids"],".archived-tests-2025-08-23/src/test/examples/dual-track-testing-examples.test.ts":["vitest","drizzle-orm","~/test/constants/seed-test-ids","~/test/helpers/worker-scoped-db","~/test/helpers/pglite-test-setup","~/server/db/schema"],".archived-tests-2025-08-23/src/test/helpers/archetype-validator.ts":["node:fs","node:path"],".archived-tests-2025-08-23/src/test/helpers/createSeededAdminTestContext.ts":["drizzle-orm","vitest","~/test/helpers/pglite-test-setup","~/server/db/schema"],".archived-tests-2025-08-23/src/test/helpers/createSeededCollectionTestContext.ts":["drizzle-orm","vitest","~/test/helpers/pglite-test-setup","~/server/db/schema"],".archived-tests-2025-08-23/src/test/helpers/createSeededIssueTestContext.ts":["drizzle-orm","~/test/helpers/pglite-test-setup","~/server/db/schema","~/server/services/factory"],".archived-tests-2025-08-23/src/test/helpers/createSeededLocationTestContext.ts":["vitest","drizzle-orm","~/test/constants/seed-test-ids","~/server/db/schema"],".archived-tests-2025-08-23/src/test/helpers/createSeededMachineTestContext.ts":["vitest","drizzle-orm","~/test/constants/seed-test-ids","~/server/db/schema"],".archived-tests-2025-08-23/src/test/helpers/createSeededNotificationTestContext.ts":["vitest",".archived-tests-2025-08-23/src/test/helpers/pglite-test-setup.ts"],".archived-tests-2025-08-23/src/test/helpers/multi-tenant-test-helpers.ts":["drizzle-orm",".archived-tests-2025-08-23/src/test/helpers/rls-test-context.ts",".archived-tests-2025-08-23/src/test/helpers/organization-context.ts","~/server/db/schema"],".archived-tests-2025-08-23/src/test/helpers/organization-context.ts":["drizzle-orm","~/server/db/schema"],".archived-tests-2025-08-23/src/test/helpers/pglite-test-setup.ts":["@electric-sql/pglite","drizzle-orm","drizzle-orm/pglite","drizzle-kit/api","~/server/db/client-factory","~/server/db/schema"],".archived-tests-2025-08-23/src/test/helpers/rls-test-context.ts":["vitest","drizzle-orm",".archived-tests-2025-08-23/src/test/constants/seed-test-ids.ts"],".archived-tests-2025-08-23/src/test/helpers/session-context.ts":["drizzle-orm"],".archived-tests-2025-08-23/src/test/helpers/supabase-test-setup.ts":["@supabase/supabase-js","~/env"],".archived-tests-2025-08-23/src/test/helpers/test-id-generator.ts":["~/test/constants/seed-test-ids"],".archived-tests-2025-08-23/src/test/helpers/worker-scoped-db.ts":["vitest",".archived-tests-2025-08-23/src/test/helpers/pglite-test-setup.ts","drizzle-orm"],".archived-tests-2025-08-23/src/test/mockContext.ts":["vitest","vitest-mock-extended"],".archived-tests-2025-08-23/src/test/mockUtils.ts":["vitest"],".archived-tests-2025-08-23/src/test/msw/handlers.ts":[".archived-tests-2025-08-23/src/test/msw/setup.ts"],".archived-tests-2025-08-23/src/test/msw/setup.ts":["msw/node","msw-trpc","superjson"],".archived-tests-2025-08-23/src/test/permissionTestHelpers.ts":["@trpc/server","vitest",".archived-tests-2025-08-23/src/test/vitestMockContext.ts","~/server/auth/permissions"],".archived-tests-2025-08-23/src/test/routerTestPatterns.ts":["vitest",".archived-tests-2025-08-23/src/test/permissionTestHelpers.ts"],".archived-tests-2025-08-23/src/test/seed-data-helpers.ts":["drizzle-orm","~/server/db/drizzle","~/server/db/schema"],".archived-tests-2025-08-23/src/test/setup/issueListTestSetup.ts":["vitest","~/test/mockUtils"],".archived-tests-2025-08-23/src/test/setup/viTestMocks.ts":["vitest"],".archived-tests-2025-08-23/src/test/templates/02-service-business-logic-test.template.ts":["vitest","drizzle-orm","~/test/helpers/worker-scoped-db","~/test/constants/seed-test-ids","~/server/db/schema"],".archived-tests-2025-08-23/src/test/templates/03-pglite-integration-test.template.ts":["vitest","drizzle-orm","~/test/helpers/worker-scoped-db","~/test/helpers/pglite-test-setup","~/test/constants/seed-test-ids","~/server/db/schema"],".archived-tests-2025-08-23/src/test/templates/04-react-component-unit-test.template.tsx":["vitest","@testing-library/react","@testing-library/user-event","~/test/VitestTestWrapper"],".archived-tests-2025-08-23/src/test/testDataFactories.ts":["@faker-js/faker","vitest","~/test/constants/seed-test-ids","~/test/testDataFactories","~/test/testDataFactories","~/test/testDataFactories","~/test/testDataFactories"],".archived-tests-2025-08-23/src/test/utils/mock-ids.ts":[".archived-tests-2025-08-23/src/test/constants/seed-test-ids.ts"],".archived-tests-2025-08-23/src/test/vitestMockContext.ts":["vitest"],"e2e/auth-login-flow.e2e.test.ts":["@playwright/test","src/test/constants/seed-test-ids.ts","e2e/helpers/unified-dashboard.ts"],"e2e/dashboard-auth-flow.e2e.test.ts":["@playwright/test","~/test/constants/seed-test-ids"],"e2e/helpers/unified-dashboard.ts":["@playwright/test"],"middleware.ts":["@supabase/ssr","next/server","~/env","~/lib/subdomain-verification","~/lib/utils/domain"],"scripts/convert-snake-case.ts":["node:fs","node:fs/promises","node:path","node:child_process"],"scripts/generate-sql-constants.ts":["fs","path","src/test/constants/seed-test-ids.ts"],"scripts/validate-drizzle-crud.ts":["drizzle-orm","~/server/db/drizzle","~/server/db/schema","~/env.js"],"src/app/api/admin/export/activity-log/route.ts":["~/lib/actions/admin-actions"],"src/app/api/dev/users/route.ts":["drizzle-orm","next/server","~/env","~/lib/environment","~/lib/utils/case-transformers","~/server/auth/supabase","~/server/db/provider","~/server/db/schema"],"src/app/api/health/route.ts":["drizzle-orm","next/server","~/server/db/provider","~/utils/version"],"src/app/api/organizations/public/route.ts":["next/server","drizzle-orm","~/server/db/provider"],"src/app/api/qr/[qrCodeId]/route.ts":["next/server","~/server/db/provider","~/server/services/factory","~/server/utils/qrCodeUtils"],"src/app/api/search/suggestions/route.ts":["next/server","zod","~/lib/services/search-service","~/lib/organization-context"],"src/app/api/search/universal/route.ts":["next/server","zod","~/lib/services/search-service","~/lib/organization-context"],"src/app/api/trpc/[trpc]/route.ts":["@trpc/server/adapters/fetch","next/server","~/lib/environment","~/server/api/root","~/server/api/trpc"],"src/app/auth-provider.tsx":["react","~/utils/supabase/client"],"src/app/auth/auth-code-error/page.tsx":["react","next/link","~/components/ui/button","~/components/ui/card","~/components/ui/alert"],"src/app/auth/callback/route.ts":["next/server","~/utils/supabase/server","~/env"],"src/app/auth/sign-in/components/SignInForm.tsx":["react","react","next/navigation","~/trpc/react","~/components/ui/button","~/components/ui/card","~/components/ui/input","~/components/ui/label","~/components/ui/separator","~/components/ui/alert","~/components/ui/select","~/lib/actions/auth-actions","~/lib/dal/public-organizations","~/lib/auth/dev-auth","~/lib/environment-client","~/utils/supabase/client","~/lib/utils/domain"],"src/app/auth/sign-in/page.tsx":["next/navigation","react","src/app/auth/sign-in/components/SignInForm.tsx","~/lib/organization-context"],"src/app/auth/sign-up/components/SignUpForm.tsx":["react","react","zod","~/components/ui/button","~/components/ui/card","~/components/ui/input","~/components/ui/label","~/components/ui/separator","~/components/ui/alert","~/components/ui/select","~/lib/actions/auth-actions","~/lib/dal/public-organizations"],"src/app/auth/sign-up/page.tsx":["next/navigation","react","src/app/auth/sign-up/components/SignUpForm.tsx","~/lib/organization-context"],"src/app/client-providers.tsx":["~/trpc/react","next-themes"],"src/app/dashboard/error.tsx":["~/components/ui/error-boundary-card","~/lib/errors/error-configs"],"src/app/dashboard/loading.tsx":["~/components/ui/card"],"src/app/dashboard/page.tsx":["react","next/link","~/components/ui/card","~/components/ui/button","lucide-react","~/lib/organization-context","~/lib/dal/issues","~/lib/dal/organizations","~/components/issues/issues-list-server","~/components/dashboard/dashboard-stats"],"src/app/error.tsx":["~/components/ui/error-boundary-card","~/lib/errors/error-configs"],"src/app/games/[id]/page.tsx":["next/navigation"],"src/app/games/page.tsx":["next/navigation"],"src/app/issues/[issueId]/error.tsx":["~/components/ui/error-boundary-card","~/lib/errors/error-configs"],"src/app/issues/[issueId]/loading.tsx":["~/components/ui/skeleton","~/components/ui/card"],"src/app/issues/[issueId]/page.tsx":["next","next/navigation","react","~/components/issues/issue-detail-server","~/lib/organization-context","~/lib/dal/issues"],"src/app/issues/create/page.tsx":["next","next/link","lucide-react","~/components/forms/CreateIssueFormServer","~/lib/organization-context","~/lib/actions/issue-actions","~/lib/dal/machines","~/lib/dal/users"],"src/app/issues/error.tsx":["~/components/ui/error-boundary-card","~/lib/errors/error-configs"],"src/app/issues/loading.tsx":["~/components/ui/skeleton","~/components/ui/card"],"src/app/issues/page.tsx":["react","next/link","~/components/ui/button","lucide-react","~/components/issues/issues-list-server","~/components/issues/issue-active-filters","~/components/search","~/lib/organization-context","~/lib/dal/issues","~/lib/search-params/issue-search-params","~/lib/search-params/shared"],"src/app/layout.tsx":["next/font/google","~/components/layout/navigation","~/lib/organization-context"],"src/app/locations/[id]/page.tsx":["next","next/navigation","react","~/components/locations/LocationDetailView","~/server/auth/supabase","~/trpc/server"],"src/app/locations/page.tsx":["next","react","~/components/locations/LocationList","~/server/auth/supabase","~/trpc/server"],"src/app/machines/[id]/page.tsx":["next","next/navigation","react","~/lib/organization-context","~/lib/dal/machines","~/components/machines/machine-detail-server","~/components/machines/machine-header","~/components/machines/client/machine-qr-code-client"],"src/app/machines/error.tsx":["~/components/ui/error-boundary-card","~/lib/errors/error-configs"],"src/app/machines/new/page.tsx":["next/link","lucide-react","~/components/ui/button","~/lib/organization-context","~/lib/dal/machines","~/lib/actions/machine-actions","~/components/machines/client/create-machine-form-client"],"src/app/machines/page.tsx":["react","next/link","~/components/ui/button","lucide-react","~/components/machines/machine-inventory-server","~/components/machines/machine-stats-server","~/components/search","~/lib/organization-context","~/lib/dal/machines","~/lib/search-params/machine-search-params","~/lib/search-params/shared"],"src/app/page.tsx":["~/components/homepage/PinPointHomepage"],"src/app/profile/page.tsx":["lucide-react","~/components/ui/card","~/components/ui/badge","~/components/ui/alert","~/components/ui/button","~/components/ui/dialog","~/components/ui/input","~/components/ui/label","~/components/ui/textarea","~/components/ui/tooltip","~/components/ui/toggle-group","~/lib/utils","~/app/auth-provider","~/components/profile/ProfilePictureUpload","~/components/ui/UserAvatar","~/trpc/react"],"src/app/providers.tsx":["react","src/app/auth-provider.tsx","~/trpc/react"],"src/app/search/page.tsx":["react","~/lib/services/search-service","~/components/search/universal-search-results","~/components/search/universal-search-input","~/lib/organization-context"],"src/app/settings/activity/components/ActivityLogFilter.tsx":["react","next/navigation","~/components/ui/button","~/components/ui/input","~/components/ui/label","~/components/ui/select","~/components/ui/separator","~/components/ui/calendar","~/components/ui/popover","lucide-react","date-fns","~/lib/utils"],"src/app/settings/activity/page.tsx":["~/components/ui/card","~/components/ui/badge","~/components/ui/button","lucide-react","~/lib/organization-context","~/lib/dal/activity-log","src/app/settings/activity/components/ActivityLogFilter.tsx","date-fns"],"src/app/settings/error.tsx":["~/components/ui/error-boundary-card","~/lib/errors/error-configs"],"src/app/settings/layout.tsx":["next/link","~/components/ui/button","~/components/ui/separator","lucide-react","~/lib/organization-context"],"src/app/settings/organization/components/OrganizationLogoForm.tsx":["react","~/components/ui/button","~/components/ui/input","~/components/ui/label","~/components/ui/card","lucide-react","sonner","~/lib/actions/organization-actions","react"],"src/app/settings/organization/components/OrganizationProfileForm.tsx":["react","~/components/ui/button","~/components/ui/input","~/components/ui/label","~/components/ui/textarea","lucide-react","sonner","~/lib/actions/organization-actions","react"],"src/app/settings/organization/page.tsx":["~/components/ui/card","~/components/ui/separator","~/components/ui/badge","lucide-react","~/lib/organization-context","~/lib/dal/organizations","src/app/settings/organization/components/OrganizationProfileForm.tsx","src/app/settings/organization/components/OrganizationLogoForm.tsx","date-fns"],"src/app/settings/page.tsx":["next/link","~/components/ui/card","~/components/ui/button","lucide-react","~/lib/organization-context","~/lib/dal/organizations"],"src/app/settings/roles/page.tsx":["~/components/ui/card","~/components/ui/badge","~/components/ui/button","~/components/ui/separator","lucide-react","~/lib/organization-context","~/trpc/server"],"src/app/settings/system/components/SystemNotificationSettings.tsx":["react","~/components/ui/button","~/components/ui/label","~/components/ui/switch","~/components/ui/separator","lucide-react","sonner","~/lib/actions/admin-actions"],"src/app/settings/system/components/SystemPreferences.tsx":["react","~/components/ui/button","~/components/ui/label","~/components/ui/select","~/components/ui/separator","lucide-react","sonner","~/lib/actions/admin-actions"],"src/app/settings/system/components/SystemSecuritySettings.tsx":["react","~/components/ui/button","~/components/ui/label","~/components/ui/input","~/components/ui/switch","~/components/ui/select","~/components/ui/separator","~/components/ui/badge","lucide-react","sonner","~/lib/actions/admin-actions"],"src/app/settings/system/page.tsx":["~/components/ui/card","~/components/ui/badge","~/components/ui/separator","lucide-react","~/lib/organization-context","~/lib/dal/system-settings","src/app/settings/system/components/SystemNotificationSettings.tsx","src/app/settings/system/components/SystemSecuritySettings.tsx","src/app/settings/system/components/SystemPreferences.tsx"],"src/app/settings/users/components/InviteUserDialog.tsx":["react","~/components/ui/button","~/components/ui/dialog","~/components/ui/input","~/components/ui/label","~/components/ui/select","~/components/ui/textarea","lucide-react","sonner","~/lib/actions/admin-actions"],"src/app/settings/users/components/RoleChangeDialog.tsx":["react","~/components/ui/button","~/components/ui/dialog","~/components/ui/label","~/components/ui/select","lucide-react","sonner","~/lib/actions/admin-actions"],"src/app/settings/users/components/UserTableActions.tsx":["react","~/components/ui/button","~/components/ui/dropdown-menu","lucide-react","sonner","src/app/settings/users/components/RoleChangeDialog.tsx"],"src/app/settings/users/page.tsx":["~/components/ui/card","~/components/ui/badge","~/components/ui/button","~/components/ui/separator","lucide-react","~/lib/organization-context","~/trpc/server","src/app/settings/users/components/UserTableActions.tsx","src/app/settings/users/components/InviteUserDialog.tsx","date-fns"],"src/app/sign-in/page.tsx":["drizzle-orm","next/navigation","~/components/ui/button","~/components/ui/card","~/components/ui/badge","~/components/ui/separator","lucide-react","~/app/auth-provider","~/lib/auth/dev-auth","~/lib/environment-client","~/utils/supabase/client"],"src/components/dashboard/dashboard-stats.tsx":["~/components/ui/card","lucide-react"],"src/components/dashboard/quick-actions.tsx":["next/link","~/components/ui/button","~/components/ui/card","lucide-react"],"src/components/forms/CreateIssueFormServer.tsx":["react","~/components/ui/card","~/components/ui/button","~/components/ui/input","~/components/ui/textarea","~/components/ui/label","~/components/ui/select"],"src/components/forms/form-enhancement-client.tsx":["react","react-dom","~/components/ui/alert","~/components/ui/button","~/lib/actions/issue-actions","react"],"src/components/homepage/PinPointHomepage.tsx":["next/link","~/components/ui/button","~/components/ui/card","lucide-react"],"src/components/hooks/use-mobile.ts":["react"],"src/components/issues/AdvancedFiltersDropdown.tsx":["lucide-react","react","~/components/ui/button","~/components/ui/label","~/components/ui/popover","~/components/ui/select","~/components/ui/separator","~/components/ui/badge","~/lib/utils","~/trpc/react"],"src/components/issues/FilterPresets.tsx":["lucide-react","~/components/ui/button","~/lib/utils"],"src/components/issues/FilterToolbar.tsx":["lucide-react","react","~/components/ui/card","~/components/ui/button","~/components/ui/label","~/components/ui/select","~/components/ui/tooltip","~/lib/utils","src/components/issues/AdvancedFiltersDropdown.tsx","src/components/issues/GameFilterDropdown.tsx","src/components/issues/SearchTextField.tsx","src/components/issues/StatusTogglePills.tsx","src/components/issues/FilterPresets.tsx","~/trpc/react"],"src/components/issues/GameFilterDropdown.tsx":["react","~/components/ui/label","~/components/ui/badge","~/components/ui/select","lucide-react","~/trpc/react"],"src/components/issues/SearchTextField.tsx":["lucide-react","react","~/components/ui/input","~/components/ui/label","~/components/ui/button","~/lib/utils"],"src/components/issues/StatusTogglePills.tsx":["react","~/components/ui/button","~/components/ui/badge","~/lib/utils","lucide-react","~/trpc/react"],"src/components/issues/comment-form-client.tsx":["react","~/components/ui/button","~/components/ui/textarea","~/components/ui/card","~/lib/actions/issue-actions"],"src/components/issues/issue-active-filters.tsx":["next/link","~/components/ui/button","~/components/ui/badge","lucide-react","~/lib/search-params/issue-search-params"],"src/components/issues/issue-assignment-client.tsx":["react","~/components/ui/button","~/components/ui/select","~/lib/actions/issue-actions"],"src/components/issues/issue-detail-server.tsx":["~/components/ui/badge","~/components/ui/card","~/components/ui/avatar","lucide-react","~/lib/dal/issues","~/lib/dal/comments","~/lib/organization-context","date-fns","src/components/issues/issue-status-update-client.tsx","src/components/issues/issue-assignment-client.tsx","src/components/issues/comment-form-client.tsx","src/components/issues/realtime-comments-client.tsx"],"src/components/issues/issue-status-update-client.tsx":["react","~/components/ui/button","~/components/ui/select"],"src/components/issues/issues-list-server.tsx":["react","next/link","~/components/ui/card","~/components/ui/button","~/components/ui/badge","~/components/ui/avatar","~/components/ui/skeleton","lucide-react","~/lib/dal/issues","date-fns"],"src/components/issues/realtime-comments-client.tsx":["react","~/components/ui/alert","~/components/ui/badge","~/components/ui/avatar","date-fns","lucide-react"],"src/components/layout/NavigationSkeleton.tsx":["~/components/ui/skeleton","~/components/ui/separator"],"src/components/layout/client/MobileNavToggle.tsx":["react","~/components/ui/button","~/components/ui/sheet","lucide-react"],"src/components/layout/client/UserMenuClient.tsx":["react","~/utils/supabase/client","~/components/ui/button","~/components/ui/dropdown-menu","~/components/ui/avatar","lucide-react"],"src/components/layout/navigation.tsx":["next/link","~/components/ui/button","lucide-react","src/components/layout/client/UserMenuClient.tsx","~/components/search","src/components/layout/notification-bell-wrapper.tsx"],"src/components/layout/notification-bell-client.tsx":["react","~/components/ui/button","~/components/ui/popover","~/components/ui/badge","lucide-react"],"src/components/layout/notification-bell-wrapper.tsx":["src/components/layout/notification-bell-client.tsx","~/lib/dal/notifications"],"src/components/layout/notifications-list-server.tsx":["date-fns","~/components/ui/badge","~/components/ui/button","lucide-react","~/lib/dal/notifications","next/link"],"src/components/layout/user-menu-client.tsx":["next/link","~/components/ui/button","~/components/ui/avatar","~/components/ui/dropdown-menu","lucide-react"],"src/components/machines/client/create-machine-form-client.tsx":["react","next/navigation","~/components/ui/button","~/components/ui/card","~/components/ui/input","~/components/ui/label","~/components/ui/select","~/components/ui/alert","lucide-react"],"src/components/machines/client/machine-filters-client.tsx":["react","next/navigation","~/components/ui/button","~/components/ui/badge","~/components/ui/dropdown-menu","lucide-react"],"src/components/machines/client/machine-qr-code-client.tsx":["react","~/components/ui/card","~/components/ui/button","~/components/ui/badge","~/components/ui/dropdown-menu","lucide-react","~/lib/actions/machine-actions"],"src/components/machines/client/machine-search-client.tsx":["react","next/navigation","~/components/ui/input","~/components/ui/button","lucide-react","~/lib/hooks/use-debounce"],"src/components/machines/machine-detail-server.tsx":["~/components/ui/card","~/components/ui/badge","lucide-react"],"src/components/machines/machine-header.tsx":["next/link","lucide-react","~/components/ui/button","~/components/ui/badge","~/components/ui/card"],"src/components/machines/machine-inventory-server.tsx":["next/link","~/components/ui/badge","~/components/ui/button","~/components/ui/card","~/components/ui/table","lucide-react","src/components/machines/client/machine-search-client.tsx","src/components/machines/client/machine-filters-client.tsx","~/components/ui/pagination-universal"],"src/components/machines/machine-stats-server.tsx":["~/components/ui/card","~/components/ui/badge","lucide-react"],"src/components/nav-documents.tsx":["@tabler/icons-react","src/components/ui/dropdown-menu","src/components/ui/sidebar"],"src/components/nav-main.tsx":["@tabler/icons-react","src/components/ui/button","src/components/ui/sidebar"],"src/components/nav-secondary.tsx":["react","@tabler/icons-react","src/components/ui/sidebar"],"src/components/nav-user.tsx":["@tabler/icons-react","src/components/ui/avatar","src/components/ui/dropdown-menu","src/components/ui/sidebar"],"src/components/notifications/notification-client.tsx":["react","~/components/ui/alert","~/components/ui/badge","~/components/ui/button","lucide-react"],"src/components/permissions/PermissionGate.tsx":["react"],"src/components/search/advanced-search-form-optimized.tsx":["react","next/navigation","next/dynamic","lucide-react","~/components/ui/button","~/components/ui/input","~/components/ui/label","~/components/ui/card","~/components/ui/badge","~/components/ui/select","~/components/ui/separator","src/components/search/advanced-search-form.tsx"],"src/components/search/advanced-search-form.tsx":["react","next/navigation","lucide-react","~/components/ui/button","~/components/ui/input","~/components/ui/label","~/components/ui/card","~/components/ui/badge","~/components/ui/select","~/components/ui/checkbox","~/components/ui/separator"],"src/components/search/filter-configs.tsx":["src/components/search/advanced-search-form.tsx"],"src/components/search/global-search-shortcut.tsx":["react","next/navigation","~/components/ui/dialog","src/components/search/universal-search-input.tsx","~/lib/services/search-service"],"src/components/search/universal-search-input.tsx":["react","next/navigation","~/components/ui/input","~/components/ui/button","~/components/ui/card","~/components/ui/badge","lucide-react","~/lib/hooks/use-debounce","~/lib/services/search-service"],"src/components/search/universal-search-results.tsx":["next/link","~/components/ui/badge","~/components/ui/card","~/components/ui/button","lucide-react","~/lib/services/search-service","~/lib/dal/shared","date-fns"],"src/components/site-header.tsx":["src/components/ui/button","src/components/ui/separator","src/components/ui/sidebar"],"src/components/ui/UserAvatar.tsx":["~/components/ui/avatar","~/components/ui/tooltip","react","~/lib/utils"],"src/components/ui/alert.tsx":["react","class-variance-authority","src/lib/utils"],"src/components/ui/badge.tsx":["react","@radix-ui/react-slot","class-variance-authority","src/lib/utils"],"src/components/ui/calendar.tsx":["react","lucide-react","react-day-picker","src/lib/utils","src/components/ui/button"],"src/components/ui/dialog.tsx":["react","@radix-ui/react-dialog","lucide-react","src/lib/utils"],"src/components/ui/dropdown-menu.tsx":["react","@radix-ui/react-dropdown-menu","lucide-react","src/lib/utils"],"src/components/ui/error-boundary-card.tsx":["react","~/components/ui/button","~/components/ui/card","~/components/ui/badge","lucide-react"],"src/components/ui/filters-server.tsx":["next/navigation","~/components/ui/button","~/components/ui/input","~/components/ui/label","~/components/ui/badge","~/components/ui/card","~/components/ui/select","lucide-react"],"src/components/ui/label.tsx":["react","@radix-ui/react-label","src/lib/utils"],"src/components/ui/pagination-server.tsx":["next/link","~/components/ui/button","lucide-react"],"src/components/ui/pagination-universal.tsx":["next/link","~/components/ui/button","lucide-react"],"src/components/ui/search-client.tsx":["react","next/navigation","~/components/ui/input","~/components/ui/button","lucide-react"],"src/components/ui/select.tsx":["react","@radix-ui/react-select","lucide-react","src/lib/utils"],"src/components/ui/sheet.tsx":["react","@radix-ui/react-dialog","lucide-react","src/lib/utils"],"src/components/ui/sidebar.tsx":["react","@radix-ui/react-slot","class-variance-authority","lucide-react","~/components/hooks/use-mobile","~/lib/utils","~/components/ui/button","~/components/ui/input","~/components/ui/separator","~/components/ui/sheet","~/components/ui/skeleton","~/components/ui/tooltip"],"src/components/ui/skeleton.tsx":["src/lib/utils"],"src/components/ui/textarea.tsx":["react","src/lib/utils"],"src/components/ui/toggle.tsx":["react","@radix-ui/react-toggle","class-variance-authority","src/lib/utils"],"src/components/ui/tooltip.tsx":["react","@radix-ui/react-tooltip","src/lib/utils"],"src/components/utils/lazy-client-island.tsx":["react","react"],"src/contexts/PermissionDepsContext.tsx":["react","~/app/auth-provider","~/trpc/react"],"src/env.js":["@t3-oss/env-nextjs","zod"],"src/hooks/useClientMounted.ts":["react"],"src/hooks/usePermissions.ts":["next/navigation","react","~/contexts/PermissionDepsContext","~/lib/permissions/descriptions"],"src/lib/actions/admin-actions.ts":["next/cache","zod","drizzle-orm","~/server/db/provider","~/server/db/schema","~/lib/utils/id-generation","~/lib/dal/system-settings","~/lib/dal/activity-log","src/lib/actions/shared.ts","src/lib/actions/shared.ts","~/server/auth/permissions.constants"],"src/lib/actions/auth-actions.ts":["next/cache","next/navigation","zod","~/lib/supabase/server","~/lib/dal/public-organizations","~/lib/environment","~/lib/utils/form-data","src/lib/actions/shared.ts"],"src/lib/actions/comment-actions.ts":["next/cache","react","zod","drizzle-orm","~/server/db/provider","~/server/db/schema","~/lib/utils/id-generation","src/lib/actions/shared.ts","src/lib/actions/shared.ts","~/server/auth/permissions.constants","~/lib/services/notification-generator"],"src/lib/actions/issue-actions.ts":["next/cache","next/navigation","react","zod","drizzle-orm","~/server/db/provider","~/server/db/schema","~/lib/utils/id-generation","~/lib/utils/case-transformers","src/lib/actions/shared.ts","src/lib/actions/shared.ts","~/server/auth/permissions.constants","~/lib/services/notification-generator"],"src/lib/actions/machine-actions.ts":["next/cache","zod","drizzle-orm","~/lib/organization-context","~/lib/dal/shared","~/server/db/schema","~/lib/services/qr-code-service"],"src/lib/actions/notification-actions.ts":["next/cache","zod","drizzle-orm","~/server/db/provider","~/server/db/schema","src/lib/actions/shared.ts"],"src/lib/actions/organization-actions.ts":["next/cache","zod","drizzle-orm","~/server/db/provider","~/server/db/schema","~/lib/utils/case-transformers","src/lib/actions/shared.ts","src/lib/actions/shared.ts","~/server/auth/permissions.constants"],"src/lib/actions/shared.ts":["next/navigation","next/cache","react","next/server","~/lib/supabase/server","~/lib/organization-context","~/server/auth/permissions","~/server/db/provider","~/lib/dal/shared"],"src/lib/actions/shared.unit.test.ts":["vitest","zod","src/lib/actions/shared.ts"],"src/lib/auth/dev-auth.ts":["~/lib/environment-client"],"src/lib/colors/material-theme-generator.ts":["@material/material-color-utilities"],"src/lib/common/__tests__/inputValidation.test.ts":["vitest","zod","src/lib/common/inputValidation.ts"],"src/lib/common/inputValidation.ts":["zod"],"src/lib/dal/activity-log.ts":["react","drizzle-orm","src/lib/dal/shared.ts","~/server/db/schema","~/lib/utils/id-generation"],"src/lib/dal/machines.ts":["react","drizzle-orm","~/server/db/schema","src/lib/dal/shared.ts"],"src/lib/dal/notifications.ts":["react","drizzle-orm","~/server/db/schema","src/lib/dal/shared.ts"],"src/lib/dal/shared.ts":["react","~/lib/supabase/server","~/server/db/provider","drizzle-orm","~/server/db/schema"],"src/lib/dal/system-settings.ts":["react","drizzle-orm","src/lib/dal/shared.ts","~/server/db/schema","~/lib/utils/id-generation"],"src/lib/env-loaders/development.ts":["path","url","dotenv"],"src/lib/env-loaders/production.ts":["path","url","dotenv"],"src/lib/environment-client.ts":["~/env"],"src/lib/environment.ts":["~/env"],"src/lib/errors/error-configs.ts":["~/components/ui/error-boundary-card","lucide-react"],"src/lib/hooks/use-current-user.ts":["~/app/auth-provider","~/trpc/react"],"src/lib/hooks/use-debounce.ts":["react"],"src/lib/image-storage/local-storage.ts":["fs","fs/promises","path","src/lib/image-storage/index.ts"],"src/lib/logger.ts":["pino","~/env.js","~/lib/environment","~/lib/logger-constants"],"src/lib/opdb/client.ts":["src/lib/opdb/utils.ts","~/env"],"src/lib/organization-context.ts":["react","next/headers","drizzle-orm","~/lib/dal/shared","~/server/db/schema","~/utils/supabase/server","~/lib/environment","~/lib/subdomain-verification"],"src/lib/search-params/issue-search-params.ts":["zod"],"src/lib/search-params/machine-search-params.ts":["zod"],"src/lib/search-params/shared.ts":["zod"],"src/lib/services/notification-generator.ts":["~/lib/dal/shared","~/server/db/schema","~/lib/utils/id-generation","~/lib/dal/notifications","drizzle-orm"],"src/lib/services/qr-code-service.ts":["qrcode"],"src/lib/services/search-service.ts":["react","drizzle-orm","~/lib/dal/shared","~/server/db/schema"],"src/lib/supabase/error-handler.ts":["src/lib/supabase/errors.ts","src/lib/supabase/type-guards.ts"],"src/lib/supabase/multi-tenant-client.ts":["src/lib/supabase/server.ts","src/lib/supabase/rls-helpers.ts"],"src/lib/supabase/rls-helpers.ts":["src/lib/supabase/server.ts"],"src/lib/supabase/server.ts":["@supabase/ssr","next/headers","~/env"],"src/lib/temp-production-overrides.ts":["~/env"],"src/lib/tracing.ts":["async_hooks","uuid","~/lib/logger-constants"],"src/lib/utils.ts":["clsx","tailwind-merge"],"src/lib/utils/api-response-transformers.ts":["src/lib/utils/case-transformers.ts"],"src/lib/utils/auth-response-transformers.ts":["src/lib/utils/case-transformers.ts"],"src/lib/utils/case-transformers.ts":["drizzle-orm"],"src/lib/utils/form-data.ts":["zod"],"src/lib/utils/id-generation.ts":["uuid"],"src/lib/utils/machine-response-transformers.ts":["src/lib/utils/case-transformers.ts"],"src/lib/utils/membership-transformers.ts":["src/lib/utils/case-transformers.ts"],"src/server/api/routers/issue.comment.ts":["@trpc/server","drizzle-orm","zod","src/server/api/routers/utils/commentService.ts","src/server/api/routers/utils/commentValidation.ts","~/lib/utils/id-generation","~/lib/utils/case-transformers","~/lib/utils/api-response-transformers","~/server/api/trpc","~/server/db/schema"],"src/server/api/routers/issue.status.ts":["drizzle-orm","uuid","zod","~/lib/utils/case-transformers","~/server/api/trpc","~/server/db/schema/issues"],"src/server/api/routers/role.ts":["@trpc/server","drizzle-orm","zod","~/lib/utils/id-generation","~/lib/users/roleManagementValidation","~/server/auth/permissions.constants","~/server/api/trpc","~/server/api/trpc.permission","~/server/db/schema","~/server/db/types"],"src/server/api/routers/utils/commentService.ts":["drizzle-orm","~/server/db/schema","~/lib/utils/case-transformers"],"src/server/api/trpc.base.ts":["@trpc/server","drizzle-orm","superjson","zod","~/env","~/lib/logger","~/lib/logger-constants","~/lib/supabase/server","~/lib/supabase/rls-helpers","~/lib/tracing","~/server/auth/permissions","~/server/auth/supabase","~/server/db/provider","~/server/db/schema","~/server/services/factory"],"src/server/api/trpc.permission.ts":["src/server/api/trpc.base.ts","~/server/auth/permissions"],"src/server/auth/permissions.ts":["@trpc/server","drizzle-orm","src/server/services/permissionService.ts","src/server/auth/permissions.constants.ts","~/server/db/drizzle","~/server/db/schema"],"src/server/auth/supabase.ts":["~/lib/logger","~/lib/supabase/server"],"src/server/auth/uploadAuth.ts":["@trpc/server","drizzle-orm","next/server","src/server/auth/supabase.ts","src/server/auth/types.ts","~/lib/utils/case-transformers","~/server/db/schema","~/lib/subdomain-verification"],"src/server/auth/validation.ts":["~/env.js","~/lib/environment","~/lib/logger"],"src/server/db/client-factory.ts":["drizzle-orm/postgres-js","drizzle-orm/pglite"],"src/server/db/drizzle.ts":["src/server/db/client-factory.ts","postgres","~/env","~/lib/environment"],"src/server/db/provider.ts":["~/server/db/drizzle"],"src/server/db/queries/audit-queries.ts":["~/server/db/provider","~/server/db/schema","drizzle-orm"],"src/server/db/utils/common-queries.ts":["drizzle-orm","src/server/db/utils/field-validation.ts","~/env.js"],"src/server/db/utils/field-validation.ts":["~/env.js"],"src/server/db/utils/role-validation.ts":["@trpc/server","drizzle-orm","~/server/auth/permissions.constants","~/server/db/schema"],"src/server/services/collectionService.service.test.ts":["vitest","src/server/services/collectionService.ts","~/test/helpers/service-test-helpers"],"src/server/services/collectionService.ts":["drizzle-orm","~/lib/utils/id-generation"],"src/server/services/commentCleanupService.ts":["drizzle-orm","drizzle-orm","~/server/constants/cleanup","~/server/db/drizzle","~/server/db/schema"],"src/server/services/factory.ts":["src/server/services/collectionService.ts","src/server/services/commentCleanupService.ts","src/server/services/issueActivityService.ts","src/server/services/notificationService.ts","src/server/services/pinballmapService.ts","src/server/services/qrCodeService.ts","src/server/services/roleService.ts"],"src/server/services/issueActivityService.ts":["drizzle-orm","src/server/db/drizzle.ts","~/lib/utils/id-generation"],"src/server/services/notificationService.ts":["drizzle-orm","~/lib/utils/id-generation","~/server/db/drizzle","~/server/db/schema"],"src/server/services/permissionService.ts":["@trpc/server","drizzle-orm","src/server/auth/permissions.constants.ts","~/server/db/drizzle"],"src/server/services/pinballmapService.ts":["drizzle-orm","~/lib/external/pinballmapTransformer","~/lib/logger","~/server/db/schema"],"src/server/services/qrCodeService.ts":["drizzle-orm","qrcode","~/lib/image-storage/local-storage","~/lib/logger","src/server/db/drizzle.ts","src/server/utils/qrCodeUtils.ts"],"src/server/services/roleService.ts":["@trpc/server","drizzle-orm","src/server/auth/permissions.constants.ts","src/server/services/permissionService.ts","~/lib/utils/id-generation","~/server/db/drizzle","~/server/db/schema"],"src/server/services/types.ts":["~/server/db/schema/collections","~/server/db/schema/issues"],"src/server/services/validation-helper.ts":["~/env.js"],"src/test/archived-templates/service.test.template.ts":["vitest","@trpc/server","src/test/helpers/service-test-helpers.ts"],"src/test/helpers/anonymous-test-helpers.ts":["vitest","vitest-mock-extended","src/test/constants/seed-test-ids.ts","src/test/helpers/service-test-helpers.ts","~/lib/subdomain-verification"],"src/test/helpers/service-test-helpers.ts":["vitest","vitest-mock-extended","src/test/constants/seed-test-ids.ts"],"src/test/integration/archetype-integration-example.test.ts":["vitest","zod","~/test/mocks/seed-based-mocks","~/lib/actions/shared"],"src/test/mocks/seed-based-mocks.ts":["~/test/constants/seed-test-ids"],"src/test/rsc-helpers/dal-test-helpers.ts":["src/test/constants/seed-test-ids.ts","~/lib/subdomain-verification"],"src/test/rsc-helpers/server-action-test-helpers.ts":["src/test/rsc-helpers/dal-test-helpers.ts","~/server/auth/permissions.constants","~/lib/subdomain-verification"],"src/test/templates/dal.template.ts":["vitest","drizzle-orm","~/test/constants/seed-test-ids","~/lib/dal/shared","~/lib/subdomain-verification"],"src/test/templates/e2e.template.ts":["@playwright/test","~/test/constants/seed-test-ids"],"src/test/templates/server-action.template.ts":["vitest","~/test/constants/seed-test-ids","~/lib/subdomain-verification"],"src/test/templates/service.test.template.ts":["vitest","@trpc/server","~/test/helpers/service-test-helpers"],"src/trpc/query-client.ts":["@tanstack/react-query","superjson"],"src/trpc/react.tsx":["@tanstack/react-query","@trpc/client","@trpc/react-query","@trpc/server","react","superjson","src/trpc/query-client.ts","~/env","~/lib/environment-client","~/server/api/root"],"src/utils/supabase/client.ts":["@supabase/ssr","~/env"],"src/utils/supabase/middleware.ts":["@supabase/ssr","next/server","~/env"],"src/utils/supabase/server.ts":["@supabase/ssr","next/headers","~/env","~/lib/utils/domain"]},"dir_purposes":{"docs/security":"Test files and test utilities","docs":"Project documentation","src/lib/actions":"Test files and test utilities","src/lib":"Library code and shared modules","src":"Source code root directory","src/lib/utils":"Shared utility functions and helpers","supabase/tests/rls":"Test files and test utilities","supabase/tests":"Test files and test utilities",".archived-tests-2025-08-23":"Test files and test utilities",".archived-tests-2025-08-23/config":"Configuration files and settings",".archived-tests-2025-08-23/e2e":"Test files and test utilities",".archived-tests-2025-08-23/e2e/helpers":"Helper functions and utilities",".archived-tests-2025-08-23/src/app/api/dev/__tests__":"Test files and test utilities",".archived-tests-2025-08-23/src/app/dashboard/_components/__tests__":"Test files and test utilities",".archived-tests-2025-08-23/src/app/games/[id]/__tests__":"Test files and test utilities",".archived-tests-2025-08-23/src/app/games/__tests__":"Test files and test utilities",".archived-tests-2025-08-23/src/app/issues/__tests__":"Test files and test utilities",".archived-tests-2025-08-23/src/app/machines/[id]":"Test files and test utilities",".archived-tests-2025-08-23/src/app/machines/components":"Reusable UI components",".archived-tests-2025-08-23/src/components/issues/__tests__":"Test files and test utilities",".archived-tests-2025-08-23/src/components":"Reusable UI components",".archived-tests-2025-08-23/src/components/locations/__tests__":"Test files and test utilities",".archived-tests-2025-08-23/src/components/machines/__tests__":"Test files and test utilities",".archived-tests-2025-08-23/src/components/permissions/__tests__":"Test files and test utilities",".archived-tests-2025-08-23/src/hooks/__tests__":"Test files and test utilities",".archived-tests-2025-08-23/src/integration-tests":"Test files and test utilities",".archived-tests-2025-08-23/src/lib/common/__tests__":"Test files and test utilities",".archived-tests-2025-08-23/src/lib/environment-client/__tests__":"Test files and test utilities",".archived-tests-2025-08-23/src/lib/external/__tests__":"Test files and test utilities",".archived-tests-2025-08-23/src/lib/issues/__tests__":"Test files and test utilities",".archived-tests-2025-08-23/src/lib/opdb/__tests__":"Test files and test utilities",".archived-tests-2025-08-23/src/lib/permissions/__tests__":"Test files and test utilities",".archived-tests-2025-08-23/src/lib/pinballmap/__tests__":"Test files and test utilities",".archived-tests-2025-08-23/src/lib/supabase/__tests__":"Test files and test utilities",".archived-tests-2025-08-23/src/lib/users/__tests__":"Test files and test utilities",".archived-tests-2025-08-23/src/server/api/__tests__":"Test files and test utilities",".archived-tests-2025-08-23/src/server/api/routers/__tests__":"Test files and test utilities",".archived-tests-2025-08-23/src/server/api/routers/utils/__tests__":"Test files and test utilities",".archived-tests-2025-08-23/src/server/auth/__tests__":"Test files and test utilities",".archived-tests-2025-08-23/src/server/db/__tests__":"Test files and test utilities",".archived-tests-2025-08-23/src/server/services/__tests__":"Test files and test utilities",".archived-tests-2025-08-23/src/test":"Test files and test utilities",".archived-tests-2025-08-23/src/test/__examples__":"Test files and test utilities",".archived-tests-2025-08-23/src/test/__tests__":"Test files and test utilities",".archived-tests-2025-08-23/src/test/constants":"Test files and test utilities",".archived-tests-2025-08-23/src/test/examples":"Test files and test utilities",".archived-tests-2025-08-23/src/test/helpers/__tests__":"Test files and test utilities",".archived-tests-2025-08-23/src/test/helpers":"Helper functions and utilities",".archived-tests-2025-08-23/src/test/setup":"Test files and test utilities",".archived-tests-2025-08-23/src/test/templates":"Test files and test utilities",".archived-tests-2025-08-23/src/test/utils":"Shared utility functions and helpers","RSC_MIGRATION":"Test files and test utilities","docs/architecture":"API routes and endpoints","docs/configuration":"Configuration files and settings","docs/deprecated":"Test files and test utilities","docs/deprecated/testing":"Test files and test utilities","docs/design-docs":"Project documentation","docs/latest-updates":"Test files and test utilities","docs/lessons-learned":"API routes and endpoints","docs/planning/archive":"Test files and test utilities","docs/quick-reference":"Test files and test utilities","docs/testing":"Test files and test utilities","e2e":"Test files and test utilities","e2e/helpers":"Helper functions and utilities","scripts":"Build and utility scripts","src/app/api/admin/export/activity-log":"API routes and endpoints","src/app/api/dev/users":"API routes and endpoints","src/app/api/health":"API routes and endpoints","src/app/api/organizations/public":"Publicly accessible files","src/app/api/qr/[qrCodeId]":"API routes and endpoints","src/app/api/search/suggestions":"API routes and endpoints","src/app/api/search/universal":"API routes and endpoints","src/app/api/trpc/[trpc]":"API routes and endpoints","src/app/auth/auth-code-error":"Authentication and authorization logic","src/app/auth/callback":"API routes and endpoints","src/app/auth/sign-in/components":"Reusable UI components","src/app/auth/sign-up/components":"Reusable UI components","src/app/settings/activity/components":"Reusable UI components","src/app/settings/organization/components":"Reusable UI components","src/app/settings/system/components":"Reusable UI components","src/app/settings/users/components":"Reusable UI components","src/components":"Reusable UI components","src/components/utils":"Shared utility functions and helpers","src/lib/auth":"Authentication and authorization logic","src/lib/common/__tests__":"Test files and test utilities","src/lib/dal":"Test files and test utilities","src/lib/services":"Business logic and external service integrations","src/lib/utils/__tests__":"Test files and test utilities","src/server/api":"API endpoints and route handlers","src/server/api/routers":"Data models and schemas","src/server/api/routers/utils":"Shared utility functions and helpers","src/server/auth":"Authentication and authorization logic","src/server/db/utils/__tests__":"Test files and test utilities","src/server/db/utils":"Shared utility functions and helpers","src/server/services":"Business logic and external service integrations","src/server/utils":"Shared utility functions and helpers","src/test":"Test files and test utilities","src/test/archived-templates":"Test files and test utilities","src/test/constants":"Test files and test utilities","src/test/helpers":"Helper functions and utilities","src/test/integration":"Test files and test utilities","src/test/mocks":"Test files and test utilities","src/test/rsc-helpers":"Helper functions and utilities","src/test/templates":"Test files and test utilities","src/utils":"Shared utility functions and helpers","supabase/migrations":"Database migration files","supabase/tests/setup":"Test files and test utilities"},"staleness":1756091600.607196}