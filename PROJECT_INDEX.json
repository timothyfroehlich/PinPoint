{
  "at": "2025-08-25T06:53:11.985068",
  "root": ".",
  "tree": [
    ".",
    "\u251c\u2500\u2500 docs/",
    "\u2502   \u251c\u2500\u2500 architecture/",
    "\u2502   \u251c\u2500\u2500 configuration/",
    "\u2502   \u251c\u2500\u2500 deployment/",
    "\u2502   \u251c\u2500\u2500 deprecated/",
    "\u2502   \u2502   \u2514\u2500\u2500 testing/",
    "\u2502   \u251c\u2500\u2500 design-docs/",
    "\u2502   \u251c\u2500\u2500 developer-guides/",
    "\u2502   \u2502   \u251c\u2500\u2500 drizzle/",
    "... (truncated)"
  ],
  "stats": {
    "total_files": 415,
    "total_directories": 320,
    "fully_parsed": {
      "typescript": 379,
      "javascript": 4,
      "shell": 3
    },
    "listed_only": {
      "json": 11,
      "sql": 15,
      "shell": 3
    },
    "markdown_files": 155
  },
  "f": {
    ".archived-tests-2025-08-23/e2e/helpers/auth.ts": [
      "t",
      [
        "loginAsTechnician:30:async (page:Page)::",
        "loginAsAdmin:52:async (page:Page)::",
        "loginAsUserWithPermissions:61:async (page:Page, permissions::{ id:string; name:string; email:string; },)::",
        "loginAsRegularUser:111:async (page:Page)::",
        "logout:120:async (page:Page)::",
        "setupTestIssue:129:async (page:Page, issueData?:::"
      ]
    ],
    ".archived-tests-2025-08-23/e2e/helpers/unified-dashboard.ts": [
      "t",
      [
        "loginAsUser:7:async (page:Page, userType::number = 3,):Promise<void>:clearSession,waitForAuthentication:",
        "waitForAuthentication:65:async (page:Page):::",
        "logout:76:async (page:Page, maxRetries::Promise<void>:clearSession,waitForLogout:",
        "waitForLogout:122:async (page:Page, timeout::Promise<void>::",
        "verifyPublicContent:150:async (page:Page, expect::Promise<void>::",
        "verifyAuthenticatedContent:161:async (page:Page, expect::number = 10000,):Promise<void>::",
        "verifyPublicOnlyContent:176:async (page:Page, expect::Promise<void>:verifyPublicContent:",
        "verifyNavigationState:188:async (page:Page, expect::boolean,):Promise<void>::",
        "clearSession:222:async (page:Page):::"
      ]
    ],
    ".archived-tests-2025-08-23/e2e/issue-confirmation.spec.ts": [
      "t",
      {
        "IssueConfirmationPage": [
          "26",
          [
            "constructor:27:(private page:Page)::",
            "loginAs:28:async (userType:keyof typeof TEST_USERS)::",
            "createIssueWithBasicForm:37:async ()::",
            "createIssueWithFullForm:55:async ()::",
            "createIssueWithExplicitConfirmation:88:async (isConfirmed:boolean)::",
            "navigateToIssueList:113:async ()::",
            "findIssueByTitle:118:async (title:string)::",
            "toggleIssueConfirmation:123:async (issueTitle:string, shouldConfirm:boolean)::",
            "viewConfirmationStatistics:187:async ()::",
            "__init__:27:(private page:Page)::"
          ]
        ]
      }
    ],
    ".archived-tests-2025-08-23/e2e/roles-permissions.spec.ts": [
      "t",
      {
        "RolePermissionPage": [
          "39",
          [
            "constructor:40:(private page:Page)::",
            "loginAs:41:async (userType:keyof typeof TEST_USERS)::",
            "navigateToRoleManagement:56:async ()::",
            "createRole:63:async (name:string, permissions:string[])::",
            "editRole:82:async (roleName:string, newPermissions:string[])::",
            "deleteRole:101:async (roleName:string, reassignTo?:string)::",
            "assignUserToRole:119:async (userEmail:string, roleName:string)::",
            "verifyPermissionAccess:138:async (permission:string, shouldHaveAccess:boolean)::",
            "__init__:40:(private page:Page)::"
          ]
        ]
      }
    ],
    ".archived-tests-2025-08-23/sr/app/api/dev/__tests__/users-simple.test.ts": [
      "t",
      ["setNodeEnv:7:(value:string)::"]
    ],
    ".archived-tests-2025-08-23/sr/app/dashboard/_components/__tests__/PrimaryAppBar.test.tsx": [
      "t",
      ["MockAuthProvider:48:({ children, user = createMockSupabaseUser()::"]
    ],
    ".archived-tests-2025-08-23/sr/app/machines/components/MachineCard.test.tsx": [
      "t",
      [
        "createMockMachine:36:(overrides:Partial<MachineWithRelations> = {},):::",
        "createMachineWithoutCustomName:120:():MachineWithRelations::"
      ],
      {
        "const": ["383", []]
      }
    ],
    ".archived-tests-2025-08-23/sr/components/issues/__tests__/MachineSelector.test.tsx": [
      "t",
      [
        "createMockMachine:25:(overrides:Partial<MachineForIssues> = {},):::",
        "createMockMachines:38:(count = 3):MachineForIssues[]::"
      ]
    ],
    ".archived-tests-2025-08-23/sr/components/locations/__tests__/LocationDetailView.test.tsx": [
      "t",
      ["createMockLocation:57:(overrides:any = {})::"]
    ],
    ".archived-tests-2025-08-23/sr/components/locations/__tests__/MachineGrid.test.tsx": [
      "t",
      [
        "createMockMachine:16:(overrides:any = {})::",
        "findMachineCard:261:(name:string)::"
      ]
    ],
    ".archived-tests-2025-08-23/sr/components/permissions/__tests__/PermissionGate.test.tsx": [
      "t",
      [
        "expectProtectedContentVisible:40:()::",
        "expectProtectedContentHidden:46:()::",
        "expectEditButtonVisible:52:()::",
        "expectAdminPanelHidden:58:()::",
        "expectCreateMachineVisible:64:()::",
        "expectFallbackVisible:70:()::",
        "expectFallbackHidden:76:()::",
        "expectPermissionCalled:82:(mock:ReturnType<typeof vi.fn>, permission:::",
        "expectEmptyBody:91:()::",
        "hasPermission:525:(permission:string)::"
      ]
    ],
    ".archived-tests-2025-08-23/sr/components/react-environment.test.tsx": [
      "t",
      ["SimpleComponent:13:()::"]
    ],
    ".archived-tests-2025-08-23/sr/hooks/__tests__/usePermissions.test.tsx": [
      "t",
      [
        "createWrapper:28:(options:{ userPermissions?::string; session?:any; injectPermissionDeps?:boolean; queryOptions?:{ isLoading?:boolean; isError?:boolean; error?:any }; } = {},)::",
        "DynamicWrapper:233:({ children, permissions, }:{ children::string[]; })::"
      ]
    ],
    ".archived-tests-2025-08-23/sr/integration-t/comment.integration.test.ts": [
      "t",
      ["withCommentBusinessLogicSetup:83:async (workerDb, testFn)::"]
    ],
    ".archived-tests-2025-08-23/sr/integration-t/cross-org-isolation.test.ts": [
      "t",
      [
        "integration:15:(PGlite limitation)::",
        "createMinimalTestData:47:async (db:typeof schema, primaryOrgId::string,)::"
      ]
    ],
    ".archived-tests-2025-08-23/sr/integration-t/machine.location.integration.test.ts": [
      "t",
      ["setupTestData:55:async (db:TestDatabase)::"]
    ],
    ".archived-tests-2025-08-23/sr/integration-t/machine.owner.integration.test.ts": [
      "t",
      [
        "withMachineOwnerBusinessLogicSetup:81:async (workerDb, testFn):setupTestData:",
        "setupTestData:95:async (db:TestDatabase)::"
      ]
    ],
    ".archived-tests-2025-08-23/sr/integration-t/model.core.integration.test.ts": [
      "t",
      ["createTestContext:80:async (db:TestDatabase, organizationId:::"]
    ],
    ".archived-tests-2025-08-23/sr/integration-t/pinballMap.integration.test.ts": [
      "t",
      [
        "getSimpleSeededData:38:async (db:any)::",
        "createPinballMapTestContext:65:(db:TestDatabase, organizationId::string, permissions:string[] = [\"organization:manage\", \"location:edit\"],):TRPCContext:setMockPermissions:",
        "setMockPermissions:171:(permissions:string[])::"
      ]
    ],
    ".archived-tests-2025-08-23/sr/integration-t/schema-migration-validation.integration.test.ts": [
      "t",
      ["createTestContext:30:async (_db:TestDatabase)::"]
    ],
    ".archived-tests-2025-08-23/sr/lib/common/__tests__/organizationValidation.test.ts": [
      "t",
      [
        "createMockMembership:47:(overrides:Partial<OrganizationMembership> = {},):::",
        "createResourceOwnershipInput:68:(overrides:Partial<ResourceOwnershipInput> = {},):::",
        "createMembershipValidationInput:80:(overrides:Partial<MembershipValidationInput> = {},)::createMockMembership:",
        "createCrossOrganizationAccessInput:91:(overrides:Partial<CrossOrganizationAccessInput> = {},):::"
      ]
    ],
    ".archived-tests-2025-08-23/sr/lib/issues/__tests__/assignmentValidation.test.ts": [
      "t",
      [
        "createTestUser:46:(overrides:Partial<User> = {}):::",
        "createTestMembership:53:(overrides:Partial<Membership> = {},)::createTestUser:",
        "createTestMachine:64:(overrides:Partial<Machine> = {}):::",
        "createTestIssue:73:(overrides:Partial<Issue> = {}):::",
        "createTestIssueStatus:84:(overrides:Partial<IssueStatus> = {},):::",
        "createTestPriority:94:(overrides:Partial<Priority> = {}):::",
        "createTestContext:102:(overrides:Partial<AssignmentValidationContext> = {},):::"
      ]
    ],
    ".archived-tests-2025-08-23/sr/lib/issues/__tests__/creationValidation.test.ts": [
      "t",
      [
        "createMockMachine:27:(overrides:Partial<MachineOwnershipInput[\"machine\"]> = {},):::",
        "createMockDefaults:39:(overrides:Partial<IssueCreationDefaults> = {},):::",
        "createPublicIssueInput:55:(overrides:Partial<PublicIssueCreationInput> = {},):::",
        "createAuthenticatedIssueInput:65:(overrides:Partial<AuthenticatedIssueCreationInput> = {},):::",
        "createContext:75:(overrides:Partial<IssueCreationContext> = {},):::"
      ]
    ],
    ".archived-tests-2025-08-23/sr/lib/issues/__tests__/statusValidation.test.ts": [
      "t",
      [
        "createMockStatus:23:(overrides:Partial<IssueStatus> = {}):::",
        "createStatusSet:32:():::"
      ]
    ],
    ".archived-tests-2025-08-23/sr/lib/pinballmap/__tests__/apiMocker.ts": [
      "t",
      {
        "PinballMapAPIMocker": [
          "12",
          [
            "constructor:14:()::",
            "start:22:():void::",
            "stop:65:():void::",
            "__init__:14:()::"
          ]
        ]
      }
    ],
    ".archived-tests-2025-08-23/sr/lib/users/__tests__/roleManagementValidation.test.ts": [
      "t",
      [
        "createTestUser:43:(overrides:Partial<User> = {}):::",
        "createTestRole:50:(overrides:Partial<Role> = {}):::",
        "createAdminRole:59:(overrides:Partial<Role> = {}):::",
        "createMembership:68:(overrides:Partial<Membership> = {})::createTestRole,createTestUser:",
        "createAdminMembership:78:(overrides:Partial<Membership> = {},)::createAdminRole,createTestUser:",
        "createTestContext:94:(overrides:Partial<RoleManagementContext> = {},):::"
      ]
    ],
    ".archived-tests-2025-08-23/sr/server/api/__tests__/msw.trpc.test.ts": [
      "t",
      ["creation:43:(without executing them)::"]
    ],
    ".archived-tests-2025-08-23/sr/server/api/__tests__/trpc.permission.test.ts": [
      "t",
      [
        "supabaseUserToSession:18:(user:any)::",
        "createMockTRPCContext:51:(permissions:string[] = [], organizationId::string = SEED_TEST_IDS.USERS.ADMIN,):VitestMockContext & {\n  membership:{ roleId:string | null };\n  userPermissions:string[];\n}::",
        "createCompetitorOrgContext:123:(permissions:string[] = [])::"
      ]
    ],
    ".archived-tests-2025-08-23/sr/server/api/routers/__tests__/collection.test.ts": [
      "t",
      ["setupTestData:174:async (db:TestDatabase)::"]
    ],
    ".archived-tests-2025-08-23/sr/server/api/routers/__tests__/issue.confirmation.test.ts": [
      "t",
      [
        "createMockTRPCContext:316:(permissions:string[] = [], context?::OrganizationTRPCContext::"
      ]
    ],
    ".archived-tests-2025-08-23/sr/server/api/routers/__tests__/issue.integration.test.ts": [
      "t",
      ["createTestContext:37:async (txDb:any, organizationId::string,)::"]
    ],
    ".archived-tests-2025-08-23/sr/server/api/routers/__tests__/issue.notification.test.ts": [
      "t",
      [
        "getMockUser:58:(context:TestMockContext)::",
        "getMockMachine:64:(context:TestMockContext)::",
        "getMockIssue:71:(context:TestMockContext)::"
      ]
    ],
    ".archived-tests-2025-08-23/sr/server/api/routers/__tests__/issue.test.ts": [
      "t",
      [
        "createTestIssue:84:async (db:TestDatabase, overrides:::",
        "createPublicContext:110:async (db:TestDatabase, organizationId::Promise<TRPCContext>::"
      ]
    ],
    ".archived-tests-2025-08-23/sr/server/api/routers/__tests__/model.core.test.ts": [
      "t",
      ["setupTestData:74:async (db:TestDatabase)::"]
    ],
    ".archived-tests-2025-08-23/sr/server/api/routers/__tests__/notification.test.ts": [
      "t",
      ["setupTestData:66:async (db:TestDatabase)::"]
    ],
    ".archived-tests-2025-08-23/sr/server/api/routers/utils/__tests__/commentService.integration.test.ts": [
      "t",
      ["createTestContext:72:async (db:TestDatabase, organizationId:::"]
    ],
    ".archived-tests-2025-08-23/sr/server/api/routers/utils/__tests__/commentValidation.test.ts": [
      "t",
      [
        "createValidCommentData:51:(overrides:Partial<CommentData> = {},):::",
        "createValidContext:64:(overrides:Partial<ValidationContext> = {},):::"
      ]
    ],
    ".archived-tests-2025-08-23/sr/server/auth/__tests__/permissions.constants.test.ts": [
      "t",
      ["hasCycle:125:(permission:string)::hasCycle:"]
    ],
    ".archived-tests-2025-08-23/sr/server/auth/__tests__/uploadAuth.test.ts": [
      "t",
      [
        "createMockSupabaseUser:58:(overrides:Partial<PinPointSupabaseUser> = {}, organizationId::PinPointSupabaseUser::",
        "createCompetitorOrgUser:88:(overrides:Partial<PinPointSupabaseUser> = {},)::createMockSupabaseUser:",
        "createMockRequest:100:(headers:Record<string, string> = {}):::",
        "createMockDrizzleClient:108:():DrizzleClient::",
        "createMockOrganization:121:(organizationId:string = SEED_TEST_IDS.ORGANIZATIONS.primary,)::",
        "createCompetitorOrganization:138:():createMockOrganization:",
        "createMockMembership:142:(userId:string = SEED_TEST_IDS.USERS.ADMIN, organizationId::string[] = [\"upload:create\", \"file:manage\"],)::",
        "createCompetitorMembership:163:(permissions:string[] = [\"upload::createMockMembership:"
      ]
    ],
    ".archived-tests-2025-08-23/sr/server/db/__tests__/drizzle-singleton.test.ts": [
      "t",
      [
        "importDrizzleModule:94:async ()::",
        "resetSingleton:99:()::",
        "createMockDrizzleInstance:28:()::"
      ]
    ],
    ".archived-tests-2025-08-23/sr/server/db/__tests__/drizzle-test-helpers.ts": [
      "t",
      [
        "configureDevelopmentMocks:54:():void::",
        "configureProductionMocks:81:():void::",
        "configureCIMocks:111:():void::",
        "configureCustomEnvironment:144:(config:EnvironmentConfig):::",
        "createLocalhost5432URL:182:(database = \"postgres\"):string::",
        "createRemoteURL:202:(host:string, database = \"postgres\"):::",
        "create127001URL:221:(database = \"postgres\"):string::",
        "expectSSLConfiguration:243:(sslSetting:SSLSetting):::",
        "expectPoolConfiguration:266:(maxConnections:number):::",
        "expectTimeoutConfiguration:291:(idle:number, connect::void::",
        "expectLoggingConfiguration:318:(enabled:boolean):::",
        "importDrizzleModule:348:async ():Promise<::",
        "setupDrizzleTestEnvironment:449:(customEnvSetup?:()::",
        "validateDrizzleConfiguration:489:(expectedConfig:{ ssl::number; idleTimeout:number; connectTimeout:number; logging:boolean; }):void:expectLoggingConfiguration,expectPoolConfiguration,expectSSLConfiguration,expectTimeoutConfiguration:",
        "testSingletonBehavior:521:async (moduleImporter:()::",
        "createMockPostgresInstance:363:()::",
        "createMockDrizzleInstance:370:()::"
      ]
    ],
    ".archived-tests-2025-08-23/sr/server/services/__tests__/roleService.test.ts": [
      "t",
      ["createMockDrizzleClient:64:()::"],
      {
        "covering": ["4", []]
      }
    ],
    ".archived-tests-2025-08-23/sr/test/VitestTestWrapper.tsx": [
      "t",
      [
        "MockSessionProvider:47:({ children, }:{ children::Session | null; }):React.JSX.Element::",
        "createMockUser:58:(overrides:Partial<User> = {}):::",
        "createMockMembership:76:(overrides:Partial<{ id::string; organizationId:string; role:string; permissions:string[]; createdAt:Date; updatedAt:Date; }> = {},):::",
        "createMockSessionHook:111:(session:Session | null, sessionLoading = false,)::",
        "createMockMembershipQuery:132:(permissions:string[] = [], role = \"Member\", options::boolean; isError?:boolean; error?:Error | null; } = {},)::",
        "createMockSupabaseUser:162:(overrides:Partial<PinPointSupabaseUser> = {},):::",
        "createServerMockContext:218:(overrides:Partial<ServerMockContext> = {},)::createMockSupabaseUser:",
        "VitestTestWrapper:317:({ children, session = { user:createMockUser()::"
      ]
    ],
    ".archived-tests-2025-08-23/sr/test/constants/seed-test-ids.ts": [
      "t",
      [
        "createMockAdminContext:316:():TestMockContext::",
        "createMockMemberContext:323:(memberNumber:1 | 2 = 1,):::"
      ]
    ],
    ".archived-tests-2025-08-23/sr/test/context.ts": [
      "t",
      ["createTestContext:7:():::"]
    ],
    ".archived-tests-2025-08-23/sr/test/database-test-helpers.ts": [
      "t",
      [
        "cleanupTestData:82:async (db:DrizzleClient, testIds::Promise<void>::",
        "createTestOrganization:256:async (db:DrizzleClient, orgType::Promise<Organization>::",
        "createTestUser:293:async (db:DrizzleClient, overrides::Promise<User>::",
        "createTestUserWithMembership:343:async (db:DrizzleClient, organizationId::\"admin\" | \"manager\" | \"member\" = \"member\", overrides:Partial<User> = {},):Promise<::",
        "createTestMachine:407:async (db:DrizzleClient, organizationId::Partial<Machine> = {},):Promise<::",
        "createTestIssue:502:async (db:DrizzleClient, machineId::string, overrides:Partial<Issue> = {},):Promise<::",
        "createMultiTenantTestEnvironment:624:async (db:DrizzleClient,):::"
      ]
    ],
    ".archived-tests-2025-08-23/sr/test/examples/dual-track-testing-examples.test.ts": [
      "t",
      [
        "calculateIssuePriority:370:(params:{ downtime::string; businessImpact:string; }):string::",
        "escalateIssueIfNeeded:385:async (db:any, issueId::{ downtime:number; customerComplaints:number; revenueImpact:number; },)::",
        "getIssuesForMachine:427:async (db:any, machineId:::",
        "calculateMaintenanceSchedule:438:(params:{ machineAge::number; lastMaintenance:Date; })::",
        "generateOrganizationalReport:463:async (db:any)::",
        "calculateAvgResolutionTime:477:(issues:any[])::",
        "getTopMachinesByIssues:490:(issues:any[])::"
      ],
      {
        "ReportingService": [
          "505",
          [
            "constructor:506:(private db:any):groupByPriority:",
            "generateReport:507:async ()::",
            "__init__:506:(private db:any):groupByPriority:"
          ]
        ]
      }
    ],
    ".archived-tests-2025-08-23/sr/test/factories/roleFactory.ts": [
      "t",
      [
        "create:346:(overrides:Partial<TestOrganization> = {},):::",
        "createIssuePermissions:93:():TestPermission[]::",
        "createMachinePermissions:104:():TestPermission[]::",
        "createLocationPermissions:113:():TestPermission[]::",
        "createAttachmentPermissions:122:():TestPermission[]::",
        "createAdminPermissions:130:():TestPermission[]::",
        "createAllPermissions:141:():TestPermission[]::",
        "createUnauthenticatedRole:172:(organizationId = \"org-1\",):TestRole::",
        "createMemberRole:184:(organizationId = \"org-1\"):TestRole::",
        "createTechnicianRole:199:(organizationId = \"org-1\"):TestRole::",
        "createAdminRole:220:(organizationId = \"org-1\"):TestRole::",
        "createCustomRole:230:(name:string, permissions::TestRole:create:",
        "createSystemRoleSet:244:(organizationId = \"org-1\"):TestRole[]::",
        "createWithMemberCount:253:(memberCount:number, overrides::TestRole:create:",
        "createWithRole:526:(roleName:\"Unauthenticated\" | \"User\" | \"Technician\" | \"Admin\", organizationId = \"org-1\",)::",
        "createWithUser:297:(userId:string, userName::string, role:TestRole,):TestMembership:create:",
        "createMultipleForOrganization:316:(organizationId:string, userCount = 3,)::createSystemRoleSet,createWithUser:",
        "createWithRoles:360:(name = \"Test Organization\", subdomain = \"test\",):TestOrganization::",
        "createWithMemberships:375:(name = \"Test Organization\", subdomain = \"test\", memberCount = 3,):TestOrganization::",
        "createMultipleForTesting:396:(count = 2):TestOrganization[]::",
        "createMatrix:419:():Record<string, string[]>::",
        "getRolePermissions:466:(roleName:string)::createMatrix:",
        "hasPermission:471:(roleName:string, permission::boolean:getRolePermissions:",
        "getPermissionDependencies:476:():Record<string, string[]>::",
        "createWithPermissions:497:(permissions:string[], organizationId = \"org-1\",)::",
        "createAdmin:534:(organizationId = \"org-1\"):createWithRole:",
        "createTechnician:538:(organizationId = \"org-1\"):createWithRole:",
        "createUser:542:(organizationId = \"org-1\"):createWithRole:",
        "createUnauthenticated:546:(organizationId = \"org-1\"):createWithRole:"
      ]
    ],
    ".archived-tests-2025-08-23/sr/test/helpers/archetype-validator.ts": [
      "t",
      [
        "validateTestArchetype:259:(filePath:string, fileContent?::ValidationResult:detectArchetype,validateArchetypeCompliance,validateErrorHandling,validateImportStructure,validateMemorySafety,validatePerformancePatterns,validateRLSContext:",
        "detectArchetype:307:(content:string, _fileName::number | null::",
        "validateMemorySafety:345:(content:string, filePath::ValidationResult,):void:getLineNumber:",
        "validateRLSContext:413:(content:string, filePath::ValidationResult,):void::",
        "validateArchetypeCompliance:459:(content:string, filePath::ValidationResult,):void::",
        "validateImportStructure:504:(content:string, filePath::ValidationResult,):void:getLineNumber:",
        "validateErrorHandling:554:(content:string, filePath::ValidationResult,):void::",
        "validatePerformancePatterns:593:(content:string, filePath::ValidationResult,):void::",
        "getLineNumber:644:(content:string, index::number::",
        "validateTestFiles:651:(filePaths:string[],)::validateTestArchetype:",
        "generateValidationReport:691:(results:Map<string, ValidationResult>,):::",
        "validateSingleFile:796:(filePath:string)::generateValidationReport,validateTestArchetype:"
      ]
    ],
    ".archived-tests-2025-08-23/sr/test/helpers/createSeededAdminTestContext.ts": [
      "t",
      [
        "createSeededAdminTestContext:72:async (txDb:TestDatabase, organizationId::string, options:AdminContextOptions = {},):Promise<SeededAdminTestContext>::"
      ]
    ],
    ".archived-tests-2025-08-23/sr/test/helpers/createSeededCollectionTestContext.ts": [
      "t",
      [
        "createPublicTestContext:76:async (txDb:TestDatabase, organizationId::Promise<SeededCollectionTestContext>::",
        "createSeededCollectionTestContext:178:async (txDb:TestDatabase, organizationId::string, options:SeededCollectionTestOptions = {},):Promise<SeededCollectionTestContext>::"
      ]
    ],
    ".archived-tests-2025-08-23/sr/test/helpers/createSeededIssueTestContext.ts": [
      "t",
      [
        "createSeededIssueTestContext:61:async (txDb:TestDatabase, organizationId::string,):Promise<SeededIssueTestContext>::"
      ]
    ],
    ".archived-tests-2025-08-23/sr/test/helpers/createSeededLocationTestContext.ts": [
      "t",
      [
        "createSeededLocationTestContext:55:async (db:TestDatabase, organizationId::string, options:CreateSeededLocationTestContextOptions = {},):Promise<TRPCContext>::",
        "createPrimaryAdminContext:187:async (db:TestDatabase, options?::Promise<TRPCContext>:createSeededLocationTestContext:",
        "createCompetitorAdminContext:202:async (db:TestDatabase, options?::Promise<TRPCContext>:createSeededLocationTestContext:",
        "createPrimaryMemberContext:217:async (db:TestDatabase, memberNumber::CreateSeededLocationTestContextOptions,):Promise<TRPCContext>:createSeededLocationTestContext:"
      ]
    ],
    ".archived-tests-2025-08-23/sr/test/helpers/createSeededMachineTestContext.ts": [
      "t",
      [
        "createSeededMachineTestContext:55:async (db:TestDatabase, organizationId::string, options:CreateSeededMachineTestContextOptions = {},):Promise<TRPCContext>::",
        "createPrimaryAdminContext:182:async (db:TestDatabase, options?::Promise<TRPCContext>:createSeededMachineTestContext:",
        "createCompetitorAdminContext:197:async (db:TestDatabase, options?::Promise<TRPCContext>:createSeededMachineTestContext:",
        "createPrimaryMemberContext:212:async (db:TestDatabase, memberNumber::CreateSeededMachineTestContextOptions,):Promise<TRPCContext>:createSeededMachineTestContext:"
      ]
    ],
    ".archived-tests-2025-08-23/sr/test/helpers/createSeededNotificationTestContext.ts": [
      "t",
      [
        "createSeededNotificationTestContext:13:async (txDb:TestDatabase, organizationId::string, options?:CreateSeededNotificationTestContextOptions,):Promise<TRPCContext>::"
      ]
    ],
    ".archived-tests-2025-08-23/sr/test/helpers/integration-test-seeds.ts": [
      "t",
      [
        "seedProductionInfrastructure:44:async (db:TestDatabase,):::",
        "seedProductionSampleData:60:async (db:TestDatabase, organizationId::Promise<void>::",
        "seedTestInfrastructure:81:async (db:TestDatabase,)::seedProductionInfrastructure:",
        "seedTestSampleData:92:async (db:TestDatabase, organizationId::Promise<void>:seedProductionSampleData:",
        "seedCompleteTestData:104:async (db:TestDatabase,)::seedTestInfrastructure,seedTestSampleData:"
      ]
    ],
    ".archived-tests-2025-08-23/sr/test/helpers/multi-tenant-test-helpers.ts": [
      "t",
      [
        "auditMultiTenantSecurity:101:async (db:TestDatabase, options::number; testDataSize?:\"small\" | \"medium\" | \"large\"; includePerformance?:boolean; } = {},):Promise<SecurityAuditResult>:auditTableIsolation,createAuditTestData,getDataSizeConfig,measureRLSPerformance:",
        "testPermissionBoundaries:185:async (db:TestDatabase, userId::string, permissionSet:string[],):Promise<PermissionTestResult[]>::",
        "testCrossOrgAccess:327:async (db:TestDatabase, sourceOrg::OrgTestContext,):Promise<CrossOrgAccessResult[]>::",
        "measureRLSPerformance:411:async (db:TestDatabase, table::string; schema:any }, org:OrgTestContext,):Promise<::",
        "validateRLSPolicies:498:async (db:TestDatabase):::",
        "getDataSizeConfig:568:(size:\"small\" | \"medium\" | \"large\")::",
        "createAuditTestData:582:async (db:TestDatabase, org::{ locations:number; machines:number; issues:number },)::",
        "auditTableIsolation:637:async (db:TestDatabase, table::string; schema:any }, testOrgs:OrgTestContext[],):Promise<SecurityViolation[]>::"
      ]
    ],
    ".archived-tests-2025-08-23/sr/test/helpers/organization-context.ts": [
      "t",
      [
        "createOrgContext:83:async (db:TestDatabase, orgSuffix:::",
        "setupMultiOrgContext:400:async (db:TestDatabase, count = 2,)::createOrgContext:",
        "createOrgTestData:422:async (db:TestDatabase, orgContext::{ locationCount?:number; machineCount?:number; issueCount?:number; } = {},):Promise<::",
        "verifyOrgIsolation:547:async (db:TestDatabase, org1Id::string,):Promise<::",
        "getUserMembership:632:async (db:TestDatabase, userId::string,)::"
      ]
    ],
    ".archived-tests-2025-08-23/sr/test/helpers/pglite-test-setup.ts": [
      "t",
      [
        "applyDrizzleSchema:47:async (db:TestDatabase):::",
        "verifyMigrationComplete:68:async (db:TestDatabase):::",
        "createTestDatabase:120:async ():Promise<TestDatabase>::",
        "configureForBusinessLogicTesting:150:async (db:TestDatabase,):::",
        "createCleanTestDatabase:221:async ():Promise<::",
        "createInfrastructureOnlyTestDatabase:254:async ():Promise<::",
        "createSeededTestDatabase:279:async ():Promise<::",
        "withTransaction:329:async (db:TestDatabase, testFn::TestDatabase)::",
        "cleanupTestDatabase:358:async (db:TestDatabase):::",
        "isRLSBypassed:388:async (db:TestDatabase):::",
        "getCurrentTestRole:406:async (db:TestDatabase,):::",
        "getCurrentTestMode:425:async (db:TestDatabase,):::",
        "verifyIntegrationTesterMode:447:async (db:TestDatabase):::",
        "getIntegrationTesterDatabaseUrl:501:():string::",
        "verifyIntegrationTesterSetup:524:async ():Promise<boolean>::"
      ]
    ],
    ".archived-tests-2025-08-23/sr/test/helpers/rls-security-context.ts": [
      "t",
      [
        "withRLSSecurityContext:27:async (db:TestDatabase, context::(db:TestDatabase):esc:",
        "clearRLSSecurityContext:53:async (db:TestDatabase):::",
        "esc:33:(v:string)::"
      ]
    ],
    ".archived-tests-2025-08-23/sr/test/helpers/rls-test-context.ts": [
      "t",
      [
        "createTestUser:149:(userId:string, organizationId::{ email?:string; name?:string; role?:string; } = {},):RLSTestUser::",
        "withTestUser:203:async (userId:string, organizationId::()::",
        "withRLSContext:266:async (db:TestDatabase, userId::string, operation:(db:TestDatabase)::",
        "verifyRLSContext:318:async (db:TestDatabase, expected::string; userId?:string; role?:string; email?:string; },):Promise<void>::",
        "withAdminContext:382:async (db:TestDatabase, operation::TestDatabase)::",
        "withMemberContext:403:async (db:TestDatabase, operation::TestDatabase)::",
        "withFullRLSContext:448:async (db:TestDatabase, userId::string, operation:(db:TestDatabase)::",
        "verifyOrganizationalIsolation:526:async (db:TestDatabase, testFunction::TestDatabase)::",
        "mockNextHeaders:579:():void::"
      ],
      {
        "RLSContextManager": [
          "84",
          [
            "setUser:87:(user:RLSTestUser):void::",
            "clearUser:91:():void::",
            "getCurrentUser:95:():RLSTestUser | null::",
            "getMockSupabaseResponse:99:():MockSupabaseAuthResponse::",
            "getMockSupabaseClient:113:():MockSupabaseClient::",
            "setOriginalCreateClient:128:(original:unknown):void::",
            "getOriginalCreateClient:132:():unknown::"
          ]
        ]
      }
    ],
    ".archived-tests-2025-08-23/sr/test/helpers/roleTestHelpers.ts": [
      "t",
      [
        "getPermissionTestScenarios:18:(requiredPermission:string):::",
        "getRoleTestScenarios:51:(requiredPermission:string):::",
        "getMultiTenantTestScenarios:71:():::",
        "createPermissionTestContexts:102:(permission:string):::",
        "createMultiTenantTestContexts:127:():::",
        "validatePermissionInheritance:156:(role:TestRole, expectedPermissions::boolean::",
        "validatePermissionDependencies:169:(permissions:string[]):::",
        "generatePermissionCombinations:194:():::",
        "getPermissionEscalationScenarios:270:():::",
        "validateRoleSystemIntegrity:317:(roles:TestRole[]):::",
        "createTestSuiteData:366:():::"
      ]
    ],
    ".archived-tests-2025-08-23/sr/test/helpers/session-context.ts": [
      "t",
      [
        "setTestSession:26:async (db:TestDatabase, orgId::string, role?:string, additionalContext?:Record<string, string>,):Promise<void>::",
        "getCurrentSession:63:async (db:TestDatabase):::",
        "clearTestSession:107:async (db:TestDatabase):::",
        "escalate:531:async (to:\"member\" | \"admin\")::"
      ],
      {
        "MultiContextManager": [
          "284",
          [
            "constructor:292:(private db:TestDatabase)::",
            "switchTo:319:async (contextId:string):Promise<void>::",
            "getContextIds:341:():string[]::",
            "clearContexts:348:():void::",
            "__init__:292:(private db:TestDatabase)::"
          ]
        ]
      }
    ],
    ".archived-tests-2025-08-23/sr/test/helpers/supabase-test-setup.ts": [
      "t",
      [
        "ensureTestBucket:32:async ():Promise<void>::",
        "clearTestStorage:56:async ():Promise<void>::",
        "getAllFilePaths:98:async (bucketName:string, folder::Promise<string[]>:getAllFilePaths:",
        "createTestBucket:132:async (bucketName:string, options::boolean; fileSizeLimit?:number; allowedMimeTypes?:string[]; } = {},):Promise<void>::",
        "deleteTestBucket:160:async (bucketName:string)::clearStorageBucket:",
        "clearStorageBucket:175:async (bucketName:string)::getAllFilePaths:",
        "uploadTestFile:192:async (bucketName:string, filePath::File | Blob,):Promise<string>::",
        "verifyFileExists:218:async (bucketName:string, filePath::Promise<boolean>::",
        "getTestFileUrl:235:(bucketName:string, filePath::string::"
      ]
    ],
    ".archived-tests-2025-08-23/sr/test/helpers/test-id-generator.ts": [
      "t",
      [
        "generateTestId:38:(prefix = \"test\"):never::",
        "generateTestEmail:45:(prefix = \"test\"):never::",
        "generateTestSubdomain:52:(prefix = \"test\"):never::",
        "generateTestIds:59:(count:number, prefix = \"test\"):::"
      ]
    ],
    ".archived-tests-2025-08-23/sr/test/helpers/worker-scoped-db.ts": [
      "t",
      [
        "withIsolatedTest:84:async (db:TestDatabase, testFn::TestDatabase)::",
        "withExplicitRollback:161:async (db:TestDatabase, testFn::TestDatabase)::",
        "_cleanupAllTestData:207:async (_db:TestDatabase):::",
        "setTestSession:264:async (db:TestDatabase, orgId::string, role?:string,):Promise<void>::",
        "withRLSTest:329:async (db:TestDatabase, orgId::(tx:TestDatabase):withIsolatedTest:",
        "withMultiOrgTest:348:async (db:TestDatabase, contexts::string; role?:string; userId?:string }[], testFn:( setContext:(contextIndex:number):setContext,setTestSession,withIsolatedTest:",
        "withBusinessLogicTest:401:async (db:TestDatabase, testFn::TestDatabase):withIsolatedTest:",
        "withRLSAwareTest:430:async (db:TestDatabase, orgId::(tx:TestDatabase):withRLSTest:",
        "withCrossOrgTest:454:async (db:TestDatabase, contexts::string; role?:string; userId?:string }[], testFn:( setContext:(contextIndex:number):withMultiOrgTest:",
        "withRLSEnabledTest:475:async (db:TestDatabase, testFn::TestDatabase):withIsolatedTest:",
        "setContext:357:async (contextIndex:number)::setTestSession:"
      ]
    ],
    ".archived-tests-2025-08-23/sr/test/mockContext.ts": [
      "t",
      [
        "createMockContext:94:():MockContext::",
        "resetMockContext:153:(ctx:MockContext):::",
        "createMockServiceFactory:47:():DeepMockProxy<ServiceFactory>::"
      ]
    ],
    ".archived-tests-2025-08-23/sr/test/mockUtils.ts": [
      "t",
      [
        "createMockUser:147:(overrides:Partial<MockUser> = {}):::",
        "createMockStatus:160:(overrides:Partial<MockIssueStatus> = {},):::",
        "createMockPriority:176:(overrides:Partial<MockPriority> = {},):::",
        "createMockModel:192:(overrides:Partial<MockModel> = {}):::",
        "createMockLocation:205:(overrides:Partial<MockLocation> = {},):::",
        "createMockMachine:219:(overrides:Partial<MockMachine> = {},)::createMockLocation,createMockModel:",
        "createMockIssue:244:(overrides:Partial<MockIssue> = {})::createMockMachine,createMockPriority,createMockStatus,createMockUser:",
        "createMockIssuesList:282:(options:MockFactoryOptions<MockIssue> = {},)::createMockIssue:",
        "createMockLocations:380:(options:MockFactoryOptions<MockLocation> = {},)::createMockLocation:",
        "createMockStatuses:403:(options:MockFactoryOptions<MockIssueStatus> = {},)::createMockStatus:",
        "createMockMachines:428:(options:MockFactoryOptions<MockMachine> = {},)::createMockMachine,createMockModel:",
        "createMockUsers:451:(options:MockFactoryOptions<MockUser> = {},)::createMockUser:",
        "createMockTRPCQueryResult:476:(data:T, options::MockTRPCQueryResult<T>::",
        "createMockTRPCLoadingResult:495:():MockTRPCQueryResult<\n  T | undefined\n>::",
        "createMockTRPCErrorResult:510:(error:Error = new Error(\"Mock error\")::",
        "createIssueListTRPCMocks:526:():::",
        "createPermissionScenario:624:(permissions:string[], role = \"Custom\",):::",
        "createRealisticIssueDataSet:649:():::"
      ]
    ],
    ".archived-tests-2025-08-23/sr/test/msw/handlers.ts": [
      "t",
      [
        "createMockUser:31:(overrides:Partial<User> = {}):::",
        "createMockOrganization:47:(overrides:Partial<Organization> = {},):::",
        "createMockMembership:59:(overrides:{ userId?::string; organizationId?:string; permissions?:string[]; } = {},)::",
        "mockUserProfile:77:(user:Partial<User> = {})::",
        "mockCurrentMembership:104:(membership:Parameters<typeof createMockMembership>[0] = {},)::",
        "mockCurrentOrganization:115:(org:Partial<Organization> = {})::",
        "mockUserWithPermissions:121:(permissions:string[])::",
        "mockAdminUser:125:()::",
        "mockUserWithoutPermissions:148:()::",
        "mockUnauthorizedError:155:()::",
        "mockForbiddenError:161:(permission:string)::",
        "mockNotFoundError:167:(resource:string)::"
      ]
    ],
    ".archived-tests-2025-08-23/sr/test/msw/setup.ts": [
      "t",
      [
        "getTestBaseUrl:8:():string::",
        "ensureListening:41:()::",
        "ensureClosed:51:()::"
      ]
    ],
    ".archived-tests-2025-08-23/sr/test/permissionTestHelpers.ts": [
      "t",
      [
        "createAuthenticatedContext:101:(permissions:readonly string[] = PERMISSION_SCENARIOS.MEMBER.permissions,):::",
        "createPublicContext:189:():VitestMockContext &::",
        "createCrossOrgContext:209:(organizationId = \"other-org\", permissions:readonly string[] = PERMISSION_SCENARIOS.MEMBER.permissions,):::",
        "createPermissionTestCases:243:(requiredPermission:string, additionalCases::PermissionTestCase[]::",
        "expectAuthenticationRequired:281:async (routerCall:(caller::createPublicContext:",
        "expectOrganizationRequired:295:async (routerCall:(caller::createAuthenticatedContext:",
        "expectPermissionRequired:312:async (routerCall:(caller::createAuthenticatedContext:",
        "expectOrganizationIsolation:333:async (routerCall:(caller:::",
        "createPermissionTestSuite:358:(name:string, options::createAuthenticatedContext,createPermissionTestCases,expectAuthenticationRequired,expectOrganizationIsolation,expectOrganizationRequired,expectPermissionRequired:",
        "setupPermissionMocks:485:(context:VitestMockContext, mockData::any; machine?:any; location?:any; membership?:any; [key:string]:any; },)::"
      ]
    ],
    ".archived-tests-2025-08-23/sr/test/routerTestPatterns.ts": [
      "t",
      [
        "createRouterTestContext:41:(router:AppRouter):::",
        "testAuthenticatedProcedure:66:(testName:string, procedureCall::RouterTestContext)::",
        "testPublicProcedure:106:(testName:string, procedureCall::RouterTestContext)::",
        "testAdminOnlyProcedure:135:(testName:string, procedureCall::RouterTestContext)::",
        "testServiceIntegration:174:(serviceName:keyof VitestMockContext[\"services\"], methodName::{ mockReturnValue?:any; expectedCallArgs?:any[]; mockSetup?:(mockService:any)::",
        "testInputValidation:220:(procedureCall:(input::RouterTestContext):createRouterTestContext:",
        "testOrganizationScoping:250:(procedureCall:(context:::",
        "createRouterTestSuite:397:(options:RouterTestSuiteOptions<TInput, TOutput>,)::"
      ]
    ],
    ".archived-tests-2025-08-23/sr/test/seed-data-helpers.ts": [
      "t",
      [
        "getCachedSeedData:55:async (cacheKey:string, fetchFn:::",
        "clearSeedDataCache:71:():void::",
        "getUserWithRoles:82:async (email:string):::",
        "getSeededAdmin:152:async ():Promise<SeededUser>::",
        "getSeededMember:162:async ():Promise<SeededUser>::",
        "getSeededPlayer:172:async ():Promise<SeededUser>::",
        "getSeededUserByEmail:181:async (email:string)::getCachedSeedData,getUserWithRoles:",
        "getSeededOrganization:208:async ():Promise<SeededOrganization>::",
        "getSeededIssue:260:async (titleContains:string,)::getCachedSeedData:",
        "getSeededIssues:329:async (limit = 10):Promise<SeededIssue[]>::",
        "getSeededOrganizationId:392:async ():Promise<string>::",
        "getSeededIssueStatuses:400:async ():Promise<IssueStatus[]>::",
        "getSeededPriorities:413:async ():Promise<Priority[]>::",
        "createSupabaseUserFromSeeded:456:(user:SeededUser):::",
        "getSeededAdminSupabaseUser:500:async ():Promise<SupabaseUser>::",
        "getSeededMemberSupabaseUser:508:async ():Promise<SupabaseUser>::",
        "getSeededPlayerSupabaseUser:516:async ():Promise<SupabaseUser>::",
        "setupAuthTestData:529:async ():createSupabaseUserFromSeeded,getSeededAdmin,getSeededMember,getSeededOrganization,getSeededPlayer:",
        "cleanupSeedDataHelpers:560:():void::"
      ]
    ],
    ".archived-tests-2025-08-23/sr/test/setup/issueListTestSetup.ts": [
      "t",
      [
        "createIssueListMocks:49:():IssueListMocks::",
        "setupIssueListTest:191:(scenario:IssueListTestScenario, mocks::::",
        "createWorkflowIssues:308:():ReturnType<\n  typeof createMockIssuesList\n>::",
        "createDefaultMachineData:110:():{\n  id::string;\n  organizationId:string;\n  modelId:string;\n  locationId:string;\n  ownerId:null;\n  model:{\n    id:string;\n    name:string;\n    manufacturer:string;\n    year:number;\n  };\n  location:{\n    id:string;\n    name:string;\n    organizationId:string;\n  };\n}[]::",
        "setupDefaultResponses:230:():void::",
        "resetMocks:271:():void::"
      ]
    ],
    ".archived-tests-2025-08-23/sr/test/setup/viTestMocks.ts": [
      "t",
      [
        "setupNavigationMocks:24:(mocks:IssueListMocks):::",
        "setupTRPCMocks:37:(mocks:IssueListMocks):::",
        "setupPermissionMocks:105:(mocks:IssueListMocks):::",
        "setupAllIssueListMocks:115:(mocks:IssueListMocks)::setupNavigationMocks,setupPermissionMocks,setupTRPCMocks:"
      ]
    ],
    ".archived-tests-2025-08-23/sr/test/templates/02-service-business-logic-test.template.ts": [
      "t",
      ["createTestData:316:async (db:any):::"],
      {
        "name": ["348", []]
      }
    ],
    ".archived-tests-2025-08-23/sr/test/templates/03-pglite-integration-test.template.ts": [
      "t",
      [
        "createBasicTestData:393:async (db:any):::",
        "createComplexTestDataset:418:async (db:any)::createBasicTestData:"
      ]
    ],
    ".archived-tests-2025-08-23/sr/test/templates/04-react-component-unit-test.template.tsx": [
      "t",
      ["ThrowingComponent:391:():JSX.Element::"]
    ],
    ".archived-tests-2025-08-23/sr/test/testDataFactories.ts": [
      "t",
      [
        "createIssueFactory:18:(options:FactoryOptions = {})::",
        "createSingleIssue:21:(customOverrides:Record<string, any> = {})::",
        "createCommentFactory:117:(options:FactoryOptions = {})::",
        "createSingleComment:120:(customOverrides:Record<string, any> = {})::",
        "createUserFactory:179:(options:FactoryOptions = {})::",
        "createMachineFactory:262:(options:FactoryOptions = {})::",
        "createModelFactory:305:(options:FactoryOptions = {})::",
        "createLocationFactory:331:(options:FactoryOptions = {})::",
        "createStatusFactory:363:(options:FactoryOptions = {})::",
        "createPriorityFactory:386:(options:FactoryOptions = {})::",
        "createRoleFactory:404:(options:FactoryOptions = {})::",
        "createOrganizationFactory:427:(options:FactoryOptions = {})::",
        "createSessionFactory:443:(options:FactoryOptions = {})::",
        "createAttachmentFactory:455:(options:FactoryOptions = {})::",
        "createSingleAttachment:458:(customOverrides:Record<string, any> = {},)::",
        "createActivityFactory:486:(options:FactoryOptions = {})::",
        "createSingleActivity:489:(customOverrides:Record<string, any> = {})::",
        "getSingleIssue:519:(overrides:Record<string, any> = {})::",
        "createComplexIssueFactory:526:(options:FactoryOptions = {})::",
        "createIssueWithMixedComments:542:(options:FactoryOptions = {})::",
        "createIssueRouterContext:605:(options:{ userId?::string; permissions?:string[]; role?:string; } = {},):createUserFactory:",
        "createMockServices:779:():any::",
        "createTRPCCallerForIssues:807:(options:{ permissions?::string; organizationId?:string; role?:string; mockContext?:any; } = {},):createIssueRouterContext,createMockServices:",
        "createIssueDbMocks:856:(context:any)::"
      ]
    ],
    ".archived-tests-2025-08-23/sr/test/utils/mock-ids.ts": [
      "t",
      [
        "createNumberedId:13:(pattern:string, number::string::",
        "createAdminId:70:(base:string, suffix::string::",
        "createNumberedVariation:77:(pattern:string, number::string:createNumberedId:"
      ]
    ],
    ".archived-tests-2025-08-23/sr/test/vitestMockContext.ts": [
      "t",
      ["createVitestMockContext:112:():VitestMockContext::"]
    ],
    "e2e/helpers/unified-dashboard.ts": ["t", ["logout:6:async (page:Page)::"]],
    "middleware.ts": [
      "t",
      [
        "middleware:8:async (request:NextRequest)::createServerClient,getBaseDomain,getSubdomain,setAll:",
        "getSubdomain:72:(host:string):::",
        "getBaseDomain:97:(host:string):::"
      ]
    ],
    "s/convert-snake-case.ts": [
      "t",
      [
        "parseArgs:47:():Options::",
        "log:72:(...m:any[])::",
        "collectSchemaColumns:77:async ():Promise<Set<string>>::",
        "snakeToCamel:99:(s:string):::",
        "buildMapping:114:async ():Promise<MappingEntry[]>::",
        "listSourceFiles:138:():string[]::",
        "includeFilter:159:(path:string):::",
        "applyMappingAll:173:(content:string, mapping::::",
        "applyMappingProperties:201:(content:string, mapping::::",
        "applyMappingToContent:248:(content:string, mapping::Mode,):::",
        "processFiles:258:async ():applyMappingToContent,buildMapping,listSourceFiles,log:"
      ]
    ],
    "s/generate-sql-constants.ts": [
      "t",
      ["generateSQLConstants:22:()::", "main:191:():generateSQLConstants:"]
    ],
    "s/safe-psql.sh": [
      "s",
      [
        "show_usage:0:()::",
        "is_host_allowed:0:()::",
        "is_database_allowed:0:()::"
      ]
    ],
    "s/setup-pgtap.sh": [
      "s",
      [
        "print_status:0:()::",
        "print_warning:0:()::",
        "print_error:0:()::",
        "detect_os:0:()::",
        "install_pgtap:0:()::",
        "install_pg_prove:0:()::",
        "setup_test_database:0:():print_error:",
        "create_test_runner:0:()::",
        "update_package_json:0:()::",
        "create_ci_config:0:()::",
        "verify_installation:0:()::",
        "main:0:()::"
      ]
    ],
    "s/validate-drizzle-crud.ts": [
      "t",
      ["main:848:async ()::"],
      {
        "DrizzleCRUDValidator": [
          "39",
          [
            "constructor:46:(minimalMode = false)::",
            "testConnection:60:async ():Promise<boolean>::",
            "testInsertOperations:132:async ():Promise<void>::",
            "testSelectOperations:244:async ():Promise<void>::",
            "testUpdateOperations:348:async ():Promise<void>::",
            "testDeleteOperations:443:async ():Promise<void>::",
            "testTransactionOperations:550:async ():Promise<void>::",
            "generateReport:668:():void::",
            "runMinimalTests:739:async ():Promise<void>::",
            "runAllTests:815:async ():Promise<void>::",
            "__init__:46:(minimalMode = false)::"
          ]
        ]
      }
    ],
    "sr/app/_components/AuthenticatedDashboard.tsx": [
      "t",
      ["AuthenticatedDashboard:39:():React.ReactNode::"]
    ],
    "sr/app/_components/AuthenticatedLayout.tsx": [
      "t",
      ["AuthenticatedLayout:11:({ children, }:AuthenticatedLayoutProps):::"]
    ],
    "sr/app/_components/DevLoginCompact.tsx": [
      "t",
      [
        "DevLoginCompact:33:({ onLogin:_onLogin, }::React.ReactNode::",
        "handleLogin:67:async (email:string):::",
        "getRoleColor:126:(role:string | null,):::",
        "fetchUsers:43:async ():Promise<void>::"
      ]
    ],
    "sr/app/_components/LoginModal.tsx": [
      "t",
      ["LoginModal:9:({ onLogin }:LoginModalProps):::"]
    ],
    "sr/app/_components/PublicDashboard.tsx": [
      "t",
      [
        "LocationCard:22:({ location }:LocationCardProps):::",
        "PublicDashboard:95:():React.ReactNode::"
      ]
    ],
    "sr/app/api/dev/users/route.ts": [
      "t",
      ["GET:11:async ():Promise<NextResponse>::"]
    ],
    "sr/app/api/health/route.ts": [
      "t",
      ["GET:7:async ():Promise<NextResponse>::"]
    ],
    "sr/app/api/qr/[qrCodeId]/route.ts": [
      "t",
      [
        "GET:8:async (_request:NextRequest, { params }::Promise<{ qrCodeId:string }> },):Promise<NextResponse>::",
        "HEAD:56:async (_request:NextRequest, { params }::Promise<{ qrCodeId:string }> },):Promise<NextResponse>::"
      ]
    ],
    "sr/app/api/trpc/[trpc]/route.ts": [
      "t",
      [
        "createContext:14:async (req:NextRequest):::",
        "handler:20:(req:NextRequest)::createContext:"
      ]
    ],
    "sr/app/auth-provider.tsx": [
      "t",
      [
        "AuthProvider:24:({ children, }:{ children::JSX.Element:getInitialSession,signOut:",
        "useAuth:71:():AuthContextType::",
        "getInitialSession:35:async ():Promise<void>::",
        "signOut:58:async ():Promise<void>::"
      ]
    ],
    "sr/app/dashboard/_components/DetailedIssueCard.tsx": [
      "t",
      [
        "getStatusColor:16:(status:IssueStatus):::",
        "getPriorityBorderColor:44:(priority:IssuePriority):::",
        "DetailedIssueCard:68:({ id, title, machineName, status, priority, hasPermission = ():getPriorityBorderColor,getStatusColor:"
      ]
    ],
    "sr/app/dashboard/_components/PrimaryAppBar.tsx": [
      "t",
      [
        "PrimaryAppBar:32:():JSX.Element::",
        "handleLogin:45:():void::",
        "handleMobileDrawerToggle:49:():void::"
      ]
    ],
    "sr/app/dashboard/_components/SecondaryHeader.tsx": [
      "t",
      ["SecondaryHeader:11:():JSX.Element::"]
    ],
    "sr/app/dashboard/layout.tsx": [
      "t",
      ["DashboardLayout:9:({ children, }:{ children::JSX.Element::"]
    ],
    "sr/app/dashboard/page.tsx": ["t", ["DashboardPage:22:():JSX.Element::"]],
    "sr/app/games/[id]/page.tsx": [
      "t",
      ["GamePage:9:async ({ params, }:GamePageProps):::"]
    ],
    "sr/app/games/page.tsx": ["t", ["GamesPage:3:():never::"]],
    "sr/app/issues/[issueId]/page.tsx": [
      "t",
      [
        "generateMetadata:15:async ({ params, }:IssuePageProps):::",
        "IssuePage:39:async ({ params, }:IssuePageProps):::"
      ]
    ],
    "sr/app/issues/create/page.tsx": [
      "t",
      ["CreateIssuePage:28:async ({ searchParams, }:CreateIssuePageProps):::"]
    ],
    "sr/app/issues/page.tsx": [
      "t",
      [
        "IssuesPage:10:async ({ searchParams, }:{ searchParams::Promise<React.JSX.Element>::"
      ]
    ],
    "sr/app/layout.tsx": [
      "t",
      ["RootLayout:9:({ children, }:{ children::JSX.Element::"]
    ],
    "sr/app/locations/[id]/page.tsx": [
      "t",
      [
        "generateMetadata:15:async ({ params, }:LocationPageProps):::",
        "LocationPage:39:async ({ params, }:LocationPageProps):::"
      ]
    ],
    "sr/app/locations/page.tsx": [
      "t",
      ["LocationsPage:21:async ():Promise<React.JSX.Element>::"]
    ],
    "sr/app/machines/[id]/page.tsx": [
      "t",
      [
        "generateMetadata:18:async ({ params, }:MachinePageProps):::",
        "MachinePage:44:async ({ params, }:MachinePageProps):::"
      ]
    ],
    "sr/app/machines/components/MachineCard.tsx": [
      "t",
      [
        "MachineCard:20:({ machine }:MachineCardProps):::",
        "handleClick:24:():void::"
      ]
    ],
    "sr/app/machines/components/MachineList.tsx": [
      "t",
      ["MachineList:10:():React.ReactElement::"]
    ],
    "sr/app/machines/page.tsx": [
      "t",
      ["MachinesPage:10:():React.ReactElement::"]
    ],
    "sr/app/page.tsx": ["t", ["HomePage:24:():React.ReactNode::"]],
    "sr/app/profile/page.tsx": [
      "t",
      [
        "SignOutButton:45:():JSX.Element::",
        "ProfilePage:69:():JSX.Element::",
        "handleSignOut:48:async ():Promise<void>::",
        "handleEditProfile:110:():void::",
        "handleSaveProfile:118:():void::",
        "handleUploadSuccess:125:():void::"
      ]
    ],
    "sr/app/providers.tsx": [
      "t",
      ["Providers:13:({ children, }:{ children::JSX.Element::"]
    ],
    "sr/app/settings/layout.tsx": [
      "t",
      ["SettingsLayout:15:({ children, }:SettingsLayoutProps):::"]
    ],
    "sr/app/settings/page.tsx": ["t", ["SettingsPage:57:():ReactElement::"]],
    "sr/app/settings/roles/_components/RoleDialog.tsx": [
      "t",
      ["RoleDialog:20:({ open, onClose, mode, roleId, }:RoleDialogProps):::"]
    ],
    "sr/app/settings/roles/_components/RoleTable.tsx": [
      "t",
      ["RoleTable:30:():ReactElement::"]
    ],
    "sr/app/settings/roles/page.tsx": ["t", ["RolesPage:13:():ReactElement::"]],
    "sr/app/settings/users/_components/InviteUserDialog.tsx": [
      "t",
      ["InviteUserDialog:18:({ open, onClose, }:InviteUserDialogProps):::"]
    ],
    "sr/app/settings/users/_components/UserTable.tsx": [
      "t",
      ["UserTable:30:():ReactElement::", "handleEditUser:45:(userId:string):::"]
    ],
    "sr/app/settings/users/page.tsx": ["t", ["UsersPage:13:():ReactElement::"]],
    "sr/app/sign-in/page.tsx": [
      "t",
      [
        "SignInPage:31:():React.ReactElement | null::",
        "fetchTestUsers:49:async ():Promise<void>::",
        "handleGoogleSignIn:74:async ():Promise<void>::",
        "handleDevLogin:94:async (email:string):::",
        "getRoleColor:132:(role:Role | null,):::"
      ]
    ],
    "sr/components/issues/ActiveFilters.tsx": [
      "t",
      [
        "ActiveFilters:26:({ filters, onFiltersChange, onClearAll, }:ActiveFiltersProps)::getLocationName,getMachineName,getStatusNames,getUserName:",
        "getLocationName:38:(id:string):::",
        "getMachineName:45:(id:string):::",
        "getStatusNames:55:(ids:string[]):::",
        "getUserName:67:(id:string):::"
      ]
    ],
    "sr/components/issues/AdvancedFiltersDropdown.tsx": [
      "t",
      [
        "AdvancedFiltersDropdown:29:({ assigneeId, reporterId, ownerId, onAssigneeChange, onReporterChange, onOwnerChange, }:AdvancedFiltersDropdownProps):::",
        "handleClick:42:(event:React.MouseEvent<HTMLButtonElement>):::",
        "handleClose:46:():void::",
        "handleAssigneeChange:50:(event:SelectChangeEvent):::",
        "handleReporterChange:54:(event:SelectChangeEvent):::",
        "handleOwnerChange:58:(event:SelectChangeEvent):::"
      ]
    ],
    "sr/components/issues/FilterToolbar.tsx": [
      "t",
      [
        "FilterToolbar:43:({ filters, onFiltersChange, isLoading = false, }:FilterToolbarProps):::",
        "handleSortOrderToggle:53:():void::"
      ]
    ],
    "sr/components/issues/GameFilterDropdown.tsx": [
      "t",
      [
        "GameFilterDropdown:27:({ value, onChange, label = \"Machine/Game\", }:GameFilterDropdownProps):::",
        "handleChange:64:(event:SelectChangeEvent):::"
      ]
    ],
    "sr/components/issues/IssueActions.tsx": [
      "t",
      [
        "IssueActions:37:({ issue, user, hasPermission, onError, }:IssueActionsProps):::",
        "handleEditSave:79:():void::",
        "handleClose:87:():void::",
        "handleAssignToSelf:91:():void::",
        "handleMenuOpen:100:(event:React.MouseEvent<HTMLElement>)::",
        "handleMenuClose:104:()::"
      ]
    ],
    "sr/components/issues/IssueComments.tsx": [
      "t",
      [
        "IssueComments:28:({ issue, user:_user, hasPermission, onError, }::React.JSX.Element::",
        "handleSubmitComment:52:():void::"
      ]
    ],
    "sr/components/issues/IssueCreateForm.tsx": [
      "t",
      [
        "IssueCreateForm:51:({ user:_user, initialMachineId, onMachineChange, }::React.JSX.Element::",
        "handleMachineChange:89:(machineId:string | null):::",
        "handleSubmit:94:async (e:React.FormEvent):::"
      ]
    ],
    "sr/components/issues/IssueCreateView.tsx": [
      "t",
      [
        "IssueCreateView:16:({ user, initialMachineId, }:IssueCreateViewProps):::"
      ]
    ],
    "sr/components/issues/IssueDetail.tsx": [
      "t",
      ["IssueDetail:15:({ issue, user, }:IssueDetailProps):::"]
    ],
    "sr/components/issues/IssueDetailView.tsx": [
      "t",
      [
        "IssueDetailView:36:({ issue:initialIssue, user, issueId, }::React.JSX.Element::"
      ]
    ],
    "sr/components/issues/IssueList.tsx": [
      "t",
      [
        "IssueList:74:({ initialFilters, }:IssueListProps):::",
        "getStatusColor:51:(category:\"NEW\" | \"IN_PROGRESS\" | \"RESOLVED\",):::",
        "updateFilters:96:(newFilters:Partial<IssueFilters>):::",
        "handleSelectIssue:106:(issueId:string, selected::void::",
        "handleSelectAll:110:(selected:boolean):::",
        "handleClearAllFilters:137:():void::"
      ]
    ],
    "sr/components/issues/IssueStatusControl.tsx": [
      "t",
      [
        "IssueStatusControl:32:({ issue, user:_user, hasPermission, onError, }::React.JSX.Element:handleStatusChange:",
        "handleStatusChange:60:(newStatusId:string):::"
      ]
    ],
    "sr/components/issues/IssueTimeline.tsx": [
      "t",
      [
        "IssueTimeline:21:({ issue, user:_user, }::React.JSX.Element:getActivityColor,getActivityIcon:",
        "getActivityIcon:69:(type:string):::",
        "getActivityColor:86:(type:string,):::"
      ]
    ],
    "sr/components/issues/MachineSelector.tsx": [
      "t",
      [
        "MachineSelector:31:({ value, onChange, required = false, }:MachineSelectorProps):::"
      ]
    ],
    "sr/components/issues/RecentIssuesSidebar.tsx": [
      "t",
      [
        "RecentIssuesSidebar:27:({ selectedMachineId, user:_user, }::React.JSX.Element::"
      ]
    ],
    "sr/components/issues/SearchTextField.tsx": [
      "t",
      [
        "SearchTextField:15:({ value, onChange, placeholder = \"Search issues...\", label = \"Search\", debounceMs = 300, }:SearchTextFieldProps):::"
      ]
    ],
    "sr/components/issues/StatusCategoryMultiSelect.tsx": [
      "t",
      [
        "StatusCategoryMultiSelect:35:({ value, onChange, label = \"Status & Category\", }:StatusCategoryMultiSelectProps)::getGroupLabel:",
        "getGroupLabel:22:(category:string):::"
      ]
    ],
    "sr/components/issues/StatusTogglePills.tsx": [
      "t",
      [
        "StatusTogglePills:58:({ value, onChange, showCounts = true, parentLoading = false, }:StatusTogglePillsProps):::",
        "getStatusColor:28:(category:\"NEW\" | \"IN_PROGRESS\" | \"RESOLVED\",)::string;\n  color:string;\n}::",
        "getCategoryLabel:45:(category:\"NEW\" | \"IN_PROGRESS\" | \"RESOLVED\",):::",
        "handleCategoryToggle:112:(category:\"NEW\" | \"IN_PROGRESS\" | \"RESOLVED\",):::",
        "isCategoryActive:136:(category:\"NEW\" | \"IN_PROGRESS\" | \"RESOLVED\",):::",
        "isCategoryFullySelected:148:(category:\"NEW\" | \"IN_PROGRESS\" | \"RESOLVED\",):::"
      ]
    ],
    "sr/components/locations/LocationDetailView.tsx": [
      "t",
      [
        "LocationDetailView:31:({ location, user:_user, locationId, }::React.ReactElement::"
      ]
    ],
    "sr/components/locations/LocationList.tsx": [
      "t",
      [
        "LocationList:26:({ locations, user:_user, }::React.ReactElement:handleLocationClick:",
        "handleLocationClick:32:(locationId:string):::"
      ]
    ],
    "sr/components/locations/MachineGrid.tsx": [
      "t",
      [
        "MachineGrid:27:({ machines, }:MachineGridProps):::",
        "handleMachineClick:51:(machineId:string):::"
      ]
    ],
    "sr/components/machines/MachineDetailView.tsx": [
      "t",
      [
        "MachineDetailView:37:({ machine, user:_user, machineId, }::React.ReactElement::"
      ]
    ],
    "sr/components/permissions/PermissionButton.tsx": [
      "t",
      [
        "getDefaultTooltipText:36:(permission:string):::",
        "PermissionButton:92:({ permission, hasPermission, tooltipText, showWhenDenied = true, disabled:customDisabled = false, children, ...buttonProps }, ref,)::"
      ]
    ],
    "sr/components/permissions/PermissionGate.tsx": [
      "t",
      [
        "PermissionGate:52:({ permission, hasPermission, fallback, children, showFallback = false, }:PermissionGateProps):::"
      ]
    ],
    "sr/components/profile/ProfilePictureUpload.tsx": [
      "t",
      [
        "ProfilePictureUpload:30:({ currentUser, onUploadSuccess, size = \"large\", }:ProfilePictureUploadProps):::",
        "handleFileSelect:54:async (file:File):::",
        "handleDrop:81:(e:React.DragEvent)::handleFileSelect:",
        "handleDragOver:91:(e:React.DragEvent):::",
        "handleDragLeave:96:():void::",
        "handleFileInputChange:100:(e:React.ChangeEvent<HTMLInputElement>,)::handleFileSelect:",
        "openFileDialog:109:():void::"
      ]
    ],
    "sr/components/ui/Breadcrumbs.tsx": [
      "t",
      ["Breadcrumbs:11:():ReactElement::"]
    ],
    "sr/components/ui/UserAvatar.tsx": [
      "t",
      [
        "UserAvatar:26:({ user, size = \"medium\", clickable = false, showTooltip = true, onClick, }:UserAvatarProps):::"
      ]
    ],
    "sr/contexts/PermissionDepsContext.tsx": [
      "t",
      [
        "usePermissionDependencies:35:():PermissionDependencies::",
        "PermissionDepsProvider:65:({ children, authHook, membershipQuery, }:{ children::typeof useAuth; membershipQuery:typeof api.user.getCurrentMembership.useQuery; }):ReactElement::",
        "mockSessionHook:57:()::",
        "mockMembershipQuery:58:()::"
      ]
    ],
    "sr/env.js": ["j", ["getEnvironmentType:9:()::"]],
    "sr/hooks/usePermissions.ts": [
      "t",
      [
        "MyComponent:45:():usePermissions:",
        "IssueActions:61:({ issue }):usePermissions:",
        "usePermissions:89:():UsePermissionsReturn::",
        "AdminPanel:155:():useRequiredPermission:",
        "useRequiredPermission:164:(permission:string, redirectTo = \"/\",):::",
        "ActionButton:199:():usePermissionTooltip,usePermissions:",
        "usePermissionTooltip:213:(permission:string):::"
      ]
    ],
    "sr/lib/auth/dev-auth-server.ts": [
      "t",
      [
        "isValidDevEmail:40:(email:string):::",
        "createDevUserAction:48:async (userData:DevUserData,)::isValidDevEmail:"
      ]
    ],
    "sr/lib/auth/dev-auth.ts": [
      "t",
      [
        "isValidDevEmail:54:(email:string):::",
        "signInDevUser:63:async (clientSupabase:SupabaseClient, email::Promise<DevAuthResult>::",
        "authenticateDevUser:101:async (clientSupabase:SupabaseClient, userData::Promise<DevAuthResult>:isValidDevEmail,signInDevUser:",
        "getAuthResultMessage:171:(result:DevAuthResult):::",
        "isDevAuthAvailable:191:():boolean::",
        "getDevAuthStrategy:198:():\"immediate\" | \"unavailable\"::"
      ]
    ],
    "sr/lib/comments/accessValidation.ts": [
      "t",
      [
        "validateCommentContent:74:(content:string):::",
        "validateCommentCreationInput:96:(input:CommentCreationInput,)::validateCommentContent:",
        "validateCommentEditInput:120:(input:CommentEditInput,)::validateCommentContent:",
        "validateCommentAccess:144:(issue:IssueReference | null, context::ValidationResult<IssueReference>::",
        "validateCommentEditPermissions:181:(comment:CommentWithIssue | null, context::ValidationResult<CommentWithIssue>::",
        "validateCommentDeletePermissions:234:(comment:CommentWithIssue | null, context::ValidationResult<CommentWithIssue>::",
        "buildCommentCreationData:291:(input:CommentCreationInput, context::ValidationResult<::",
        "buildCommentEditData:313:(input:CommentEditInput,):::",
        "validateCompleteCommentCreation:330:(input:CommentCreationInput, issue::CommentAccessContext,):ValidationResult<::",
        "validateCompleteCommentEdit:398:(input:CommentEditInput, comment::CommentAccessContext,):ValidationResult<::",
        "isCommentAuthor:468:(comment:CommentWithIssue, userId::boolean::",
        "isCommentDeleted:479:(comment:CommentWithIssue):::",
        "getCommentAgeInMinutes:487:(comment:CommentWithIssue):::",
        "canEditCommentByTime:497:(comment:CommentWithIssue, maxEditMinutes = DEFAULT_COMMENT_EDIT_MINUTES,)::getCommentAgeInMinutes:",
        "validateCommentEditWithTimeLimit:508:(comment:CommentWithIssue | null, context::ValidationResult<CommentWithIssue>:canEditCommentByTime,validateCommentEditPermissions:"
      ]
    ],
    "sr/lib/common/__tests__/inputValidation.test.ts": [
      "t",
      [
        "expectZodError:75:(result:any, expectedMessage?::void::",
        "expectZodSuccess:82:(result:any, expectedData?::void::"
      ]
    ],
    "sr/lib/common/inputValidation.ts": [
      "t",
      [
        "createEntityIdSchema:376:(entityName:string,):::",
        "createNamedEntityCreationSchema:389:(requireName = true,):z.ZodObject<::",
        "createNamedEntityUpdateSchema:403:():z.ZodObject<::",
        "validateNonEmptyStringArray:417:(array:unknown, fieldName::string[]::",
        "validateAndNormalizeSearchQuery:444:(query:unknown,):::",
        "validateOptionalString:472:(value:unknown, fieldName::string | undefined::"
      ]
    ],
    "sr/lib/common/organizationValidation.ts": [
      "t",
      [
        "validateResourceOrganizationBoundary:61:(input:ResourceOwnershipInput,):::",
        "validateOrganizationMembership:85:(input:MembershipValidationInput,):::",
        "validateCrossOrganizationAccess:119:(input:CrossOrganizationAccessInput,):::",
        "validateOrganizationId:136:(organizationId:string,):::",
        "validateUserId:177:(userId:string):::",
        "validateCompleteOrganizationBoundary:206:(resourceId:string, resourceOrganizationId::OrganizationMembership | null, userId:string, expectedOrganizationId:string, resourceType:string,):ValidationResult<::",
        "validateIssueOrganizationBoundary:295:(issueId:string, issueOrganizationId::string,):ValidationResult:validateResourceOrganizationBoundary:",
        "validateMachineOrganizationBoundary:312:(machineId:string, machineOrganizationId::string,):ValidationResult:validateResourceOrganizationBoundary:",
        "validateLocationOrganizationBoundary:329:(locationId:string, locationOrganizationId::string,):ValidationResult:validateResourceOrganizationBoundary:",
        "validateCommentOrganizationBoundary:346:(commentId:string, parentIssueOrganizationId::string,):ValidationResult:validateResourceOrganizationBoundary:",
        "isSameOrganization:367:(orgId1:string, orgId2::boolean::",
        "extractOrganizationId:375:(resource:| { readonly organizationId::{ readonly organizationId:string } } | { readonly issue:{ readonly organizationId:string } } | null,):string | null::",
        "createOrganizationBoundaryError:405:(resourceType:string, includeSecurityContext = false,):::",
        "validatePublicOrganizationContext:451:(organization:OrganizationContextPublic | null | undefined,):::",
        "createOrganizationScope:469:(organizationId:string):::",
        "validateRouterEntityOwnership:494:(entity:EntityWithOrganizationId | null | undefined, expectedOrganizationId::string, customErrorMessage?:string,):RouterValidationResult::",
        "createEntityQuery:523:(entityId:string, organizationId::::",
        "createEntityUpdateQuery:544:(entityId:string, organizationId::::",
        "createEntityDeleteQuery:565:(entityId:string, organizationId::::",
        "validateEntityExistsAndOwned:594:(entity:T | null | undefined, organizationId::string, customErrorMessage?:string,):T:validateRouterEntityOwnership:",
        "validatePublicOrganizationContextRequired:630:(organization:OrganizationContextPublic | null | undefined,)::validatePublicOrganizationContext:",
        "validateRelatedEntitiesOwnership:661:(entities:readonly RelatedEntityCheck[], expectedOrganizationId::RouterValidationResult::",
        "validateMultipleEntityOwnership:686:(entities:readonly (EntityWithOrganizationId | null | undefined)::"
      ]
    ],
    "sr/lib/env-loaders/development.ts": [
      "t",
      ["loadDevelopmentEnvironment:19:():void::"]
    ],
    "sr/lib/env-loaders/production.ts": [
      "t",
      ["loadProductionEnvironment:18:():void::"]
    ],
    "sr/lib/environment-client.ts": [
      "t",
      [
        "getClientEnvironment:17:():| \"development\"\n  | \"production\"\n  | \"preview\"\n  | \"test\"::",
        "isDevelopment:54:():boolean::",
        "isProduction:61:():boolean::",
        "isTest:69:():boolean::",
        "isPreview:88:():boolean::",
        "isDevelopmentOrTest:96:():boolean::",
        "isDevelopmentOrPreview:104:():boolean::",
        "getEnvironmentName:111:():string::",
        "shouldEnableDevFeatures:120:():boolean::",
        "isDevAuthAvailable:128:():boolean::"
      ]
    ],
    "sr/lib/environment.ts": [
      "t",
      [
        "isDevelopment:17:():boolean::",
        "isPreview:25:():boolean::",
        "isProduction:32:():boolean::",
        "isDevelopmentOrPreview:40:():boolean::",
        "getEnvironmentName:47:():string::",
        "shouldEnableDevFeatures:59:():boolean::",
        "shouldEnableCredentialsProvider:73:():boolean::",
        "shouldEnableTestLogin:86:():boolean::",
        "shouldEnableDemoLogin:94:():boolean::",
        "shouldRequireGoogleOAuth:102:():boolean::"
      ]
    ],
    "sr/lib/external/pinballmapTransformer.ts": [
      "t",
      [
        "transformPinballMapMachineToModel:48:(pmMachine:PinballMapMachine,):::",
        "getModelLookupStrategy:83:(pmMachine:PinballMapMachine,):::",
        "validatePinballMapMachine:105:(pmMachine:unknown):::",
        "findMatchingMachine:171:(modelId:string, currentMachines::string; modelId:string }[],):MachineMatchResult::",
        "calculateSyncOperations:188:(pinballMapMachines:PinballMapMachine[], currentMachines::string; modelId:string }[], foundModels:Map<string, { id:string; name:string }>, // pmMachine.opdb_id>model):::",
        "generateMachineName:239:(modelName:string, instanceNumber?::string::",
        "isValidUrl:253:(urlString:string):::",
        "prepareMachineCreateData:266:(modelId:string, organizationId::string, modelName:string,):::"
      ]
    ],
    "sr/lib/hooks/use-current-user.ts": ["t", ["useCurrentUser:10:():::"]],
    "sr/lib/image-storage/local-storage.ts": [
      "t",
      {
        "LocalImageStorage": [
          "9",
          [
            "constructor:12:()::",
            "validateImage:23:(file:File, constraints = IMAGE_CONSTRAINTS):boolean::",
            "deleteImage:69:async (imagePath:string):Promise<void>::",
            "getImageUrl:79:(imagePath:string):string::",
            "uploadIssueAttachment:91:async (file:File, issueId:string):Promise<string>::",
            "validateIssueAttachment:94:(file:File):boolean::",
            "uploadQRCode:100:async (buffer:Buffer, relativePath:string):Promise<string>::",
            "uploadProfilePicture:117:async (file:File, userId:string):Promise<string>::",
            "validateProfilePicture:124:(file:File):boolean::",
            "uploadOrganizationLogo:130:async (file:File, subdomain:string):Promise<string>::",
            "__init__:12:()::"
          ]
        ]
      }
    ],
    "sr/lib/issues/assignmentValidation.ts": [
      "t",
      [
        "validateIssueAssignment:132:(input:IssueAssignmentInput, issue::Membership | null, context:AssignmentValidationContext,):AssignmentValidationResult:validateAssigneeMembership,validateAssignmentRules,validateIssueOrganizationBoundary:",
        "validateIssueCreation:204:(input:IssueCreationInput, machine::IssueStatus | null, defaultPriority:Priority | null, context:AssignmentValidationContext,):AssignmentValidationResult:validateDefaultPriority,validateDefaultStatus,validateIssueCreationRules,validateMachineOrganizationBoundary:",
        "validateIssueOrganizationBoundary:275:(issue:Issue | null, expectedOrganizationId::IssueValidationResult::",
        "validateMachineOrganizationBoundary:306:(machine:Machine | null, expectedOrganizationId::MachineValidationResult::",
        "validateAssigneeMembership:337:(membership:Membership | null, expectedUserId::string,):AssignmentValidationResult::",
        "validateAssignmentRules:375:(issue:Issue, assigneeMembership::AssignmentValidationContext,):AssignmentValidationResult::",
        "validateIssueCreationRules:396:(input:IssueCreationInput, _machine::AssignmentValidationContext,):AssignmentValidationResult::",
        "validateDefaultStatus:433:(status:IssueStatus | null, organizationId::DefaultResourceValidationResult::",
        "validateDefaultPriority:470:(priority:Priority | null, organizationId::DefaultResourceValidationResult::",
        "isAssignmentChange:511:(currentAssigneeId:string | null, newAssigneeId::::",
        "getAssignmentChangeEffects:537:(currentAssigneeId:string | null, newAssigneeId::::",
        "validateBatchAssignments:576:(operations:readonly { readonly type::string; readonly userId?:string; }[], issues:readonly Issue[], memberships:readonly Membership[], context:AssignmentValidationContext,):AssignmentValidationResult:validateAssigneeMembership,validateIssueOrganizationBoundary:"
      ]
    ],
    "sr/lib/issues/creationValidation.ts": [
      "t",
      [
        "validateMachineOwnership:65:(input:MachineOwnershipInput,):::",
        "validateIssueCreationInput:89:(input:PublicIssueCreationInput | AuthenticatedIssueCreationInput,):::",
        "buildIssueCreationData:138:(input:PublicIssueCreationInput | AuthenticatedIssueCreationInput, defaults::IssueCreationContext,):ValidationResult<::",
        "validateIssueCreationDefaults:193:(status:{ readonly id::string } | null, priority:{ readonly id:string; readonly name:string } | null,):ValidationResult<IssueCreationDefaults>::",
        "validateCompleteIssueCreation:224:(input:PublicIssueCreationInput | AuthenticatedIssueCreationInput, machine::{ readonly id:string; readonly name:string } | null, priority:{ readonly id:string; readonly name:string } | null, context:IssueCreationContext,):ValidationResult<::",
        "getIssueCreationNotificationEffects:315:(issueType:\"public\" | \"authenticated\", machineId::::"
      ]
    ],
    "sr/lib/issues/filterUtils.ts": [
      "t",
      [
        "getDefaultFilters:21:():IssueFilters::",
        "mergeFilters:32:(currentFilters:IssueFilters, updates::IssueFilters::",
        "validateFilters:74:(filters:Partial<IssueFilters>)::getDefaultFilters,isValidSortField,isValidSortOrder:",
        "hasActiveFilters:99:(filters:IssueFilters):::",
        "clearAllFilters:114:():IssueFilters::",
        "isValidSortField:121:(value:unknown):::",
        "isValidSortOrder:128:(value:unknown):::",
        "getFilterSummary:135:(filters:IssueFilters):::"
      ]
    ],
    "sr/lib/issues/selectionUtils.ts": [
      "t",
      [
        "toggleSelection:10:(currentSelection:string[], itemId::boolean,):string[]::",
        "selectAll:29:(itemIds:string[]):::",
        "selectNone:36:():string[]::",
        "isSelected:43:(selection:string[], itemId::boolean::",
        "isAllSelected:50:(selection:string[], availableIds::boolean::",
        "isSomeSelected:61:(selection:string[], availableIds::boolean::",
        "getSelectedCount:75:(selection:string[], availableIds::number::",
        "getSelectionSummary:85:(selection:string[], availableIds::string:getSelectedCount:",
        "filterValidSelection:104:(selection:string[], availableIds::string[]::",
        "toggleSelectAll:115:(currentSelection:string[], availableIds::string[]:isAllSelected,selectAll,selectNone:",
        "getStaleSelections:127:(selection:string[], availableIds::string[]::",
        "batchToggleSelection:137:(currentSelection:string[], operations::string; selected:boolean }[],):string[]:toggleSelection:"
      ]
    ],
    "sr/lib/issues/statusValidation.ts": [
      "t",
      [
        "validateStatusTransition:46:(input:StatusTransitionInput, newStatus::StatusValidationContext,):StatusValidationResult:validateOrganizationBoundary,validateTransitionRules,validateUserPermissions:",
        "validateOrganizationBoundary:93:(currentStatus:IssueStatus, newStatus::string,):StatusValidationResult::",
        "validateUserPermissions:122:(currentStatus:IssueStatus, newStatus::readonly string[],):StatusValidationResult:getTransitionType:",
        "validateTransitionRules:158:(currentStatus:IssueStatus, newStatus::StatusValidationResult:getTransitionType:",
        "getTransitionType:193:(currentStatus:IssueStatus, newStatus::\"progress\" | \"regress\" | \"reopen\" | \"same_category\"::",
        "validateStatusLookup:232:(_statusId:string, _organizationId::IssueStatus | null,):StatusLookupResult::",
        "getValidStatusTransitions:258:(currentStatus:IssueStatus, availableStatuses::StatusValidationContext,):readonly IssueStatus[]:validateStatusTransition:",
        "getStatusChangeEffects:281:(currentStatus:IssueStatus, newStatus::::"
      ]
    ],
    "sr/lib/issues/urlUtils.ts": [
      "t",
      [
        "filtersToUrlParams:12:(filters:IssueFilters):::",
        "urlParamsToFilters:37:(params:URLSearchParams,)::isValidSortBy,isValidSortOrder:",
        "createFilteredUrl:85:(basePath:string, filters::string::",
        "hasValidFilterParams:115:(params:URLSearchParams):::",
        "sanitizeUrlParams:140:(params:URLSearchParams):::",
        "isValidSortBy:167:(value:string | null,):::",
        "isValidSortOrder:176:(value:string | null):::",
        "urlParamsEqual:183:(params1:URLSearchParams, params2::boolean::"
      ]
    ],
    "sr/lib/logger.ts": [
      "t",
      [
        "isErrorObject:11:(obj:unknown,):::",
        "hasCodeAndMessage:17:(error:Record<string, unknown>,):::",
        "createLogger:33:():pino.Logger | LoggerInterface::",
        "createFallbackLogger:118:(context:object = {})::createFallbackLogger,mergeContext:",
        "mergeContext:120:(obj:object):::",
        "createDualChildLogger:144:(mainChild:LoggerInterface, fileChild?::LoggerInterface:createDualChildLogger:"
      ]
    ],
    "sr/lib/opdb/client.ts": [
      "t",
      {
        "OPDBClient": [
          "20",
          [
            "constructor:28:(apiToken?:string, baseUrl?:string)::",
            "searchMachines:152:async (query:string):Promise<OPDBSearchResult[]>::",
            "getMachineById:177:async (opdbId:string):Promise<OPDBMachineDetails | null>::",
            "getMachinesByIds:201:async (opdbIds:string[]):Promise<OPDBMachineDetails[]>::",
            "exportMachines:222:async (page = 1, perPage = 100):Promise<OPDBMachine[]>::",
            "getMachinesByGroupId:245:async (groupId:string):Promise<OPDBMachine[]>::",
            "clearCache:265:():void::",
            "getCacheStats:272:():::",
            "validateConnection:282:async ():Promise<boolean>::",
            "__init__:28:(apiToken?:string, baseUrl?:string)::"
          ]
        ]
      }
    ],
    "sr/lib/opdb/utils.ts": [
      "t",
      [
        "parseOPDBId:15:(opdbId:string):::",
        "isValidOPDBId:32:(opdbId:string)::parseOPDBId:",
        "getGroupIdFromOPDBId:39:(opdbId:string)::parseOPDBId:",
        "buildOPDBId:47:(groupId:string, machineId?::string,):string::",
        "getPreferredImageUrl:66:(machine:OPDBMachine):::",
        "formatMachineName:93:(machine:OPDBMachine)::getManufacturerName,getYearValue:",
        "normalizeDescription:141:(description?:string):::",
        "generateCacheKey:151:(endpoint:string, params::string::",
        "isDataStale:167:(lastSynced:Date | null, maxAgeHours = 24,):::",
        "getManufacturerName:97:(manufacturer:unknown):::",
        "getYearValue:107:(machine:OPDBMachine):::"
      ]
    ],
    "sr/lib/permissions/descriptions.ts": [
      "t",
      ["getPermissionDescription:45:(permission:string):::"]
    ],
    "sr/lib/pinballmap/client.ts": [
      "t",
      [
        "fetchLocationDetails:95:(locationId:number,):::",
        "fetchLocationMachineDetails:100:(locationId:number,):::"
      ],
      {
        "PinballMapError": [
          "13",
          [
            "__init__:14:(message:string, public statusCode?:number, public response?:unknown,)::"
          ]
        ],
        "PinballMapClient": [
          "24",
          [
            "constructor:26:(baseUrl:string = API_BASE_URL)::",
            "fetchLocationDetails:34:async (locationId:number):Promise<PinballMapLocation>::",
            "__init__:26:(baseUrl:string = API_BASE_URL)::"
          ]
        ]
      }
    ],
    "sr/lib/supabase/client.ts": [
      "t",
      [
        "createClient:18:():SupabaseClient::",
        "getClient:44:():SupabaseClient::"
      ]
    ],
    "sr/lib/supabase/errors.ts": [
      "t",
      [
        "createAuthenticationError:134:(reason?:string, originalError?::AuthenticationError::",
        "createSessionError:148:(context:string, details?::Error,):InvalidSessionError::",
        "createOrganizationError:163:(context:string, originalError?::MissingOrganizationError::",
        "createJWTError:174:(operation:string, details?::Error,):InvalidJWTError::",
        "createNetworkError:189:(operation:string, originalError?::NetworkError::",
        "createConfigurationError:200:(component:string, issue::Error,):ConfigurationError::",
        "isSupabaseError:215:(error:unknown):::",
        "isAuthenticationError:219:(error:unknown,):::",
        "isSessionExpiredError:225:(error:unknown,):::",
        "isInvalidSessionError:231:(error:unknown,):::",
        "isMissingOrganizationError:237:(error:unknown,):::",
        "isInvalidJWTError:243:(error:unknown):::",
        "isNetworkError:247:(error:unknown):::",
        "isConfigurationError:251:(error:unknown,):::"
      ],
      {
        "with": [
          "12",
          [
            "constructor:21:(type:AuthErrorType, message:string, originalError?:Error)::",
            "__init__:21:(type:AuthErrorType, message:string, originalError?:Error)::"
          ]
        ],
        "to": [
          "14",
          [
            "constructor:21:(type:AuthErrorType, message:string, originalError?:Error)::",
            "__init__:21:(type:AuthErrorType, message:string, originalError?:Error)::"
          ]
        ],
        "SupabaseError": [
          "18",
          [
            "constructor:21:(type:AuthErrorType, message:string, originalError?:Error)::",
            "__init__:21:(type:AuthErrorType, message:string, originalError?:Error)::"
          ]
        ],
        "AuthenticationError": [
          "72",
          [
            "constructor:73:(message:string, originalError?:Error)::",
            "__init__:73:(message:string, originalError?:Error)::"
          ]
        ],
        "SessionExpiredError": [
          "79",
          [
            "constructor:80:(message = \"Session has expired\", originalError?:Error)::",
            "__init__:80:(message = \"Session has expired\", originalError?:Error)::"
          ]
        ],
        "InvalidSessionError": [
          "86",
          [
            "constructor:87:(message:string, originalError?:Error)::",
            "__init__:87:(message:string, originalError?:Error)::"
          ]
        ],
        "MissingOrganizationError": [
          "93",
          [
            "__init__:94:(message = \"Organization context is missing or invalid\", originalError?:Error,)::"
          ]
        ],
        "InvalidJWTError": [
          "103",
          [
            "constructor:104:(message:string, originalError?:Error)::",
            "__init__:104:(message:string, originalError?:Error)::"
          ]
        ],
        "NetworkError": [
          "110",
          [
            "constructor:111:(message:string, originalError?:Error)::",
            "__init__:111:(message:string, originalError?:Error)::"
          ]
        ],
        "ConfigurationError": [
          "117",
          [
            "constructor:118:(message:string, originalError?:Error)::",
            "__init__:118:(message:string, originalError?:Error)::"
          ]
        ]
      }
    ],
    "sr/lib/supabase/multi-tenant-client.ts": [
      "t",
      [
        "createOrganizationAwareClient:63:async ():Promise<OrganizationAwareClient>::",
        "createOptionalOrganizationClient:95:async ():Promise<::",
        "hasOrganizationContext:118:(client:Awaited<ReturnType<typeof createOptionalOrganizationClient>>,):::",
        "withOrganizationClient:152:(action:(client::T):createOrganizationAwareClient:"
      ]
    ],
    "sr/lib/supabase/rls-helpers.ts": [
      "t",
      [
        "updateUserOrganization:41:async (userId:string, organizationId::Promise<void>::",
        "getUserOrganizationId:80:async (supabase?:SupabaseClient,):::",
        "getUserWithOrganization:118:async (supabase?:SupabaseClient,):::",
        "removeUserOrganization:156:async (userId:string):::",
        "hasOrganizationContext:180:(user:Awaited<ReturnType<SupabaseClient[\"auth\"][\"getUser\"]>>[\"data\"][\"user\"],):::",
        "validateOrganizationContext:198:async (supabase?:SupabaseClient,)::getUserWithOrganization:"
      ],
      {
        "OrganizationContextError": [
          "20",
          [
            "constructor:21:(message = \"User does not have organization context\")::",
            "__init__:21:(message = \"User does not have organization context\")::"
          ]
        ]
      }
    ],
    "sr/lib/supabase/server.ts": [
      "t",
      [
        "createClient:23:async ():Promise<SupabaseClient>::",
        "createAdminClient:84:async ():Promise<SupabaseClient>::",
        "getCurrentUser:144:async ():Promise<\n  Awaited<ReturnType<SupabaseClient[\"auth\"][\"getUser\"]>>[\"data\"][\"user\"]\n>::",
        "getCurrentUserOrganizationId:175:async ():Promise<string | null>::",
        "requireOrganizationContext:194:async ():Promise<::"
      ]
    ],
    "sr/lib/supabase/types.ts": [
      "t",
      [
        "isPinPointSupabaseUser:123:(user:SupabaseUser,):::",
        "isPinPointSupabaseSession:129:(session:SupabaseSession,)::isPinPointSupabaseUser:",
        "isValidOrganizationContext:135:(context:unknown,):::"
      ]
    ],
    "sr/lib/temp-production-overrides.ts": [
      "t",
      [
        "shouldForcePreviewBehavior:21:():boolean::",
        "shouldEnablePreviewAuthInProduction:29:():boolean::"
      ]
    ],
    "sr/lib/tracing.ts": [
      "t",
      [
        "generateTraceId:14:():string::",
        "generateRequestId:18:():string::",
        "getTraceContext:22:():TraceContext | undefined::",
        "createTraceContext:26:():TraceContext::"
      ]
    ],
    "sr/lib/users/roleManagementValidation.ts": [
      "t",
      [
        "validateRoleAssignment:100:(input:RoleAssignmentInput, targetRole::Membership | null, allMemberships:readonly Membership[], context:RoleManagementContext,):RoleValidationResult:validateAdminCountPreservation,validateOrganizationBoundary,validateRoleAssignmentRules,validateUserMembership:",
        "validateUserRemoval:163:(membership:Membership, allMemberships::RoleManagementContext,):RoleValidationResult:validateAdminCountForRemoval,validateUserMembership,validateUserRemovalRules:",
        "validateRoleReassignment:202:(input:RoleReassignmentInput, roleToDelete::Role | null, memberships:readonly Membership[], context:RoleManagementContext,):RoleReassignmentValidationResult:validateReassignmentRole,validateRoleDeletion:",
        "validateOrganizationBoundary:263:(role:Role, expectedOrganizationId::RoleValidationResult::",
        "validateUserMembership:280:(membership:Membership | null, organizationId::RoleValidationResult::",
        "validateAdminCountPreservation:305:(currentMembership:Membership, newRole::readonly Membership[],):AdminCountValidationResult:countAdmins:",
        "validateAdminCountForRemoval:342:(membership:Membership, allMemberships::AdminCountValidationResult:countAdmins:",
        "validateRoleAssignmentRules:370:(currentMembership:Membership, newRole::RoleManagementContext,):RoleValidationResult::",
        "validateUserRemovalRules:391:(_membership:Membership, _context::RoleValidationResult::",
        "validateRoleDeletion:403:(role:Role, _context::RoleValidationResult::",
        "validateReassignmentRole:421:(reassignRole:Role, roleToDelete::RoleManagementContext,):RoleValidationResult:validateOrganizationBoundary:",
        "countAdmins:456:(memberships:readonly Membership[]):::",
        "getAdminMembers:464:(memberships:readonly Membership[],):::",
        "isAdminRoleChange:473:(currentRole:Role, newRole::::",
        "getRoleAssignmentEffects:495:(currentMembership:Membership, newRole::readonly Membership[],):::",
        "validateBatchRoleOperations:525:(operations:readonly { readonly type::Membership; readonly newRole?:Role; }[], allMemberships:readonly Membership[], _context:RoleManagementContext,):RoleValidationResult:countAdmins:"
      ]
    ],
    "sr/lib/utils/api-response-transformers.ts": [
      "t",
      [
        "transformIssueResponse:43:(issue:Record<string, unknown>,):::",
        "transformCommentResponse:68:(comment:Record<string, unknown>,):::",
        "transformAttachmentResponse:80:(attachment:Record<string, unknown>,):::",
        "transformIssuesResponse:98:(issues:Record<string, unknown>[],)::transformIssueResponse:",
        "transformCommentsResponse:111:(comments:Record<string, unknown>[],)::transformCommentResponse:",
        "transformAttachmentsResponse:124:(attachments:Record<string, unknown>[],)::transformAttachmentResponse:",
        "transformIssueWithRelationsResponse:140:(issueWithRelations:Record<string, unknown>,):::",
        "transformCommentWithAuthorResponse:155:(commentWithAuthor:Record<string, unknown>,):::",
        "transformForDatabaseInsert:168:(data:Record<string, unknown>,):::",
        "safeTransformRelation:182:(relation:Record<string, unknown> | null | undefined, transformer::Record<string, unknown>)::"
      ]
    ],
    "sr/lib/utils/auth-response-transformers.ts": [
      "t",
      [
        "transformUserResponse:71:(user:unknown):::",
        "transformOrganizationResponse:87:(org:unknown,):::",
        "transformMembershipResponse:110:(membership:unknown,)::transformUserResponse:",
        "transformUploadAuthContextResponse:168:(ctx:unknown,)::transformMembershipResponse,transformOrganizationResponse:",
        "transformAuthUserProfile:208:(profile:unknown):::",
        "transformAuthArray:224:(items:unknown[], transformer::unknown)::",
        "transformUserArray:238:(users:unknown[])::transformAuthArray:",
        "transformMembershipArray:245:(memberships:unknown[],)::transformAuthArray:",
        "transformOrganizationArray:254:(organizations:unknown[],)::transformAuthArray:"
      ]
    ],
    "sr/lib/utils/case-transformers.ts": [
      "t",
      [
        "toCamelCase:50:(str:string):::",
        "toSnakeCase:82:(str:string):::",
        "isPlainObject:110:(obj:unknown):::",
        "transformKeysToCamelCase:176:(obj:unknown)::isPlainObject,toCamelCase,transformKeysToCamelCase:",
        "transformKeysToSnakeCase:228:(obj:unknown)::isPlainObject,toSnakeCase,transformKeysToSnakeCase:"
      ]
    ],
    "sr/lib/utils/id-generation.ts": [
      "t",
      [
        "generateId:7:():string::",
        "generatePrefixedId:25:(prefix:string)::generateId:"
      ]
    ],
    "sr/lib/utils/image-processing.ts": [
      "t",
      [
        "processImageFile:12:async (file:File,)::calculateDimensions:",
        "calculateDimensions:104:(originalWidth:number, originalHeight::number, maxHeight:number,):::",
        "processIssueImageFile:130:async (file:File,)::calculateDimensions:",
        "getDefaultAvatarUrl:222:():string::"
      ]
    ],
    "sr/lib/utils/machine-response-transformers.ts": [
      "t",
      [
        "transformMachineResponse:89:(machine:unknown):::",
        "transformMachinesResponse:115:(machines:unknown,)::transformMachineResponse:",
        "transformLocationResponse:144:(location:unknown)::transformMachinesResponse:",
        "transformLocationsResponse:182:(locations:unknown,)::transformLocationResponse:",
        "transformMachineForIssuesResponse:209:(machine:Record<string, unknown>,):::",
        "transformMachinesForIssuesResponse:222:(machines:unknown,)::transformMachineForIssuesResponse:",
        "transformApiRequestToDb:257:(data:Record<string, unknown>,):::",
        "transformDbResultToApiResponse:273:(data:unknown):::"
      ]
    ],
    "sr/lib/utils/membership-transformers.ts": [
      "t",
      [
        "transformMembershipForValidation:20:(membership:unknown,):::",
        "transformMembershipsForValidation:56:(memberships:unknown[],):::",
        "transformRoleForValidation:70:(role:unknown):::"
      ]
    ],
    "sr/server/api/routers/issue.comment.ts": [
      "t",
      [
        "createCommentWithAuthor:31:async (ctx:RLSOrganizationTRPCContext, input::string; content:string },):Promise<CommentWithAuthorResponse>::"
      ]
    ],
    "sr/server/api/routers/issue.status.ts": [
      "t",
      ["generateId:21:():string::", "isValidCategory:146:(category:string,):::"]
    ],
    "sr/server/api/routers/role.ts": [
      "t",
      [
        "createRoleService:52:(ctx:RLSOrganizationTRPCContext)::createRoleService:"
      ]
    ],
    "sr/server/api/routers/utils/commentService.ts": [
      "t",
      {
        "CommentService": [
          "34",
          [
            "constructor:35:(private drizzle:DrizzleClient)::",
            "restoreComment:81:async (commentId:string):Promise<::",
            "getDeletedComments:119:async (organizationId:string):Promise<::",
            "__init__:35:(private drizzle:DrizzleClient)::"
          ]
        ]
      }
    ],
    "sr/server/api/routers/utils/commentValidation.ts": [
      "t",
      [
        "validateCommentExists:30:(comment:CommentData | null | undefined, organizationId::ValidationResult::",
        "validateCommentDeletionPermissions:54:(comment:CommentData, context::ValidationResult::",
        "validateCommentEditPermissions:76:(comment:CommentData, context::ValidationResult::",
        "validateCommentDeletionState:94:(comment:CommentData, shouldBeDeleted::ValidationResult::",
        "validateAdminPermissions:120:(userPermissions:string[], requiredPermission = \"issue::ValidationResult::",
        "validateOrganizationMembership:137:(membership:{ id::string; organizationId:string } | null, context:ValidationContext,):ValidationResult::",
        "validateCommentDeletion:164:(comment:CommentData | null | undefined, membership::string; userId:string; organizationId:string } | null, context:ValidationContext,):ValidationResult:validateCommentDeletionPermissions,validateCommentDeletionState,validateCommentExists,validateOrganizationMembership:",
        "validateCommentRestoration:217:(comment:CommentData | null | undefined, context::ValidationResult:validateAdminPermissions,validateCommentDeletionState,validateCommentExists:",
        "validateCommentEdit:257:(comment:CommentData | null | undefined, context::ValidationResult:validateCommentDeletionState,validateCommentEditPermissions,validateCommentExists:"
      ]
    ],
    "sr/server/api/trpc.base.ts": [
      "t",
      ["createTRPCContext:122:async (opts:CreateTRPCContextOptions,):::"]
    ],
    "sr/server/api/trpc.permission.ts": [
      "t",
      [
        "supabaseUserToSession:26:(user:PinPointSupabaseUser, organizationId?::Session::"
      ]
    ],
    "sr/server/auth/permissions.ts": [
      "t",
      [
        "hasPermission:29:async (membership:{ roleId::string, db:DrizzleClient,):Promise<boolean>::",
        "requirePermission:76:async (membership:{ roleId::string, db:DrizzleClient,):Promise<void>:hasPermission:",
        "getUserPermissions:96:async (membership:{ roleId::DrizzleClient,):Promise<string[]>::",
        "hasPermissionForSession:143:async (session:Session | null, permission::DrizzleClient,):Promise<boolean>:hasPermission:",
        "requirePermissionForSession:162:async (session:Session | null, permission::DrizzleClient,):Promise<void>:requirePermission:",
        "getUserPermissionsForSession:180:async (session:Session | null, db::Promise<string[]>:getUserPermissions:",
        "getUserPermissionsForSupabaseUser:197:async (user:PinPointSupabaseUser | null, db::Promise<string[]>:getUserPermissionsForSupabaseUser:"
      ]
    ],
    "sr/server/auth/supabase.ts": [
      "t",
      ["getSupabaseUser:16:async ():Promise<PinPointSupabaseUser | null>::"]
    ],
    "sr/server/auth/types.ts": [
      "t",
      [
        "isValidUser:60:(user:unknown):::",
        "isValidOrganization:68:(org:unknown):::",
        "isValidMembership:76:(membership:unknown,):::"
      ]
    ],
    "sr/server/auth/uploadAuth.ts": [
      "t",
      [
        "transformUploadAuthContext:41:(ctx:unknown):::",
        "getUploadAuthContext:50:async (req:NextRequest, drizzle::Promise<UploadAuthContext>:transformUploadAuthContext:",
        "requireUploadPermission:120:(ctx:UploadAuthContext, permission::void::",
        "validateUploadAuth:132:(_drizzle:DrizzleClient, _sessionId?::string,):void::"
      ]
    ],
    "sr/server/auth/validation.ts": [
      "t",
      [
        "validateGoogleOAuth:20:():OAuthValidationResult::",
        "validateAllOAuthProviders:76:():OAuthValidationResult[]::",
        "validateAndLogOAuthConfig:92:():boolean::",
        "assertOAuthConfigValid:149:():void::"
      ]
    ],
    "sr/server/db/client-factory.ts": [
      "t",
      [
        "createDrizzle:14:(adapter:Sql | PGlite, loggerEnabled?::PostgresJsDatabase<typeof schema> | PgliteDatabase<typeof schema>::"
      ]
    ],
    "sr/server/db/drizzle.ts": [
      "t",
      [
        "getDatabaseConfig:19:():DatabaseConfig::",
        "createDrizzleClientInternal:52:():DrizzleClient::",
        "createDrizzleClient:171:():DrizzleClient::",
        "closeDrizzleConnection:185:async ():Promise<void>::"
      ],
      {
        "DatabaseSingleton": [
          "93",
          [
            "getClient:106:():DrizzleClient::",
            "cleanup:146:async ():Promise<void>::",
            "reset:159:():void::"
          ]
        ]
      }
    ],
    "sr/server/db/provider.ts": [
      "t",
      ["getGlobalDatabaseProvider:31:():DatabaseProvider::"],
      {
        "DatabaseProvider": [
          "7",
          [
            "getClient:11:():DrizzleClient::",
            "disconnect:17:async ():Promise<void>::",
            "reset:23:():void::"
          ]
        ]
      }
    ],
    "sr/server/db/queries/audit-queries.ts": [
      "t",
      [
        "getMembershipsWithUserAndRole:29:async (organizationId:string,):::",
        "getMachineByQrCode:67:async (qrCodeId:string):::",
        "getIssuesByStatus:98:async (organizationId:string, statusName::Promise<::",
        "getIssuesByStatus_INCORRECT:140:async (organizationId:string)::"
      ]
    ],
    "sr/server/db/seed/auth-users.ts": [
      "t",
      [
        "getUsersForOrganization:111:(organizationId:string):::",
        "getUserIdForEmail:125:(email:string):::",
        "createServiceRoleClient:143:():SupabaseClient::",
        "getExistingAuthUsers:159:async ():Promise<Map<string, User>>::",
        "upsertSupabaseAuthUser:180:async (params:CreateUserParams, existingUsers::Promise<::",
        "waitForUserRecord:239:async (user_id:string, email::Promise<boolean>::",
        "processBatchUsers:278:async (userList:UserData[], organization_id::Promise<BatchProcessResult>:getExistingAuthUsers,upsertSupabaseAuthUser,waitForUserRecord:",
        "deleteExistingDevUsers:417:async (userList:UserData[])::createServiceRoleClient:",
        "createUsersDirectly:451:async (userList:UserData[], organization_id::Promise<void>:getUserIdForEmail:",
        "seedAuthUsers:512:async (organization_id:string, target::Promise<SeedResult<UserData[]>>:createUsersDirectly,deleteExistingDevUsers,getUsersForOrganization,processBatchUsers:"
      ]
    ],
    "sr/server/db/seed/constants.ts": [
      "t",
      [
        "createMockAdminContext:316:():TestMockContext::",
        "createMockMemberContext:323:(memberNumber:1 | 2 = 1,):::"
      ],
      {
        "for": ["357", []]
      }
    ],
    "sr/server/db/seed/full-issues.ts": [
      "t",
      [
        "mapSeverityToPriority:5:(severity?:string):::",
        "mapStatusToStatusId:15:(status?:string):::",
        "mapReporterToUserId:31:(email?:string):::",
        "knownMachineByTitle:51:(title?:string, opdb?::string | undefined::",
        "isMinimalIssue:347:(obj:unknown):::"
      ]
    ],
    "sr/server/db/seed/index.ts": ["t", ["main:42:async ():Promise<void>::"]],
    "sr/server/db/seed/infrastructure.ts": [
      "t",
      [
        "getDefaultLocationId:100:(orgId:string):::",
        "createGlobalPermissions:114:async ():Promise<void>::",
        "createOrganizationWithRoles:150:async (orgData:{ id?::string; subdomain:string; logoUrl?:string; }):Promise<Organization>:createSystemRoles,createTemplateRole:",
        "createDefaultPriorities:208:async (organization_id:string):::",
        "createDefaultCollectionTypes:245:async (organization_id:string,):::",
        "createDefaultIssueStatuses:283:async (organization_id:string,):::",
        "createSystemRoles:370:async (organization_id:string):::",
        "createTemplateRole:432:async (organization_id:string, templateName::Promise<void>::",
        "createDefaultLocation:481:async (organization_id:string)::getDefaultLocationId:",
        "seedInfrastructure:500:async ():Promise<\n  SeedResult<DualOrganizationSetup>\n>::"
      ]
    ],
    "sr/server/db/seed/sample-data.ts": [
      "t",
      [
        "extractUniqueGames:61:(dataAmount:DataAmount):::",
        "createModels:105:async (games:UniqueGame[]):::",
        "createMachines:158:async (organization_id:string, games::Promise<void>::",
        "createCompetitorMachine:251:async ():Promise<void>::",
        "createSampleIssues:308:async (organization_id:string, dataAmount::Promise<void>::",
        "seedSampleData:377:async (organization_id:string, dataAmount::Promise<SeedResult<SampleDataResult>>:createCompetitorMachine,createMachines,createModels,createSampleIssues,extractUniqueGames:",
        "seedSampleDataWithDb:444:async (organization_id:string, dataAmount::Promise<void>:seedSampleData:"
      ]
    ],
    "sr/server/db/seed/seed-utilities.ts": [
      "t",
      [
        "seedLoggerInfo:55:(message:string):::",
        "seedLoggerSuccess:64:(message:string):::",
        "seedLoggerError:73:(context:string, error::void::",
        "seedLoggerWarn:80:(message:string):::",
        "seedValidatorValidateTarget:111:(target:string):::",
        "seedValidatorValidateDataAmount:118:(dataAmount:string):::",
        "seedValidatorValidateEnvironment:125:(target:SeedTarget, supabaseUrl?::ValidationResult::",
        "seedValidatorValidateAll:149:(params:{ target::string; environment:string; supabaseUrl?:string; }):ValidationResult:seedValidatorValidateDataAmount,seedValidatorValidateEnvironment,seedValidatorValidateTarget:",
        "seedValidatorShowUsage:195:():void::",
        "seedMapperGetMembershipId:234:(email:string, organization_id::string::",
        "seedMapperGetPriorityId:252:(priorityName:string, organization_id::string::",
        "seedMapperGetStatusId:270:(statusName:string, organization_id::string::",
        "seedMapperGetRoleId:287:(roleName:string, organization_id::string::",
        "seedMapperGetCollectionTypeId:305:(typeName:string, organization_id::string::",
        "withErrorContext:345:async (context:string, operation::()::",
        "createSeedResult:360:(data:T, recordsCreated::number,):SeedResult<T>::",
        "createFailedSeedResult:376:(error:unknown, startTime::SeedResult<T>::",
        "confirmDestructiveOperation:450:async (target:SeedTarget,):::"
      ],
      {
        "SeedError": [
          "334",
          [
            "constructor:335:(context:string, operation:string, cause?:unknown)::",
            "__init__:335:(context:string, operation:string, cause?:unknown)::"
          ]
        ],
        "SeedConfigBuilder": [
          "393",
          [
            "withDataAmount:401:(dataAmount:DataAmount):this::",
            "withEnvironment:406:(environment:string):this::",
            "withSupabaseUrl:411:(supabaseUrl:string):this::",
            "build:416:():SeedConfig::"
          ]
        ]
      }
    ],
    "sr/server/db/setup-rls.ts": [
      "t",
      [
        "createDatabaseConnection:42:():postgres.Sql::",
        "setupRLS:63:async ():Promise<void>::",
        "main:208:async ():Promise<void>::"
      ],
      {
        "c": ["105", []]
      }
    ],
    "sr/server/db/utils/common-queries.ts": [
      "t",
      [
        "withOrganizationScope:19:(column:PgColumn, organizationId::SQL::",
        "excludeSoftDeleted:30:(deletedAtColumn:PgColumn):::",
        "withOrgScopeAndNotDeleted:40:(orgColumn:PgColumn, organizationId::PgColumn,):SQL:excludeSoftDeleted,withOrganizationScope:",
        "getSingleRecord:62:async (query:Promise<T[]>,):::",
        "getSingleRecordWithLimit:74:async (baseQuery:T,):::",
        "validateQueryFields:103:(tableName:Parameters<typeof devValidateFields>[0], fields::void::"
      ]
    ],
    "sr/server/db/utils/field-validation.ts": [
      "t",
      [
        "getFieldMapping:123:(camelCaseField:string):::",
        "isCamelCase:133:(fieldName:string):::",
        "validateFieldExists:145:(_tableName:TableName, fieldName::::",
        "convertToSnakeCase:174:(camelCase:string):::",
        "validateFieldAccess:185:(tableName:TableName, fields::::",
        "devValidateFields:202:(tableName:TableName, fields::void:validateFieldAccess:",
        "validateCommonPattern:244:(tableName:TableName, pattern::ReturnType<typeof validateFieldAccess>:validateFieldAccess:"
      ]
    ],
    "sr/server/db/utils/role-validation.ts": [
      "t",
      [
        "ensureAtLeastOneAdmin:13:async (drizzle:DrizzleClient, organizationId::Promise<void>::"
      ]
    ],
    "sr/server/services/collectionService.service.test.ts": [
      "t",
      {
        "name": ["360", []]
      }
    ],
    "sr/server/services/collectionService.ts": [
      "t",
      {
        "CollectionService": [
          "80",
          [
            "constructor:81:(private db:DrizzleClient)::",
            "getLocationCollections:87:async (locationId:string):Promise<::",
            "generateAutoCollections:313:async ():Promise<::",
            "getOrganizationCollectionTypes:566:async ():Promise<CollectionTypeWithCount[]>::",
            "__init__:81:(private db:DrizzleClient)::"
          ]
        ]
      }
    ],
    "sr/server/services/commentCleanupService.ts": [
      "t",
      {
        "CommentCleanupService": [
          "24",
          [
            "constructor:25:(private db:DrizzleClient)::",
            "cleanupOldDeletedComments:30:async ():Promise<number>::",
            "getCleanupCandidateCount:52:async ():Promise<number>::",
            "restoreComment:91:async (commentId:string):Promise<void>::",
            "getDeletedComments:106:async ():Promise<Comment[]>::",
            "__init__:25:(private db:DrizzleClient)::"
          ]
        ]
      }
    ],
    "sr/server/services/factory.ts": [
      "t",
      {
        "ensures": [
          "13",
          [
            "createNotificationService:26:():NotificationService::",
            "createCollectionService:46:():CollectionService::",
            "createPinballMapService:50:():PinballMapService::",
            "createIssueActivityService:54:():IssueActivityService::",
            "createCommentCleanupService:58:():CommentCleanupService::",
            "createQRCodeService:62:():QRCodeService::",
            "createRoleService:68:(organizationId?:string):RoleService::",
            "withOrganization:77:(organizationId:string):ServiceFactory::",
            "__init__:22:(private db:DrizzleClient, private organizationId?:string,)::"
          ]
        ],
        "ServiceFactory": [
          "21",
          [
            "createNotificationService:26:():NotificationService::",
            "createCollectionService:46:():CollectionService::",
            "createPinballMapService:50:():PinballMapService::",
            "createIssueActivityService:54:():IssueActivityService::",
            "createCommentCleanupService:58:():CommentCleanupService::",
            "createQRCodeService:62:():QRCodeService::",
            "createRoleService:68:(organizationId?:string):RoleService::",
            "withOrganization:77:(organizationId:string):ServiceFactory::",
            "__init__:22:(private db:DrizzleClient, private organizationId?:string,)::"
          ]
        ]
      }
    ],
    "sr/server/services/issueActivityService.ts": [
      "t",
      {
        "IssueActivityService": [
          "48",
          [
            "constructor:49:(private db:DrizzleClient)::",
            "recordIssueCreated:106:async (issueId:string, actorId:string):Promise<void>::",
            "recordIssueResolved:185:async (issueId:string, actorId:string):Promise<void>::",
            "getIssueTimeline:254:async (issueId:string):Promise<\n    (\n      |::",
            "__init__:49:(private db:DrizzleClient)::"
          ]
        ]
      }
    ],
    "sr/server/services/notificationService.ts": [
      "t",
      {
        "NotificationService": [
          "43",
          [
            "constructor:44:(private db:DrizzleClient)::",
            "createNotification:52:async (data:NotificationData):Promise<void>::",
            "markAsRead:229:async (notificationId:string, userId:string):Promise<void>::",
            "markAllAsRead:247:async (userId:string):Promise<void>::",
            "getUnreadCount:262:async (userId:string):Promise<number>::",
            "__init__:44:(private db:DrizzleClient)::"
          ]
        ]
      }
    ],
    "sr/server/services/permissionService.ts": [
      "t",
      {
        "PermissionService": [
          "32",
          [
            "constructor:33:(private db:DrizzleClient)::",
            "getUserPermissions:98:async (session:Session | null):Promise<string[]>::",
            "expandPermissionsWithDependencies:169:(permissions:string[]):string[]::",
            "__init__:33:(private db:DrizzleClient)::"
          ]
        ]
      }
    ],
    "sr/server/services/pinballmapService.ts": [
      "t",
      [
        "syncLocationGames:451:async (db:DrizzleClient, locationId::Promise<SyncResult>::",
        "processFixtureData:459:async (db:DrizzleClient, fixtureData::string,):Promise<::"
      ],
      {
        "PinballMapService": [
          "33",
          [
            "constructor:34:(private db:DrizzleClient)::",
            "enableIntegration:39:async (organizationId:string):Promise<void>::",
            "syncLocation:93:async (locationId:string):Promise<SyncResult>::",
            "getOrganizationSyncStatus:409:async (organizationId:string):Promise<::",
            "__init__:34:(private db:DrizzleClient)::"
          ]
        ]
      }
    ],
    "sr/server/services/qrCodeService.ts": [
      "t",
      {
        "QRCodeService": [
          "40",
          [
            "constructor:41:(private db:DrizzleClient)::",
            "generateQRCode:46:async (machineId:string):Promise<QRCodeInfo>::",
            "getQRCodeInfo:109:async (machineId:string):Promise<QRCodeInfo | null>::",
            "regenerateQRCode:142:async (machineId:string):Promise<QRCodeInfo>::",
            "generateQRCodesForOrganization:230:async ():Promise<BulkGenerationResult>::",
            "regenerateQRCodesForOrganization:267:async ():Promise<BulkGenerationResult>::",
            "getOrganizationQRCodeStats:313:async ():Promise<::",
            "__init__:41:(private db:DrizzleClient)::"
          ]
        ]
      }
    ],
    "sr/server/services/roleService.ts": [
      "t",
      {
        "RoleService": [
          "32",
          [
            "createSystemRoles:47:async ():Promise<void>::",
            "deleteRole:368:async (roleId:string):Promise<void>::",
            "getRoles:423:async ():Promise<\n    (Role &::",
            "ensureAtLeastOneAdmin:484:async ():Promise<void>::",
            "getDefaultRole:506:async ():Promise<Role | null>::",
            "getAdminRole:520:async ():Promise<Role | null>::",
            "__init__:34:(private drizzle:DrizzleClient, private organizationId:string,)::"
          ]
        ]
      }
    ],
    "sr/server/services/types.ts": [
      "t",
      ["isDatabaseResult:61:(obj:unknown):::"]
    ],
    "sr/server/services/validation-helper.ts": [
      "t",
      [
        "validateDrizzleFieldAccess:38:(fieldName:string):::",
        "validateQueryFields:56:(query:object, expectedFields?::void:validateDrizzleFieldAccess:",
        "isSnakeCaseResult:83:(result:object):::",
        "auditDatabaseQuery:95:(queryObject:object)::validateQueryFields:"
      ]
    ],
    "sr/server/utils/qrCodeUtils.ts": [
      "t",
      ["constructReportUrl:1:(machine:{ id::{ subdomain:string }; }):string::"]
    ],
    "sr/test/archived-templates/service.test.template.ts": [
      "t",
      {
        "name": ["12", []]
      }
    ],
    "sr/test/helpers/anonymous-test-helpers.ts": [
      "t",
      [
        "createAnonymousTestContext:47:(options:{ /** Organization to use for testing (defaults to primary)::",
        "createCrossOrgTestContext:121:():::",
        "mockSessionVariableSetup:144:(mockDb:MockProxy<DrizzleClient>, _organizationId::void::",
        "expectSessionVariableSet:171:(mockDb:MockProxy<DrizzleClient>, expectedOrgId::void::",
        "createCrossOrgAccessScenario:188:():::"
      ]
    ],
    "sr/test/helpers/service-test-helpers.ts": [
      "t",
      [
        "createMockDatabase:22:():MockProxy<DrizzleClient>::",
        "createServiceTestContext:104:():ServiceTestContext::",
        "expectOrganizationScoping:118:(mockCall:unknown, expectedOrgId::void::"
      ]
    ],
    "sr/test/templates/service.test.template.ts": [
      "t",
      {
        "name": ["345", []]
      }
    ],
    "sr/trpc/query-client.ts": ["t", ["createQueryClient:7:():QueryClient::"]],
    "sr/trpc/react.tsx": [
      "t",
      [
        "TRPCReactProvider:53:(props:{ children::React.JSX.Element:getBaseUrl,getQueryClient,isClientDevelopment:",
        "getBaseUrl:90:():string::",
        "isClientDevelopment:17:():boolean::",
        "getQueryClient:26:():QueryClient::"
      ]
    ],
    "sr/utils/version.ts": ["t", ["getVersion:12:():string::"]],
    "supabase/t/run-tests.sh": [
      "s",
      [
        "log_info:0:()::",
        "log_success:0:()::",
        "log_warning:0:()::",
        "log_error:0:()::",
        "check_psql:0:()::",
        "check_pg_prove:0:()::",
        "test_connection:0:()::",
        "setup_pgtap:0:()::",
        "setup_test_environment:0:()::",
        "run_tests_with_pg_prove:0:()::",
        "run_tests_with_psql:0:()::",
        "run_tests:0:()::",
        "main:0:()::"
      ]
    ]
  },
  "g": [
    ["createTRPCCallerForIssues", "createMockServices"],
    ["createPinballMapTestContext", "setMockPermissions"],
    ["createTestMembership", "createTestUser"],
    ["getEnvironmentName", "isProduction"],
    ["validateIssueAssignment", "validateAssignmentRules"],
    ["withMultiOrgTest", "setTestSession"],
    ["IssueTimeline", "getActivityIcon"],
    ["processFiles", "log"],
    ["DetailedIssueCard", "getPriorityBorderColor"],
    ["createRouterTestSuite", "testInputValidation"],
    ["expectAuthenticationRequired", "createPublicContext"],
    ["createMockMachines", "createMockModel"],
    ["getSeededPlayerSupabaseUser", "createSupabaseUserFromSeeded"],
    ["validateCommentCreationInput", "validateCommentContent"],
    [
      "validateIssueOrganizationBoundary",
      "validateResourceOrganizationBoundary"
    ],
    ["auditMultiTenantSecurity", "auditTableIsolation"],
    ["createWithPermissions", "createWithRole"],
    ["getSeededMemberSupabaseUser", "getSeededMember"],
    ["createSingleIssue", "createPriorityFactory"],
    ["createTraceContext", "generateTraceId"],
    ["createMultipleForOrganization", "createWithUser"],
    ["shouldRequireGoogleOAuth", "isPreview"],
    ["createSingleComment", "createUserFactory"],
    ["validateCommentDeletion", "validateCommentDeletionPermissions"],
    ["createIssueFactory", "createMachineFactory"],
    ["loginAsTechnician", "loginAsUserWithPermissions"],
    ["log", "log"],
    ["createPermissionTestSuite", "expectOrganizationRequired"],
    ["generateOrganizationalReport", "getTopMachinesByIssues"],
    ["validateSingleFile", "validateTestArchetype"],
    ["validateStatusTransition", "validateOrganizationBoundary"],
    ["seedValidatorValidateAll", "seedValidatorValidateEnvironment"],
    ["createTestDatabase", "applyDrizzleSchema"],
    ["createClient", "createServerClient"],
    ["getExistingAuthUsers", "createServiceRoleClient"],
    ["seedTestInfrastructure", "seedProductionInfrastructure"],
    ["createMockStatuses", "createMockStatus"],
    ["processBatchUsers", "upsertSupabaseAuthUser"],
    ["validateCommentEditWithTimeLimit", "canEditCommentByTime"],
    ["processImageFile", "calculateDimensions"],
    ["auditMultiTenantSecurity", "createAuditTestData"],
    ["createAllPermissions", "createLocationPermissions"],
    ["configureProductionMocks", "createRemoteURL"],
    ["createRouterTestSuite", "testAdminOnlyProcedure"],
    ["validateOrganizationContext", "getUserWithOrganization"],
    ["logout", "clearSession"],
    ["isPinPointSupabaseSession", "isPinPointSupabaseUser"],
    ["createFallbackLogger", "mergeContext"],
    ["validateTransitionRules", "getTransitionType"],
    ["seedSampleData", "createModels"],
    ["auditMultiTenantSecurity", "measureRLSPerformance"],
    ["withRLSTest", "withIsolatedTest"],
    ["validateIssueAssignment", "validateIssueOrganizationBoundary"],
    ["validateImportStructure", "getLineNumber"],
    ["LocationList", "handleLocationClick"],
    ["authenticateDevUser", "isValidDevEmail"],
    ["validateDrizzleConfiguration", "expectTimeoutConfiguration"],
    ["validateRoleAssignment", "validateUserMembership"],
    ["createServiceTestContext", "createMockDatabase"],
    ["createWithRole", "getRolePermissions"],
    ["createWithRoles", "createSystemRoleSet"],
    ["createMembership", "createTestUser"],
    ["auditDatabaseQuery", "validateQueryFields"],
    ["setupAuthTestData", "createSupabaseUserFromSeeded"],
    ["TRPCReactProvider", "isClientDevelopment"],
    ["createLogger", "hasCodeAndMessage"],
    ["validateCommentEditWithTimeLimit", "validateCommentEditPermissions"],
    ["seedAuthUsers", "getUsersForOrganization"],
    ["createAdminClient", "createServerClient"],
    ["verifyIntegrationTesterSetup", "getIntegrationTesterDatabaseUrl"],
    ["transformKeysToSnakeCase", "transformKeysToSnakeCase"],
    ["setupAuthTestData", "getSeededOrganization"],
    ["seedValidatorValidateAll", "seedValidatorValidateTarget"],
    ["createWithRoles", "create"],
    ["expectOrganizationRequired", "createAuthenticatedContext"],
    ["main", "setupRLS"],
    ["createPermissionTestSuite", "expectPermissionRequired"],
    ["getRolePermissions", "createMatrix"],
    ["createCompetitorAdminContext", "createSeededMachineTestContext"],
    ["createSessionFactory", "createUserFactory"],
    ["getSeededUserByEmail", "getUserWithRoles"],
    ["validateUserRemoval", "validateUserRemovalRules"],
    ["seedInfrastructure", "createDefaultPriorities"],
    ["getAllFilePaths", "getAllFilePaths"],
    ["testInputValidation", "createRouterTestContext"],
    ["createSystemRoleSet", "createTechnicianRole"],
    ["createMembershipValidationInput", "createMockMembership"],
    ["getSeededMember", "getCachedSeedData"],
    ["shouldEnableTestLogin", "isDevelopment"],
    ["transformKeysToSnakeCase", "toSnakeCase"],
    ["processFiles", "buildMapping"],
    ["createWithMemberships", "createMultipleForOrganization"],
    ["validateEntityExistsAndOwned", "validateRouterEntityOwnership"],
    ["createMockIssue", "createMockPriority"],
    ["withOrgScopeAndNotDeleted", "excludeSoftDeleted"],
    ["verifyPublicOnlyContent", "verifyPublicContent"],
    ["createSystemRoleSet", "createMemberRole"],
    ["withRLSEnabledTest", "withIsolatedTest"],
    ["hasPermissionForSession", "hasPermission"],
    ["shouldEnableCredentialsProvider", "isDevelopment"],
    ["validateBatchAssignments", "validateAssigneeMembership"],
    ["withRLSSecurityContext", "esc"],
    ["createIssueFactory", "createUserFactory"],
    ["getSeededIssues", "getCachedSeedData"],
    ["getValidStatusTransitions", "validateStatusTransition"],
    ["transformMachinesForIssuesResponse", "transformMachineForIssuesResponse"],
    ["createCompetitorOrgUser", "createMockSupabaseUser"],
    ["isValidOPDBId", "parseOPDBId"],
    ["validateCommentDeletion", "validateCommentDeletionState"],
    ["seedSampleData", "createMachines"],
    ["transformLocationsResponse", "transformLocationResponse"],
    ["ActiveFilters", "getUserName"],
    ["auditMultiTenantSecurity", "getDataSizeConfig"],
    ["transformOrganizationArray", "transformAuthArray"],
    ["setupRLS", "createDatabaseConnection"],
    ["validateTestArchetype", "validateErrorHandling"],
    ["createMockIssue", "createMockMachine"],
    ["middleware", "getSubdomain"],
    ["withCrossOrgTest", "withMultiOrgTest"],
    ["getUserPermissionsForSession", "PermissionService.getUserPermissions"],
    ["cleanupSeedDataHelpers", "clearSeedDataCache"],
    ["createComplexIssueFactory", "createCommentFactory"],
    ["withRLSAwareTest", "withRLSTest"],
    ["createCompetitorAdminContext", "createSeededLocationTestContext"],
    ["getSelectionSummary", "getSelectedCount"],
    ["validateReassignmentRole", "validateOrganizationBoundary"],
    ["createSingleActivity", "createUserFactory"],
    ["createDrizzleClientInternal", "getDatabaseConfig"],
    ["getEnvironmentName", "isPreview"],
    ["SignOutButton", "handleSignOut"],
    ["processFiles", "listSourceFiles"],
    ["createAdminMembership", "createTestUser"],
    ["withOrgScopeAndNotDeleted", "withOrganizationScope"],
    ["middleware", "getBaseDomain"],
    ["processBatchUsers", "waitForUserRecord"],
    ["createMockLocations", "createMockLocation"],
    ["createUnauthenticatedRole", "create"],
    ["AuthProvider", "signOut"],
    ["toggleSelectAll", "selectNone"],
    ["createMultipleForOrganization", "createSystemRoleSet"],
    ["validateDrizzleConfiguration", "expectSSLConfiguration"],
    ["createCommentFactory", "createSingleComment"],
    ["validateCommentEdit", "validateCommentExists"],
    ["setupAuthTestData", "getSeededAdmin"],
    ["getCurrentUser", "createClient"],
    ["seedSampleData", "createSampleIssues"],
    ["IssueTimeline", "getActivityColor"],
    ["loginAsUser", "clearSession"],
    ["createMockIssuesList", "createMockIssue"],
    ["validateAndLogOAuthConfig", "validateAllOAuthProviders"],
    ["configureCIMocks", "createRemoteURL"],
    ["createSingleIssue", "createMachineFactory"],
    ["buildMapping", "snakeToCamel"],
    ["shouldEnablePreviewAuthInProduction", "shouldForcePreviewBehavior"],
    ["toggleSelectAll", "isAllSelected"],
    ["validateStatusTransition", "validateTransitionRules"],
    ["loginAsUser", "waitForAuthentication"],
    ["getSingleIssue", "createIssueFactory"],
    ["validateDrizzleConfiguration", "expectPoolConfiguration"],
    ["createComplexIssueFactory", "getSingleIssue"],
    ["buildMapping", "collectSchemaColumns"],
    ["isProduction", "getClientEnvironment"],
    ["createAdminRole", "create"],
    ["validateRoleAssignment", "validateAdminCountPreservation"],
    ["validateBatchRoleOperations", "countAdmins"],
    ["seedCompleteTestData", "seedTestInfrastructure"],
    ["main", "generateSQLConstants"],
    ["createOrganizationWithRoles", "RoleService.createSystemRoles"],
    ["transformKeysToSnakeCase", "isPlainObject"],
    ["middleware", "setAll"],
    ["validateAdminCountForRemoval", "countAdmins"],
    ["shouldEnableDemoLogin", "isPreview"],
    ["AdminPanel", "useRequiredPermission"],
    ["createDrizzleClient", "createDrizzleClientInternal"],
    ["getSeededOrganizationId", "getSeededOrganization"],
    ["formatMachineName", "getManufacturerName"],
    ["transformKeysToCamelCase", "transformKeysToCamelCase"],
    ["seedAuthUsers", "createUsersDirectly"],
    ["deleteTestBucket", "clearStorageBucket"],
    ["transformMachinesResponse", "transformMachineResponse"],
    ["createCustomRole", "create"],
    ["validateFilters", "isValidSortField"],
    ["ActiveFilters", "getStatusNames"],
    ["validateCommentRestoration", "validateAdminPermissions"],
    ["createDevUserAction", "isValidDevEmail"],
    ["getSeededAdmin", "getCachedSeedData"],
    ["isDevelopmentOrTest", "isTest"],
    ["getEnvironmentName", "getClientEnvironment"],
    ["canEditCommentByTime", "getCommentAgeInMinutes"],
    ["seedAuthUsers", "processBatchUsers"],
    ["clearStorageBucket", "getAllFilePaths"],
    ["configureDevelopmentMocks", "createLocalhost5432URL"],
    ["createIssueFactory", "createSingleIssue"],
    ["createMockIssue", "createMockUser"],
    ["validateRoleReassignment", "validateReassignmentRole"],
    ["validateUserPermissions", "getTransitionType"],
    ["isDevelopmentOrTest", "isDevelopment"],
    ["createWithUser", "create"],
    ["validateCommentEdit", "validateCommentEditPermissions"],
    ["createDefaultLocation", "getDefaultLocationId"],
    ["createActivityFactory", "createUserFactory"],
    ["transformAttachmentsResponse", "transformAttachmentResponse"],
    ["createAdmin", "createWithRole"],
    ["validateTestArchetype", "validateRLSContext"],
    ["seedAuthUsers", "deleteExistingDevUsers"],
    ["authenticateDevUser", "signInDevUser"],
    ["validateDrizzleConfiguration", "expectLoggingConfiguration"],
    ["getUserPermissionsForSession", "getUserPermissions"],
    ["validateUserRemoval", "validateUserMembership"],
    ["getSeededPriorities", "getCachedSeedData"],
    ["expectPermissionRequired", "createAuthenticatedContext"],
    ["clearAllFilters", "getDefaultFilters"],
    ["urlParamsToFilters", "isValidSortOrder"],
    ["transformCommentsResponse", "transformCommentResponse"],
    ["seedSampleData", "extractUniqueGames"],
    [
      "validateLocationOrganizationBoundary",
      "validateResourceOrganizationBoundary"
    ],
    ["createSingleIssue", "createUserFactory"],
    ["seedSampleDataWithDb", "seedSampleData"],
    ["seedTestSampleData", "seedProductionSampleData"],
    ["createPrimaryAdminContext", "createSeededMachineTestContext"],
    ["handleDrop", "handleFileSelect"],
    ["devValidateFields", "validateFieldAccess"],
    ["withMachineOwnerBusinessLogicSetup", "setupTestData"],
    ["createRouterTestSuite", "testAuthenticatedProcedure"],
    ["createUnauthenticated", "createWithRole"],
    ["generatePrefixedId", "generateId"],
    ["ActiveFilters", "getMachineName"],
    ["assertOAuthConfigValid", "validateAndLogOAuthConfig"],
    ["createMemberRole", "create"],
    ["createPermissionTestSuite", "expectOrganizationIsolation"],
    ["seedSampleData", "createCompetitorMachine"],
    ["IssueActions", "usePermissions"],
    ["getSeededIssueStatuses", "getCachedSeedData"],
    ["setupAllIssueListMocks", "setupNavigationMocks"],
    ["MyComponent", "usePermissions"],
    ["createTraceContext", "generateRequestId"],
    ["validateTestArchetype", "validatePerformancePatterns"],
    ["getCurrentUserOrganizationId", "RLSContextManager.getCurrentUser"],
    ["seedCompleteTestData", "seedTestSampleData"],
    ["validateIssueCreation", "validateMachineOrganizationBoundary"],
    ["AuthProvider", "getInitialSession"],
    ["createMachineWithoutCustomName", "createMockMachine"],
    ["requirePermission", "hasPermission"],
    ["setupAuthTestData", "getSeededMember"],
    ["getClient", "createClient"],
    ["createMultipleForTesting", "createWithMemberships"],
    [
      "validatePublicOrganizationContextRequired",
      "validatePublicOrganizationContext"
    ],
    ["getSeededMemberSupabaseUser", "createSupabaseUserFromSeeded"],
    ["createPrimaryMemberContext", "createSeededMachineTestContext"],
    ["validateMemorySafety", "getLineNumber"],
    ["createSingleAttachment", "createUserFactory"],
    ["transformUploadAuthContextResponse", "transformMembershipResponse"],
    ["createSystemRoleSet", "createUnauthenticatedRole"],
    ["getSeededPriorities", "getSeededOrganizationId"],
    ["hasCycle", "hasCycle"],
    ["processFiles", "applyMappingToContent"],
    ["createWithMemberships", "createSystemRoleSet"],
    ["validateRoleAssignment", "validateOrganizationBoundary"],
    ["validateAdminCountPreservation", "countAdmins"],
    ["createSingleIssue", "createStatusFactory"],
    ["createComplexTestDataset", "createBasicTestData"],
    ["withBusinessLogicTest", "withIsolatedTest"],
    ["validateUserRemoval", "validateAdminCountForRemoval"],
    ["createMockMachines", "createMockMachine"],
    ["ReportingService.__init__", "groupByPriority"],
    ["createAllPermissions", "createAttachmentPermissions"],
    ["handleFileInputChange", "handleFileSelect"],
    ["createRoleService", "createRoleService"],
    ["requirePermissionForSession", "requirePermission"],
    ["createWithMemberships", "create"],
    ["createIssueFactory", "createStatusFactory"],
    ["createUser", "createWithRole"],
    ["hasPermission", "getRolePermissions"],
    ["createPrimaryAdminContext", "createSeededLocationTestContext"],
    ["getSeededIssueStatuses", "getSeededOrganizationId"],
    ["validateCommentRestoration", "validateCommentExists"],
    ["toggleSelectAll", "selectAll"],
    ["createPermissionTestSuite", "createAuthenticatedContext"],
    ["validateMultipleEntityOwnership", "validateRouterEntityOwnership"],
    ["isPreview", "getClientEnvironment"],
    ["PermissionButton", "getDefaultTooltipText"],
    ["isDevAuthAvailable", "shouldEnableDevFeatures"],
    ["seedInfrastructure", "createDefaultIssueStatuses"],
    ["validateAllOAuthProviders", "validateGoogleOAuth"],
    ["logout", "waitForLogout"],
    ["deleteExistingDevUsers", "createServiceRoleClient"],
    ["middleware", "createServerClient"],
    ["transformUploadAuthContextResponse", "transformOrganizationResponse"],
    ["setup_test_database", "print_error"],
    ["createLogger", "isErrorObject"],
    ["validateTestArchetype", "validateImportStructure"],
    ["createRouterTestSuite", "testPublicProcedure"],
    ["createMockContext", "createMockServiceFactory"],
    ["validateFilters", "isValidSortOrder"],
    ["ActionButton", "usePermissions"],
    ["ActionButton", "usePermissionTooltip"],
    ["isDevelopmentOrPreview", "isPreview"],
    ["validateCommonPattern", "validateFieldAccess"],
    ["createIssuePermissions", "create"],
    ["getSeededAdmin", "getUserWithRoles"],
    ["clearTestStorage", "getAllFilePaths"],
    ["ActiveFilters", "getLocationName"],
    ["processIssueImageFile", "calculateDimensions"],
    ["formatMachineName", "getYearValue"],
    ["validateTestArchetype", "validateArchetypeCompliance"],
    ["validateRoleReassignment", "validateRoleDeletion"],
    ["createAttachmentFactory", "createUserFactory"],
    ["handler", "createContext"],
    ["createPrimaryMemberContext", "createSeededLocationTestContext"],
    ["setupAuthTestData", "getSeededPlayer"],
    ["setupAllIssueListMocks", "setupTRPCMocks"],
    ["createComplexIssueFactory", "createAttachmentFactory"],
    ["createRoleService", "ServiceFactory.createRoleService"],
    ["transformLocationResponse", "transformMachinesResponse"],
    ["createWithPermissions", "createCustomRole"],
    ["withMultiOrgTest", "withIsolatedTest"],
    ["createMachineFactory", "createLocationFactory"],
    ["createIssueRouterContext", "createUserFactory"],
    ["createDualChildLogger", "createDualChildLogger"],
    ["createTRPCCallerForIssues", "createIssueRouterContext"],
    ["getEnvironmentName", "isDevelopment"],
    ["isDevelopment", "getClientEnvironment"],
    ["createOrganizationWithRoles", "createSystemRoles"],
    ["createCompetitorOrgContext", "createMockTRPCContext"],
    ["IssueStatusControl", "handleStatusChange"],
    ["getUploadAuthContext", "transformUploadAuthContext"],
    ["seedInfrastructure", "createDefaultLocation"],
    ["createIssueFactory", "createPriorityFactory"],
    ["transformIssuesResponse", "transformIssueResponse"],
    ["getSeededPlayer", "getCachedSeedData"],
    ["createTechnician", "createWithRole"],
    ["createPermissionTestSuite", "createPermissionTestCases"],
    ["createMachineFactory", "createModelFactory"],
    ["seedValidatorValidateAll", "seedValidatorValidateDataAmount"],
    ["validateQueryFields", "validateDrizzleFieldAccess"],
    ["getSeededMember", "getUserWithRoles"],
    ["createAttachmentFactory", "createSingleAttachment"],
    ["ReportingService.constructor", "groupByPriority"],
    ["shouldRequireGoogleOAuth", "isProduction"],
    ["createMockIssue", "createMockStatus"],
    ["validateTestArchetype", "validateMemorySafety"],
    ["createCompetitorMembership", "createMockMembership"],
    ["getUserPermissionsForSupabaseUser", "getUserPermissionsForSupabaseUser"],
    ["createAdminRole", "createAllPermissions"],
    ["createLogger", "createFallbackLogger"],
    ["generateOrganizationalReport", "calculateAvgResolutionTime"],
    ["shouldEnableCredentialsProvider", "isPreview"],
    ["validateRoleAssignment", "validateRoleAssignmentRules"],
    ["createOrganizationWithRoles", "createTemplateRole"],
    ["createSystemRoleSet", "createAdminRole"],
    ["StatusCategoryMultiSelect", "getGroupLabel"],
    ["getCurrentUserOrganizationId", "getCurrentUser"],
    ["resetMocks", "setupDefaultResponses"],
    ["createMockUsers", "createMockUser"],
    ["getSeededAdminSupabaseUser", "createSupabaseUserFromSeeded"],
    ["validateIssueAssignment", "validateAssigneeMembership"],
    ["transformKeysToCamelCase", "toCamelCase"],
    ["setContext", "setTestSession"],
    ["createMachinePermissions", "create"],
    ["processBatchUsers", "getExistingAuthUsers"],
    ["createCompetitorOrganization", "createMockOrganization"],
    ["isDevelopmentOrPreview", "isDevelopment"],
    ["createAttachmentPermissions", "create"],
    ["createWithRole", "createWithPermissions"],
    ["createClient", "setAll"],
    ["createServerMockContext", "createMockSupabaseUser"],
    ["esc", "esc"],
    ["createNumberedVariation", "createNumberedId"],
    ["validateIssueCreation", "validateDefaultPriority"],
    ["getSeededIssue", "getCachedSeedData"],
    ["urlParamsToFilters", "isValidSortBy"],
    ["getGroupIdFromOPDBId", "parseOPDBId"],
    ["createRouterTestSuite", "testOrganizationScoping"],
    ["createTestDatabase", "configureForBusinessLogicTesting"],
    ["withMultiOrgTest", "setContext"],
    ["validateBatchAssignments", "validateIssueOrganizationBoundary"],
    ["batchToggleSelection", "toggleSelection"],
    ["setupMultiOrgContext", "createOrgContext"],
    ["createUsersDirectly", "getUserIdForEmail"],
    ["getSeededOrganization", "getCachedSeedData"],
    ["signOut", "signOut"],
    ["createCommentFactory", "createUserFactory"],
    ["createTechnicianRole", "create"],
    ["seedInfrastructure", "createOrganizationWithRoles"],
    ["validateTestFiles", "validateTestArchetype"],
    ["TRPCReactProvider", "getBaseUrl"],
    ["createAdminPermissions", "create"],
    ["seedInfrastructure", "createDefaultCollectionTypes"],
    ["transformUserArray", "transformAuthArray"],
    ["createAdminClient", "setAll"],
    ["createLocationPermissions", "create"],
    ["seedInfrastructure", "createGlobalPermissions"],
    ["validateCommentDeletion", "validateOrganizationMembership"],
    ["transformKeysToCamelCase", "isPlainObject"],
    ["getSeededPlayerSupabaseUser", "getSeededPlayer"],
    ["createWithPermissions", "create"],
    ["validateCommentRestoration", "validateCommentDeletionState"],
    ["validateCommentEdit", "validateCommentDeletionState"],
    ["validateIssueCreation", "validateIssueCreationRules"],
    ["createAllPermissions", "createIssuePermissions"],
    ["transformMembershipArray", "transformAuthArray"],
    ["DetailedIssueCard", "getStatusColor"],
    ["createPermissionTestSuite", "expectAuthenticationRequired"],
    ["createAllPermissions", "createAdminPermissions"],
    ["createRoleService", "ensures.createRoleService"],
    ["createWithMemberCount", "create"],
    ["createComplexIssueFactory", "createActivityFactory"],
    ["createAdminMembership", "createAdminRole"],
    ["createActivityFactory", "createSingleActivity"],
    ["setupAllIssueListMocks", "setupPermissionMocks"],
    ["getSeededUserByEmail", "getCachedSeedData"],
    ["TRPCReactProvider", "getQueryClient"],
    ["createTestDatabase", "verifyMigrationComplete"],
    ["validateFilters", "getDefaultFilters"],
    ["createFallbackLogger", "createFallbackLogger"],
    ["createMockMachine", "createMockLocation"],
    ["withOrganizationClient", "createOrganizationAwareClient"],
    ["createIssueWithMixedComments", "getSingleIssue"],
    ["validateTestArchetype", "detectArchetype"],
    [
      "validateCommentOrganizationBoundary",
      "validateResourceOrganizationBoundary"
    ],
    ["createAllPermissions", "createMachinePermissions"],
    ["validateIssueCreation", "validateDefaultStatus"],
    ["validateSingleFile", "generateValidationReport"],
    ["mockCurrentMembership", "createMockMembership"],
    [
      "validateMachineOrganizationBoundary",
      "validateResourceOrganizationBoundary"
    ],
    ["createMockMachine", "createMockModel"],
    ["createMembership", "createTestRole"],
    ["validateStatusTransition", "validateUserPermissions"],
    ["transformMembershipResponse", "transformUserResponse"],
    ["validateCommentEditInput", "validateCommentContent"],
    ["validateCommentDeletion", "validateCommentExists"],
    ["getSeededPlayer", "getUserWithRoles"],
    ["getSeededAdminSupabaseUser", "getSeededAdmin"]
  ],
  "deps": {
    ".archived-tests-2025-08-23/e2e/helpers/auth.ts": ["@playwright/test"],
    ".archived-tests-2025-08-23/e2e/helpers/unified-dashboard.ts": [
      "@playwright/test"
    ],
    ".archived-tests-2025-08-23/e2e/issue-confirmation.spec.ts": [
      "@playwright/test"
    ],
    ".archived-tests-2025-08-23/e2e/roles-permissions.spec.ts": [
      "@playwright/test"
    ],
    ".archived-tests-2025-08-23/src/app/api/dev/__tests__/users-simple.test.ts": [
      "vitest",
      "~/test/constants/seed-test-ids"
    ],
    ".archived-tests-2025-08-23/src/app/dashboard/_components/__tests__/PrimaryAppBar.test.tsx": [
      "@testing-library/react",
      "react",
      "vitest",
      "~/test/msw/setup",
      "~/test/VitestTestWrapper"
    ],
    ".archived-tests-2025-08-23/src/app/machines/components/MachineCard.test.tsx": [
      "@testing-library/react",
      "@testing-library/user-event",
      "vitest",
      "~/test/msw/setup",
      "~/test/VitestTestWrapper"
    ],
    ".archived-tests-2025-08-23/src/components/issues/__tests__/MachineSelector.test.tsx": [
      "@testing-library/react",
      "@testing-library/user-event",
      "vitest",
      "~/test/mockUtils",
      "~/test/VitestTestWrapper"
    ],
    ".archived-tests-2025-08-23/src/components/locations/__tests__/LocationDetailView.test.tsx": [
      "@testing-library/react",
      "vitest",
      "~/test/msw/setup",
      "~/test/VitestTestWrapper"
    ],
    ".archived-tests-2025-08-23/src/components/locations/__tests__/MachineGrid.test.tsx": [
      "@testing-library/react",
      "vitest"
    ],
    ".archived-tests-2025-08-23/src/components/permissions/__tests__/PermissionGate.test.tsx": [
      "@testing-library/react",
      "vitest",
      "~/server/auth/permissions.constants"
    ],
    ".archived-tests-2025-08-23/src/components/react-environment.test.tsx": [
      "@testing-library/react",
      "vitest"
    ],
    ".archived-tests-2025-08-23/src/hooks/__tests__/usePermissions.test.tsx": [
      "@testing-library/react",
      "react",
      "react",
      "vitest",
      "~/server/auth/permissions.constants",
      "~/test/VitestTestWrapper"
    ],
    ".archived-tests-2025-08-23/src/integration-tests/comment.integration.test.ts": [
      "vitest",
      "drizzle-orm",
      "~/server/api/root",
      "~/server/db/schema",
      "~/test/helpers/worker-scoped-db",
      "~/test/helpers/createSeededIssueTestContext",
      "~/test/constants/seed-test-ids"
    ],
    ".archived-tests-2025-08-23/src/integration-tests/cross-org-isolation.test.ts": [
      "vitest",
      "drizzle-orm",
      "~/test/helpers/worker-scoped-db",
      "~/test/constants/seed-test-ids",
      "~/server/db/schema"
    ],
    ".archived-tests-2025-08-23/src/integration-tests/machine.location.integration.test.ts": [
      "@trpc/server",
      "drizzle-orm",
      "vitest",
      "~/server/api/routers/machine.location",
      "~/server/db/schema",
      "~/test/helpers/pglite-test-setup",
      "~/test/helpers/worker-scoped-db",
      "~/test/constants/seed-test-ids",
      "~/test/helpers/createSeededMachineTestContext"
    ],
    ".archived-tests-2025-08-23/src/integration-tests/machine.owner.integration.test.ts": [
      "drizzle-orm",
      "vitest",
      "~/server/api/routers/machine.owner",
      "~/server/db/schema",
      "~/test/helpers/worker-scoped-db",
      "~/test/constants/seed-test-ids",
      "~/test/helpers/createSeededMachineTestContext"
    ],
    ".archived-tests-2025-08-23/src/integration-tests/model.core.integration.test.ts": [
      "@trpc/server",
      "drizzle-orm",
      "vitest",
      "~/server/api/root",
      "~/server/db/schema",
      "~/test/constants/seed-test-ids",
      "~/test/helpers/worker-scoped-db"
    ],
    ".archived-tests-2025-08-23/src/integration-tests/pinballMap.integration.test.ts": [
      "drizzle-orm",
      "vitest",
      "msw",
      "~/server/api/root",
      "~/server/db/schema",
      "~/test/msw/setup",
      "~/test/helpers/worker-scoped-db",
      "~/server/services/factory"
    ],
    ".archived-tests-2025-08-23/src/integration-tests/schema-migration-validation.integration.test.ts": [
      "drizzle-orm",
      "vitest",
      "~/server/db/schema",
      "~/test/helpers/test-id-generator",
      "~/test/helpers/worker-scoped-db"
    ],
    ".archived-tests-2025-08-23/src/lib/common/__tests__/organizationValidation.test.ts": [
      "vitest",
      "~/test/constants/seed-test-ids"
    ],
    ".archived-tests-2025-08-23/src/lib/issues/__tests__/assignmentValidation.test.ts": [
      "vitest",
      "~/test/constants/seed-test-ids"
    ],
    ".archived-tests-2025-08-23/src/lib/issues/__tests__/creationValidation.test.ts": [
      "vitest",
      "~/test/constants/seed-test-ids"
    ],
    ".archived-tests-2025-08-23/src/lib/issues/__tests__/statusValidation.test.ts": [
      "vitest",
      "~/test/constants/seed-test-ids"
    ],
    ".archived-tests-2025-08-23/src/lib/pinballmap/__tests__/apiMocker.ts": [
      "vitest",
      ".archived-tests-2025-08-23/src/lib/pinballmap/__tests__/fixtures/api_responses/locations/location_26454_machine_details.json"
    ],
    ".archived-tests-2025-08-23/src/lib/users/__tests__/roleManagementValidation.test.ts": [
      "vitest",
      "~/test/constants/seed-test-ids"
    ],
    ".archived-tests-2025-08-23/src/server/api/__tests__/msw.trpc.test.ts": [
      "@trpc/server",
      "vitest",
      "~/test/msw/handlers",
      "~/test/msw/setup",
      "~/test/msw/setup"
    ],
    ".archived-tests-2025-08-23/src/server/api/__tests__/trpc.permission.test.ts": [
      "@trpc/server",
      "vitest",
      "~/server/auth/permissions",
      "~/test/vitestMockContext",
      "~/test/constants/seed-test-ids"
    ],
    ".archived-tests-2025-08-23/src/server/api/routers/__tests__/collection.test.ts": [
      "drizzle-orm",
      "vitest",
      "~/server/api/root",
      "~/server/db/schema",
      "~/test/constants/seed-test-ids",
      "~/test/helpers/worker-scoped-db"
    ],
    ".archived-tests-2025-08-23/src/server/api/routers/__tests__/issue.confirmation.test.ts": [
      "vitest",
      "@trpc/server",
      "drizzle-orm",
      "zod",
      "~/test/vitestMockContext",
      "~/test/constants/seed-test-ids",
      "~/server/api/trpc",
      "~/server/api/trpc.permission",
      "~/server/auth/permissions",
      "~/server/db/schema"
    ],
    ".archived-tests-2025-08-23/src/server/api/routers/__tests__/issue.integration.test.ts": [
      "drizzle-orm",
      "vitest",
      "~/lib/utils/id-generation",
      "~/server/api/root",
      "~/server/db/schema",
      "~/test/helpers/pglite-test-setup",
      "~/test/helpers/worker-scoped-db",
      "~/test/testDataFactories",
      "~/test/constants/seed-test-ids"
    ],
    ".archived-tests-2025-08-23/src/server/api/routers/__tests__/issue.notification.test.ts": [
      "vitest",
      "~/server/services/notificationService",
      "~/test/vitestMockContext",
      "~/test/constants/seed-test-ids"
    ],
    ".archived-tests-2025-08-23/src/server/api/routers/__tests__/issue.test.ts": [
      "drizzle-orm",
      "vitest",
      "~/server/api/root",
      "~/server/db/schema",
      "~/test/constants/seed-test-ids",
      "~/test/helpers/worker-scoped-db",
      "~/test/helpers/createSeededIssueTestContext",
      "~/server/services/factory"
    ],
    ".archived-tests-2025-08-23/src/server/api/routers/__tests__/model.core.test.ts": [
      "@trpc/server",
      "drizzle-orm",
      "vitest",
      "~/server/api/root",
      "~/server/db/schema",
      "~/test/constants/seed-test-ids",
      "~/test/helpers/test-id-generator",
      "~/test/helpers/worker-scoped-db",
      "~/test/helpers/pglite-test-setup"
    ],
    ".archived-tests-2025-08-23/src/server/api/routers/__tests__/notification.test.ts": [
      "drizzle-orm",
      "vitest",
      "~/server/api/root",
      "~/server/db/schema",
      "~/test/helpers/test-id-generator",
      "~/test/helpers/worker-scoped-db",
      "~/server/services/factory",
      "~/test/constants/seed-test-ids"
    ],
    ".archived-tests-2025-08-23/src/server/api/routers/utils/__tests__/commentService.integration.test.ts": [
      "drizzle-orm",
      "vitest",
      "~/server/api/routers/comment",
      "~/server/db/schema",
      "~/test/helpers/pglite-test-setup",
      "~/test/helpers/createSeededIssueTestContext",
      "~/test/constants/seed-test-ids",
      "~/test/helpers/worker-scoped-db"
    ],
    ".archived-tests-2025-08-23/src/server/api/routers/utils/__tests__/commentValidation.test.ts": [
      "vitest",
      ".archived-tests-2025-08-23/src/test/constants/seed-test-ids.ts"
    ],
    ".archived-tests-2025-08-23/src/server/auth/__tests__/permissions.constants.test.ts": [
      "vitest"
    ],
    ".archived-tests-2025-08-23/src/server/auth/__tests__/uploadAuth.test.ts": [
      "@trpc/server",
      "vitest",
      "~/test/constants/seed-test-ids"
    ],
    ".archived-tests-2025-08-23/src/server/db/__tests__/drizzle-singleton.test.ts": [
      "vitest",
      ".archived-tests-2025-08-23/src/test/helpers/worker-scoped-db.ts"
    ],
    ".archived-tests-2025-08-23/src/server/db/__tests__/drizzle-test-helpers.ts": [
      "vitest"
    ],
    ".archived-tests-2025-08-23/src/server/services/__tests__/roleService.test.ts": [
      "vitest",
      "~/server/auth/permissions.constants",
      "~/server/services/roleService",
      "~/test/constants/seed-test-ids"
    ],
    ".archived-tests-2025-08-23/src/test/VitestTestWrapper.tsx": [
      "@tanstack/react-query",
      "react",
      "~/contexts/PermissionDepsContext"
    ],
    ".archived-tests-2025-08-23/src/test/context.ts": [
      "drizzle-orm/node-postgres",
      "pg",
      "~/server/db/schema",
      "~/server/db/client-factory"
    ],
    ".archived-tests-2025-08-23/src/test/database-test-helpers.ts": [
      "drizzle-orm",
      "~/server/db/schema",
      "~/test/constants/seed-test-ids"
    ],
    ".archived-tests-2025-08-23/src/test/examples/dual-track-testing-examples.test.ts": [
      "vitest",
      "drizzle-orm",
      "~/test/constants/seed-test-ids",
      "~/test/helpers/worker-scoped-db",
      "~/test/helpers/pglite-test-setup",
      "~/server/db/schema"
    ],
    ".archived-tests-2025-08-23/src/test/helpers/archetype-validator.ts": [
      "node:fs",
      "node:path"
    ],
    ".archived-tests-2025-08-23/src/test/helpers/createSeededAdminTestContext.ts": [
      "drizzle-orm",
      "vitest",
      "~/test/helpers/pglite-test-setup",
      "~/server/db/schema"
    ],
    ".archived-tests-2025-08-23/src/test/helpers/createSeededCollectionTestContext.ts": [
      "drizzle-orm",
      "vitest",
      "~/test/helpers/pglite-test-setup",
      "~/server/db/schema"
    ],
    ".archived-tests-2025-08-23/src/test/helpers/createSeededIssueTestContext.ts": [
      "drizzle-orm",
      "~/test/helpers/pglite-test-setup",
      "~/server/db/schema",
      "~/server/services/factory"
    ],
    ".archived-tests-2025-08-23/src/test/helpers/createSeededLocationTestContext.ts": [
      "vitest",
      "drizzle-orm",
      "~/test/constants/seed-test-ids",
      "~/server/db/schema"
    ],
    ".archived-tests-2025-08-23/src/test/helpers/createSeededMachineTestContext.ts": [
      "vitest",
      "drizzle-orm",
      "~/test/constants/seed-test-ids",
      "~/server/db/schema"
    ],
    ".archived-tests-2025-08-23/src/test/helpers/createSeededNotificationTestContext.ts": [
      "vitest",
      ".archived-tests-2025-08-23/src/test/helpers/pglite-test-setup.ts"
    ],
    ".archived-tests-2025-08-23/src/test/helpers/multi-tenant-test-helpers.ts": [
      "drizzle-orm",
      ".archived-tests-2025-08-23/src/test/helpers/rls-test-context.ts",
      ".archived-tests-2025-08-23/src/test/helpers/organization-context.ts",
      "~/server/db/schema"
    ],
    ".archived-tests-2025-08-23/src/test/helpers/organization-context.ts": [
      "drizzle-orm",
      "~/server/db/schema"
    ],
    ".archived-tests-2025-08-23/src/test/helpers/pglite-test-setup.ts": [
      "@electric-sql/pglite",
      "drizzle-orm",
      "drizzle-orm/pglite",
      "drizzle-kit/api",
      "~/server/db/client-factory",
      "~/server/db/schema"
    ],
    ".archived-tests-2025-08-23/src/test/helpers/rls-test-context.ts": [
      "vitest",
      "drizzle-orm",
      ".archived-tests-2025-08-23/src/test/constants/seed-test-ids.ts"
    ],
    ".archived-tests-2025-08-23/src/test/helpers/session-context.ts": [
      "drizzle-orm"
    ],
    ".archived-tests-2025-08-23/src/test/helpers/supabase-test-setup.ts": [
      "@supabase/supabase-js",
      "~/env"
    ],
    ".archived-tests-2025-08-23/src/test/helpers/test-id-generator.ts": [
      "~/test/constants/seed-test-ids"
    ],
    ".archived-tests-2025-08-23/src/test/helpers/worker-scoped-db.ts": [
      "vitest",
      ".archived-tests-2025-08-23/src/test/helpers/pglite-test-setup.ts",
      "drizzle-orm"
    ],
    ".archived-tests-2025-08-23/src/test/mockContext.ts": [
      "vitest",
      "vitest-mock-extended"
    ],
    ".archived-tests-2025-08-23/src/test/mockUtils.ts": ["vitest"],
    ".archived-tests-2025-08-23/src/test/msw/handlers.ts": [
      ".archived-tests-2025-08-23/src/test/msw/setup.ts"
    ],
    ".archived-tests-2025-08-23/src/test/msw/setup.ts": [
      "msw/node",
      "msw-trpc",
      "superjson"
    ],
    ".archived-tests-2025-08-23/src/test/permissionTestHelpers.ts": [
      "@trpc/server",
      "vitest",
      ".archived-tests-2025-08-23/src/test/vitestMockContext.ts",
      "~/server/auth/permissions"
    ],
    ".archived-tests-2025-08-23/src/test/routerTestPatterns.ts": [
      "vitest",
      ".archived-tests-2025-08-23/src/test/permissionTestHelpers.ts"
    ],
    ".archived-tests-2025-08-23/src/test/seed-data-helpers.ts": [
      "drizzle-orm",
      "~/server/db/drizzle",
      "~/server/db/schema"
    ],
    ".archived-tests-2025-08-23/src/test/setup/issueListTestSetup.ts": [
      "vitest",
      "~/test/mockUtils"
    ],
    ".archived-tests-2025-08-23/src/test/setup/viTestMocks.ts": ["vitest"],
    ".archived-tests-2025-08-23/src/test/templates/02-service-business-logic-test.template.ts": [
      "vitest",
      "drizzle-orm",
      "~/test/helpers/worker-scoped-db",
      "~/test/constants/seed-test-ids",
      "~/server/db/schema"
    ],
    ".archived-tests-2025-08-23/src/test/templates/03-pglite-integration-test.template.ts": [
      "vitest",
      "drizzle-orm",
      "~/test/helpers/worker-scoped-db",
      "~/test/helpers/pglite-test-setup",
      "~/test/constants/seed-test-ids",
      "~/server/db/schema"
    ],
    ".archived-tests-2025-08-23/src/test/templates/04-react-component-unit-test.template.tsx": [
      "vitest",
      "@testing-library/react",
      "@testing-library/user-event",
      "~/test/VitestTestWrapper"
    ],
    ".archived-tests-2025-08-23/src/test/testDataFactories.ts": [
      "@faker-js/faker",
      "vitest",
      "~/test/constants/seed-test-ids",
      "~/test/testDataFactories",
      "~/test/testDataFactories",
      "~/test/testDataFactories",
      "~/test/testDataFactories"
    ],
    ".archived-tests-2025-08-23/src/test/utils/mock-ids.ts": [
      ".archived-tests-2025-08-23/src/test/constants/seed-test-ids.ts"
    ],
    ".archived-tests-2025-08-23/src/test/vitestMockContext.ts": ["vitest"],
    "e2e/helpers/unified-dashboard.ts": ["@playwright/test"],
    "middleware.ts": [
      "@supabase/ssr",
      "next/server",
      "~/env",
      "~/lib/environment"
    ],
    "scripts/convert-snake-case.ts": [
      "node:fs",
      "node:fs/promises",
      "node:path",
      "node:child_process"
    ],
    "scripts/generate-sql-constants.ts": [
      "fs",
      "path",
      "src/server/db/seed/constants.ts"
    ],
    "scripts/validate-drizzle-crud.ts": [
      "drizzle-orm",
      "~/server/db/drizzle",
      "~/server/db/schema",
      "~/env.js"
    ],
    "src/app/_components/AuthenticatedDashboard.tsx": [
      "@mui/material",
      "@mui/material/Grid",
      "src/app/dashboard/_components/DetailedIssueCard.tsx",
      "~/trpc/react"
    ],
    "src/app/_components/AuthenticatedLayout.tsx": [
      "@mui/material",
      "src/app/dashboard/_components/PrimaryAppBar.tsx"
    ],
    "src/app/_components/DevLoginCompact.tsx": [
      "@mui/icons-material",
      "@mui/material",
      "react",
      "~/lib/auth/dev-auth",
      "~/lib/supabase/client"
    ],
    "src/app/_components/LoginModal.tsx": ["@mui/material"],
    "src/app/_components/PublicDashboard.tsx": [
      "@mui/icons-material",
      "@mui/material",
      "~/trpc/react"
    ],
    "src/app/api/dev/users/route.ts": [
      "drizzle-orm",
      "next/server",
      "~/env",
      "~/lib/environment",
      "~/lib/utils/case-transformers",
      "~/server/auth/supabase",
      "~/server/db/provider",
      "~/server/db/schema"
    ],
    "src/app/api/health/route.ts": [
      "drizzle-orm",
      "next/server",
      "~/server/db/provider",
      "~/utils/version"
    ],
    "src/app/api/qr/[qrCodeId]/route.ts": [
      "next/server",
      "~/server/db/provider",
      "~/server/services/factory",
      "~/server/utils/qrCodeUtils"
    ],
    "src/app/api/trpc/[trpc]/route.ts": [
      "@trpc/server/adapters/fetch",
      "next/server",
      "~/lib/environment",
      "~/server/api/root",
      "~/server/api/trpc"
    ],
    "src/app/auth-provider.tsx": ["react", "~/lib/supabase/client"],
    "src/app/dashboard/_components/DetailedIssueCard.tsx": [
      "@mui/material",
      "next/link",
      "~/components/permissions"
    ],
    "src/app/dashboard/_components/PrimaryAppBar.tsx": [
      "@mui/icons-material",
      "@mui/icons-material/Place",
      "@mui/material",
      "next/navigation",
      "~/app/auth-provider",
      "~/components/permissions/PermissionButton",
      "~/hooks/usePermissions"
    ],
    "src/app/dashboard/_components/SecondaryHeader.tsx": [
      "@mui/icons-material/Settings",
      "@mui/material",
      "~/components/permissions/PermissionButton",
      "~/hooks/usePermissions"
    ],
    "src/app/dashboard/layout.tsx": [
      "@mui/material",
      "src/app/dashboard/_components/SecondaryHeader.tsx"
    ],
    "src/app/dashboard/page.tsx": [
      "@mui/material",
      "@mui/material/Grid",
      "src/app/dashboard/_components/DetailedIssueCard.tsx",
      "~/trpc/react"
    ],
    "src/app/games/[id]/page.tsx": ["next/navigation"],
    "src/app/games/page.tsx": ["next/navigation"],
    "src/app/issues/[issueId]/page.tsx": [
      "next",
      "next/navigation",
      "react",
      "~/components/issues/IssueDetailView",
      "~/server/auth/supabase",
      "~/trpc/server"
    ],
    "src/app/issues/create/page.tsx": [
      "@mui/icons-material",
      "@mui/material",
      "next",
      "react",
      "~/components/issues/IssueCreateView",
      "~/server/auth/supabase"
    ],
    "src/app/issues/page.tsx": [
      "next/navigation",
      "react",
      "~/components/issues/IssueList",
      "~/server/auth/supabase"
    ],
    "src/app/layout.tsx": [
      "@mui/material/InitColorSchemeScript",
      "@mui/material-nextjs/v15-appRouter",
      "src/app/_components/AuthenticatedLayout.tsx",
      "src/app/providers.tsx"
    ],
    "src/app/locations/[id]/page.tsx": [
      "next",
      "next/navigation",
      "react",
      "~/components/locations/LocationDetailView",
      "~/server/auth/supabase",
      "~/trpc/server"
    ],
    "src/app/locations/page.tsx": [
      "next",
      "react",
      "~/components/locations/LocationList",
      "~/server/auth/supabase",
      "~/trpc/server"
    ],
    "src/app/machines/[id]/page.tsx": [
      "next",
      "next/navigation",
      "react",
      "~/components/machines/MachineDetailView",
      "~/server/auth/supabase",
      "~/trpc/server"
    ],
    "src/app/machines/components/MachineCard.tsx": [
      "@mui/icons-material",
      "@mui/material",
      "next/navigation"
    ],
    "src/app/machines/components/MachineList.tsx": [
      "@mui/material",
      "src/app/machines/components/MachineCard.tsx",
      "~/trpc/react"
    ],
    "src/app/machines/page.tsx": [
      "@mui/icons-material",
      "@mui/material",
      "src/app/machines/components/MachineList.tsx",
      "~/hooks/usePermissions"
    ],
    "src/app/page.tsx": [
      "@mui/material",
      "next/dynamic",
      "src/app/_components/AuthenticatedDashboard.tsx",
      "src/app/_components/PublicDashboard.tsx",
      "~/app/auth-provider"
    ],
    "src/app/profile/page.tsx": [
      "@mui/icons-material",
      "@mui/material",
      "~/app/auth-provider",
      "~/components/profile/ProfilePictureUpload",
      "~/components/ui/UserAvatar",
      "~/trpc/react"
    ],
    "src/app/providers.tsx": [
      "@mui/material/CssBaseline",
      "@mui/material/GlobalStyles",
      "@mui/material/styles",
      "react",
      "src/app/auth-provider.tsx",
      "src/app/theme.ts",
      "~/trpc/react"
    ],
    "src/app/settings/layout.tsx": [
      "@mui/material",
      "react",
      "~/components/permissions/PermissionGate",
      "~/components/ui/Breadcrumbs",
      "~/hooks/usePermissions",
      "~/server/auth/permissions.constants"
    ],
    "src/app/settings/page.tsx": [
      "@mui/icons-material",
      "@mui/material",
      "next/link",
      "react",
      "~/components/permissions/PermissionGate",
      "~/hooks/usePermissions",
      "~/server/auth/permissions.constants"
    ],
    "src/app/settings/roles/_components/RoleDialog.tsx": [
      "@mui/material",
      "react"
    ],
    "src/app/settings/roles/_components/RoleTable.tsx": [
      "@mui/icons-material",
      "@mui/material",
      "react",
      "~/hooks/usePermissions",
      "~/server/auth/permissions.constants",
      "~/trpc/react"
    ],
    "src/app/settings/roles/page.tsx": [
      "@mui/icons-material",
      "@mui/material",
      "react",
      "src/app/settings/roles/_components/RoleDialog.tsx",
      "src/app/settings/roles/_components/RoleTable.tsx",
      "~/hooks/usePermissions",
      "~/server/auth/permissions.constants"
    ],
    "src/app/settings/users/_components/InviteUserDialog.tsx": [
      "@mui/material",
      "react"
    ],
    "src/app/settings/users/_components/UserTable.tsx": [
      "@mui/icons-material",
      "@mui/material",
      "react",
      "~/hooks/usePermissions",
      "~/server/auth/permissions.constants",
      "~/trpc/react"
    ],
    "src/app/settings/users/page.tsx": [
      "@mui/icons-material",
      "@mui/material",
      "react",
      "src/app/settings/users/_components/InviteUserDialog.tsx",
      "src/app/settings/users/_components/UserTable.tsx",
      "~/hooks/usePermissions",
      "~/server/auth/permissions.constants"
    ],
    "src/app/sign-in/page.tsx": [
      "@mui/icons-material",
      "@mui/material",
      "drizzle-orm",
      "next/navigation",
      "~/app/auth-provider",
      "~/lib/auth/dev-auth",
      "~/lib/environment-client",
      "~/lib/supabase/client"
    ],
    "src/components/issues/ActiveFilters.tsx": [
      "@mui/icons-material",
      "@mui/material",
      "~/trpc/react"
    ],
    "src/components/issues/AdvancedFiltersDropdown.tsx": [
      "@mui/icons-material",
      "@mui/material",
      "react",
      "~/trpc/react"
    ],
    "src/components/issues/FilterToolbar.tsx": [
      "@mui/icons-material",
      "@mui/material",
      "react",
      "src/components/issues/AdvancedFiltersDropdown.tsx",
      "src/components/issues/GameFilterDropdown.tsx",
      "src/components/issues/SearchTextField.tsx",
      "src/components/issues/StatusTogglePills.tsx",
      "~/trpc/react"
    ],
    "src/components/issues/GameFilterDropdown.tsx": [
      "@mui/material",
      "react",
      "~/trpc/react"
    ],
    "src/components/issues/IssueActions.tsx": [
      "@mui/icons-material",
      "@mui/material",
      "react",
      "~/components/permissions",
      "~/trpc/react",
      "~/lib/types/api"
    ],
    "src/components/issues/IssueComments.tsx": [
      "@mui/material",
      "react",
      "~/components/permissions",
      "~/trpc/react",
      "~/lib/types/api"
    ],
    "src/components/issues/IssueCreateForm.tsx": [
      "@mui/material",
      "react",
      "react",
      "src/components/issues/MachineSelector.tsx",
      "~/components/permissions",
      "~/hooks/usePermissions",
      "~/trpc/react"
    ],
    "src/components/issues/IssueCreateView.tsx": [
      "@mui/material",
      "react",
      "src/components/issues/IssueCreateForm.tsx",
      "src/components/issues/RecentIssuesSidebar.tsx"
    ],
    "src/components/issues/IssueDetail.tsx": ["@mui/material", "react"],
    "src/components/issues/IssueDetailView.tsx": [
      "@mui/material",
      "@mui/material/Grid",
      "react",
      "react",
      "src/components/issues/IssueActions.tsx",
      "src/components/issues/IssueComments.tsx",
      "src/components/issues/IssueDetail.tsx",
      "src/components/issues/IssueStatusControl.tsx",
      "src/components/issues/IssueTimeline.tsx",
      "~/components/permissions",
      "~/hooks/usePermissions",
      "~/trpc/react"
    ],
    "src/components/issues/IssueList.tsx": [
      "@mui/icons-material",
      "@mui/material",
      "next/navigation",
      "next/link",
      "react",
      "src/components/issues/ActiveFilters.tsx",
      "src/components/issues/FilterToolbar.tsx",
      "~/components/permissions/PermissionGate",
      "~/hooks/usePermissions",
      "~/trpc/react",
      "~/lib/issues/filterUtils",
      "~/lib/issues/urlUtils",
      "~/lib/issues/selectionUtils"
    ],
    "src/components/issues/IssueStatusControl.tsx": [
      "@mui/material",
      "react",
      "react",
      "~/trpc/react",
      "~/lib/types/api"
    ],
    "src/components/issues/IssueTimeline.tsx": [
      "@mui/icons-material",
      "@mui/material",
      "~/lib/types/api"
    ],
    "src/components/issues/MachineSelector.tsx": [
      "@mui/material",
      "react",
      "~/trpc/react"
    ],
    "src/components/issues/RecentIssuesSidebar.tsx": [
      "@mui/material",
      "react",
      "~/trpc/react"
    ],
    "src/components/issues/SearchTextField.tsx": [
      "@mui/icons-material",
      "@mui/material",
      "react"
    ],
    "src/components/issues/StatusCategoryMultiSelect.tsx": [
      "@mui/material",
      "react",
      "~/trpc/react"
    ],
    "src/components/issues/StatusTogglePills.tsx": [
      "@mui/material",
      "react",
      "~/trpc/react"
    ],
    "src/components/locations/LocationDetailView.tsx": [
      "@mui/icons-material",
      "@mui/material",
      "src/components/locations/MachineGrid.tsx",
      "~/components/permissions",
      "~/hooks/usePermissions"
    ],
    "src/components/locations/LocationList.tsx": [
      "@mui/icons-material",
      "@mui/material",
      "next/navigation"
    ],
    "src/components/locations/MachineGrid.tsx": [
      "@mui/icons-material",
      "@mui/material",
      "next/navigation",
      "react"
    ],
    "src/components/machines/MachineDetailView.tsx": [
      "@mui/icons-material",
      "@mui/material",
      "next/link",
      "~/components/permissions",
      "~/hooks/usePermissions"
    ],
    "src/components/permissions/PermissionButton.tsx": [
      "@mui/material",
      "react",
      "~/server/auth/permissions.constants"
    ],
    "src/components/permissions/PermissionGate.tsx": ["react"],
    "src/components/profile/ProfilePictureUpload.tsx": [
      "@mui/icons-material",
      "@mui/material",
      "~/components/ui/UserAvatar",
      "~/lib/utils/image-processing",
      "~/trpc/react"
    ],
    "src/components/ui/Breadcrumbs.tsx": [
      "@mui/material",
      "next/link",
      "next/navigation",
      "react"
    ],
    "src/components/ui/UserAvatar.tsx": ["@mui/material", "react"],
    "src/contexts/PermissionDepsContext.tsx": [
      "react",
      "~/app/auth-provider",
      "~/trpc/react"
    ],
    "src/env.js": ["@t3-oss/env-nextjs", "zod"],
    "src/hooks/usePermissions.ts": [
      "next/navigation",
      "react",
      "~/contexts/PermissionDepsContext",
      "~/lib/permissions/descriptions"
    ],
    "src/lib/auth/dev-auth-server.ts": [
      "~/lib/environment",
      "~/lib/supabase/server"
    ],
    "src/lib/auth/dev-auth.ts": [
      "src/lib/auth/dev-auth-server.ts",
      "~/lib/environment-client"
    ],
    "src/lib/common/__tests__/inputValidation.test.ts": [
      "vitest",
      "zod",
      "src/lib/common/inputValidation.ts"
    ],
    "src/lib/common/inputValidation.ts": ["zod"],
    "src/lib/env-loaders/development.ts": ["path", "url", "dotenv"],
    "src/lib/env-loaders/production.ts": ["path", "url", "dotenv"],
    "src/lib/environment-client.ts": ["~/env"],
    "src/lib/environment.ts": ["~/env"],
    "src/lib/hooks/use-current-user.ts": [
      "~/app/auth-provider",
      "~/trpc/react"
    ],
    "src/lib/image-storage/local-storage.ts": [
      "fs",
      "fs/promises",
      "path",
      "src/lib/image-storage/index.ts"
    ],
    "src/lib/logger.ts": [
      "pino",
      "~/env.js",
      "~/lib/environment",
      "~/lib/logger-constants"
    ],
    "src/lib/opdb/client.ts": ["src/lib/opdb/utils.ts", "~/env"],
    "src/lib/supabase/client.ts": ["@supabase/ssr", "~/env"],
    "src/lib/supabase/multi-tenant-client.ts": [
      "src/lib/supabase/server.ts",
      "src/lib/supabase/rls-helpers.ts"
    ],
    "src/lib/supabase/rls-helpers.ts": ["src/lib/supabase/server.ts"],
    "src/lib/supabase/server.ts": ["@supabase/ssr", "next/headers", "~/env"],
    "src/lib/temp-production-overrides.ts": ["~/env"],
    "src/lib/tracing.ts": ["async_hooks", "uuid", "~/lib/logger-constants"],
    "src/lib/utils/api-response-transformers.ts": [
      "src/lib/utils/case-transformers.ts"
    ],
    "src/lib/utils/auth-response-transformers.ts": [
      "src/lib/utils/case-transformers.ts"
    ],
    "src/lib/utils/case-transformers.ts": ["drizzle-orm"],
    "src/lib/utils/id-generation.ts": ["uuid"],
    "src/lib/utils/machine-response-transformers.ts": [
      "src/lib/utils/case-transformers.ts"
    ],
    "src/lib/utils/membership-transformers.ts": [
      "src/lib/utils/case-transformers.ts"
    ],
    "src/server/api/routers/issue.comment.ts": [
      "@trpc/server",
      "drizzle-orm",
      "zod",
      "src/server/api/routers/utils/commentService.ts",
      "src/server/api/routers/utils/commentValidation.ts",
      "~/lib/utils/id-generation",
      "~/lib/utils/case-transformers",
      "~/lib/utils/api-response-transformers",
      "~/server/api/trpc",
      "~/server/db/schema"
    ],
    "src/server/api/routers/issue.status.ts": [
      "drizzle-orm",
      "uuid",
      "zod",
      "~/lib/utils/case-transformers",
      "~/server/api/trpc",
      "~/server/db/schema/issues"
    ],
    "src/server/api/routers/role.ts": [
      "@trpc/server",
      "drizzle-orm",
      "zod",
      "~/lib/utils/id-generation",
      "~/lib/users/roleManagementValidation",
      "~/server/auth/permissions.constants",
      "~/server/api/trpc",
      "~/server/api/trpc.permission",
      "~/server/db/schema",
      "~/server/db/types"
    ],
    "src/server/api/routers/utils/commentService.ts": [
      "drizzle-orm",
      "~/server/db/schema",
      "~/lib/utils/case-transformers"
    ],
    "src/server/api/trpc.base.ts": [
      "@trpc/server",
      "drizzle-orm",
      "superjson",
      "zod",
      "~/env",
      "~/lib/logger",
      "~/lib/logger-constants",
      "~/lib/supabase/server",
      "~/lib/supabase/rls-helpers",
      "~/lib/tracing",
      "~/server/auth/permissions",
      "~/server/auth/supabase",
      "~/server/db/provider",
      "~/server/db/schema",
      "~/server/services/factory"
    ],
    "src/server/api/trpc.permission.ts": [
      "src/server/api/trpc.base.ts",
      "~/server/auth/permissions"
    ],
    "src/server/auth/permissions.ts": [
      "@trpc/server",
      "drizzle-orm",
      "src/server/services/permissionService.ts",
      "src/server/auth/permissions.constants.ts",
      "~/server/db/drizzle",
      "~/server/db/schema"
    ],
    "src/server/auth/supabase.ts": ["~/lib/logger", "~/lib/supabase/server"],
    "src/server/auth/uploadAuth.ts": [
      "@trpc/server",
      "drizzle-orm",
      "next/server",
      "src/server/auth/supabase.ts",
      "src/server/auth/types.ts",
      "~/lib/utils/case-transformers",
      "~/env",
      "~/server/db/schema"
    ],
    "src/server/auth/validation.ts": [
      "~/env.js",
      "~/lib/environment",
      "~/lib/logger"
    ],
    "src/server/db/client-factory.ts": [
      "drizzle-orm/postgres-js",
      "drizzle-orm/pglite"
    ],
    "src/server/db/drizzle.ts": [
      "src/server/db/client-factory.ts",
      "postgres",
      "~/env",
      "~/lib/environment"
    ],
    "src/server/db/provider.ts": ["~/server/db/drizzle"],
    "src/server/db/queries/audit-queries.ts": [
      "~/server/db/provider",
      "~/server/db/schema",
      "drizzle-orm"
    ],
    "src/server/db/seed/auth-users.ts": [
      "@supabase/supabase-js",
      "nanoid",
      "~/server/db/drizzle",
      "~/env.js",
      "src/server/db/seed/constants.ts",
      "src/server/db/seed/seed-utilities.ts",
      "~/server/db/schema",
      "drizzle-orm"
    ],
    "src/server/db/seed/full-issues.ts": ["src/server/db/seed/constants.ts"],
    "src/server/db/seed/index.ts": [
      "~/lib/environment",
      "~/env.js",
      "src/server/db/seed/seed-utilities.ts",
      "src/server/db/seed/infrastructure.ts",
      "src/server/db/seed/auth-users.ts",
      "src/server/db/seed/sample-data.ts"
    ],
    "src/server/db/seed/infrastructure.ts": [
      "drizzle-orm",
      "~/server/db/drizzle",
      "src/server/db/seed/constants.ts",
      "src/server/db/seed/seed-utilities.ts",
      "~/server/db/schema",
      "~/server/auth/permissions.constants"
    ],
    "src/server/db/seed/sample-data.ts": [
      "drizzle-orm",
      "~/server/db/drizzle",
      "src/server/db/seed/constants.ts",
      "src/server/db/seed/seed-utilities.ts",
      "~/server/db/schema",
      "src/server/db/seed/minimal-issues.ts",
      "src/server/db/seed/full-issues.ts"
    ],
    "src/server/db/seed/seed-utilities.ts": [
      "src/server/db/seed/constants.ts",
      "~/env.js"
    ],
    "src/server/db/setup-rls.ts": [
      "dotenv",
      "~/env.js",
      "fs",
      "url",
      "path",
      "postgres"
    ],
    "src/server/db/utils/common-queries.ts": [
      "drizzle-orm",
      "src/server/db/utils/field-validation.ts",
      "~/env.js"
    ],
    "src/server/db/utils/field-validation.ts": ["~/env.js"],
    "src/server/db/utils/role-validation.ts": [
      "@trpc/server",
      "drizzle-orm",
      "~/server/auth/permissions.constants",
      "~/server/db/schema"
    ],
    "src/server/services/collectionService.service.test.ts": [
      "vitest",
      "src/server/services/collectionService.ts",
      "~/test/helpers/service-test-helpers"
    ],
    "src/server/services/collectionService.ts": [
      "drizzle-orm",
      "~/lib/utils/id-generation"
    ],
    "src/server/services/commentCleanupService.ts": [
      "drizzle-orm",
      "drizzle-orm",
      "~/server/constants/cleanup",
      "~/server/db/drizzle",
      "~/server/db/schema"
    ],
    "src/server/services/factory.ts": [
      "src/server/services/collectionService.ts",
      "src/server/services/commentCleanupService.ts",
      "src/server/services/issueActivityService.ts",
      "src/server/services/notificationService.ts",
      "src/server/services/pinballmapService.ts",
      "src/server/services/qrCodeService.ts",
      "src/server/services/roleService.ts"
    ],
    "src/server/services/issueActivityService.ts": [
      "drizzle-orm",
      "src/server/db/drizzle.ts",
      "~/lib/utils/id-generation"
    ],
    "src/server/services/notificationService.ts": [
      "drizzle-orm",
      "~/lib/utils/id-generation",
      "~/server/db/drizzle",
      "~/server/db/schema"
    ],
    "src/server/services/permissionService.ts": [
      "@trpc/server",
      "drizzle-orm",
      "src/server/auth/permissions.constants.ts",
      "~/server/db/drizzle"
    ],
    "src/server/services/pinballmapService.ts": [
      "drizzle-orm",
      "~/lib/external/pinballmapTransformer",
      "~/lib/logger",
      "~/server/db/schema"
    ],
    "src/server/services/qrCodeService.ts": [
      "drizzle-orm",
      "qrcode",
      "~/lib/image-storage/local-storage",
      "~/lib/logger",
      "src/server/db/drizzle.ts",
      "src/server/utils/qrCodeUtils.ts"
    ],
    "src/server/services/roleService.ts": [
      "@trpc/server",
      "drizzle-orm",
      "src/server/auth/permissions.constants.ts",
      "src/server/services/permissionService.ts",
      "~/lib/utils/id-generation",
      "~/server/db/drizzle",
      "~/server/db/schema"
    ],
    "src/server/services/types.ts": [
      "~/server/db/schema/collections",
      "~/server/db/schema/issues"
    ],
    "src/server/services/validation-helper.ts": ["~/env.js"],
    "src/test/archived-templates/service.test.template.ts": [
      "vitest",
      "@trpc/server",
      "src/test/helpers/service-test-helpers.ts"
    ],
    "src/test/helpers/anonymous-test-helpers.ts": [
      "vitest",
      "vitest-mock-extended",
      "src/test/constants/seed-test-ids.ts",
      "src/test/helpers/service-test-helpers.ts"
    ],
    "src/test/helpers/service-test-helpers.ts": [
      "vitest",
      "vitest-mock-extended",
      "src/test/constants/seed-test-ids.ts"
    ],
    "src/test/templates/service.test.template.ts": [
      "vitest",
      "@trpc/server",
      "~/test/helpers/service-test-helpers"
    ],
    "src/trpc/query-client.ts": ["@tanstack/react-query", "superjson"],
    "src/trpc/react.tsx": [
      "@tanstack/react-query",
      "@trpc/client",
      "@trpc/react-query",
      "@trpc/server",
      "react",
      "superjson",
      "src/trpc/query-client.ts",
      "~/env",
      "~/lib/environment-client",
      "~/server/api/root"
    ]
  },
  "dir_purposes": {
    ".archived-tests-2025-08-23": "Test files and test utilities",
    ".archived-tests-2025-08-23/config": "Configuration files and settings",
    ".archived-tests-2025-08-23/e2e": "Test files and test utilities",
    ".archived-tests-2025-08-23/e2e/helpers": "Helper functions and utilities",
    ".archived-tests-2025-08-23/src/app/api/dev/__tests__": "Test files and test utilities",
    ".archived-tests-2025-08-23/src/app/dashboard/_components/__tests__": "Test files and test utilities",
    ".archived-tests-2025-08-23/src/app/games/[id]/__tests__": "Test files and test utilities",
    ".archived-tests-2025-08-23/src/app/games/__tests__": "Test files and test utilities",
    ".archived-tests-2025-08-23/src/app/issues/__tests__": "Test files and test utilities",
    ".archived-tests-2025-08-23/src/app/machines/[id]": "Test files and test utilities",
    ".archived-tests-2025-08-23/src/app/machines/components": "Reusable UI components",
    ".archived-tests-2025-08-23/src/components/issues/__tests__": "Test files and test utilities",
    ".archived-tests-2025-08-23/src/components": "Reusable UI components",
    ".archived-tests-2025-08-23/src/components/locations/__tests__": "Test files and test utilities",
    ".archived-tests-2025-08-23/src/components/machines/__tests__": "Test files and test utilities",
    ".archived-tests-2025-08-23/src/components/permissions/__tests__": "Test files and test utilities",
    ".archived-tests-2025-08-23/src/hooks/__tests__": "Test files and test utilities",
    ".archived-tests-2025-08-23/src/integration-tests": "Test files and test utilities",
    ".archived-tests-2025-08-23/src/lib/common/__tests__": "Test files and test utilities",
    ".archived-tests-2025-08-23/src/lib/environment-client/__tests__": "Test files and test utilities",
    ".archived-tests-2025-08-23/src/lib/external/__tests__": "Test files and test utilities",
    ".archived-tests-2025-08-23/src/lib/issues/__tests__": "Test files and test utilities",
    ".archived-tests-2025-08-23/src/lib/opdb/__tests__": "Test files and test utilities",
    ".archived-tests-2025-08-23/src/lib/permissions/__tests__": "Test files and test utilities",
    ".archived-tests-2025-08-23/src/lib/pinballmap/__tests__": "Test files and test utilities",
    ".archived-tests-2025-08-23/src/lib/supabase/__tests__": "Test files and test utilities",
    ".archived-tests-2025-08-23/src/lib/users/__tests__": "Test files and test utilities",
    ".archived-tests-2025-08-23/src/server/api/__tests__": "Test files and test utilities",
    ".archived-tests-2025-08-23/src/server/api/routers/__tests__": "Test files and test utilities",
    ".archived-tests-2025-08-23/src/server/api/routers/utils/__tests__": "Test files and test utilities",
    ".archived-tests-2025-08-23/src/server/auth/__tests__": "Test files and test utilities",
    ".archived-tests-2025-08-23/src/server/db/__tests__": "Test files and test utilities",
    ".archived-tests-2025-08-23/src/server/services/__tests__": "Test files and test utilities",
    ".archived-tests-2025-08-23/src/test": "Test files and test utilities",
    ".archived-tests-2025-08-23/src/test/__examples__": "Test files and test utilities",
    ".archived-tests-2025-08-23/src/test/__tests__": "Test files and test utilities",
    ".archived-tests-2025-08-23/src/test/constants": "Test files and test utilities",
    ".archived-tests-2025-08-23/src/test/examples": "Test files and test utilities",
    ".archived-tests-2025-08-23/src/test/helpers/__tests__": "Test files and test utilities",
    ".archived-tests-2025-08-23/src/test/helpers": "Helper functions and utilities",
    ".archived-tests-2025-08-23/src/test/setup": "Test files and test utilities",
    ".archived-tests-2025-08-23/src/test/templates": "Test files and test utilities",
    ".archived-tests-2025-08-23/src/test/utils": "Shared utility functions and helpers",
    "docs": "Project documentation",
    "docs/architecture": "API routes and endpoints",
    "docs/configuration": "Configuration files and settings",
    "docs/deprecated": "Test files and test utilities",
    "docs/deprecated/testing": "Test files and test utilities",
    "docs/design-docs": "Project documentation",
    "docs/latest-updates": "Test files and test utilities",
    "docs/lessons-learned": "API routes and endpoints",
    "docs/planning/archive": "Test files and test utilities",
    "docs/quick-reference": "Test files and test utilities",
    "docs/security": "Test files and test utilities",
    "docs/testing": "Test files and test utilities",
    "e2e/helpers": "Helper functions and utilities",
    "e2e": "Test files and test utilities",
    "scripts": "Build and utility scripts",
    "src": "Source code root directory",
    "src/app/_components": "Reusable UI components",
    "src/app/api/dev/users": "API routes and endpoints",
    "src/app/api/health": "API routes and endpoints",
    "src/app/api/qr/[qrCodeId]": "API routes and endpoints",
    "src/app/api/trpc/[trpc]": "API routes and endpoints",
    "src/app/dashboard/_components": "Reusable UI components",
    "src/app/machines/components": "Reusable UI components",
    "src/app/settings/roles/_components": "Reusable UI components",
    "src/app/settings/users/_components": "Reusable UI components",
    "src/lib/auth": "Authentication and authorization logic",
    "src/lib": "Library code and shared modules",
    "src/lib/common/__tests__": "Test files and test utilities",
    "src/lib/utils": "Shared utility functions and helpers",
    "src/lib/utils/__tests__": "Test files and test utilities",
    "src/server/api": "API endpoints and route handlers",
    "src/server/api/routers": "Data models and schemas",
    "src/server/api/routers/utils": "Shared utility functions and helpers",
    "src/server/auth": "Authentication and authorization logic",
    "src/server/db/utils/__tests__": "Test files and test utilities",
    "src/server/db/utils": "Shared utility functions and helpers",
    "src/server/services": "Business logic and external service integrations",
    "src/server/utils": "Shared utility functions and helpers",
    "src/test": "Test files and test utilities",
    "src/test/archived-templates": "Test files and test utilities",
    "src/test/constants": "Test files and test utilities",
    "src/test/helpers": "Helper functions and utilities",
    "src/test/templates": "Test files and test utilities",
    "src/utils": "Shared utility functions and helpers",
    "supabase/tests": "Test files and test utilities",
    "supabase/tests/rls": "Test files and test utilities",
    "supabase/tests/setup": "Test files and test utilities"
  },
  "staleness": 1755517993.041577,
  "_meta": {
    "target_size_k": 50,
    "generated_at": 1756122793.0513444,
    "actual_size_k": 48,
    "files_hash": "99a3ef6d455b5e99",
    "compression_ratio": "96.0%",
    "last_interactive_size_k": 50
  }
}
