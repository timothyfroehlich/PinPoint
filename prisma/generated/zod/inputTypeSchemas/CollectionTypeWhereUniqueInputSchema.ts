import type { Prisma } from '@prisma/client';

import { z } from 'zod';
import { CollectionTypeNameOrganizationIdCompoundUniqueInputSchema } from './CollectionTypeNameOrganizationIdCompoundUniqueInputSchema';
import { CollectionTypeWhereInputSchema } from './CollectionTypeWhereInputSchema';
import { StringFilterSchema } from './StringFilterSchema';
import { BoolFilterSchema } from './BoolFilterSchema';
import { StringNullableFilterSchema } from './StringNullableFilterSchema';
import { JsonNullableFilterSchema } from './JsonNullableFilterSchema';
import { IntFilterSchema } from './IntFilterSchema';
import { OrganizationScalarRelationFilterSchema } from './OrganizationScalarRelationFilterSchema';
import { OrganizationWhereInputSchema } from './OrganizationWhereInputSchema';
import { CollectionListRelationFilterSchema } from './CollectionListRelationFilterSchema';

export const CollectionTypeWhereUniqueInputSchema: z.ZodType<Prisma.CollectionTypeWhereUniqueInput> = z.union([
  z.object({
    id: z.string().cuid(),
    name_organizationId: z.lazy(() => CollectionTypeNameOrganizationIdCompoundUniqueInputSchema)
  }),
  z.object({
    id: z.string().cuid(),
  }),
  z.object({
    name_organizationId: z.lazy(() => CollectionTypeNameOrganizationIdCompoundUniqueInputSchema),
  }),
])
.and(z.object({
  id: z.string().cuid().optional(),
  name_organizationId: z.lazy(() => CollectionTypeNameOrganizationIdCompoundUniqueInputSchema).optional(),
  AND: z.union([ z.lazy(() => CollectionTypeWhereInputSchema),z.lazy(() => CollectionTypeWhereInputSchema).array() ]).optional(),
  OR: z.lazy(() => CollectionTypeWhereInputSchema).array().optional(),
  NOT: z.union([ z.lazy(() => CollectionTypeWhereInputSchema),z.lazy(() => CollectionTypeWhereInputSchema).array() ]).optional(),
  name: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  organizationId: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),
  isAutoGenerated: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  isEnabled: z.union([ z.lazy(() => BoolFilterSchema),z.boolean() ]).optional(),
  sourceField: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  generationRules: z.lazy(() => JsonNullableFilterSchema).optional(),
  displayName: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  description: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),
  sortOrder: z.union([ z.lazy(() => IntFilterSchema),z.number().int() ]).optional(),
  organization: z.union([ z.lazy(() => OrganizationScalarRelationFilterSchema),z.lazy(() => OrganizationWhereInputSchema) ]).optional(),
  collections: z.lazy(() => CollectionListRelationFilterSchema).optional()
}).strict());

export default CollectionTypeWhereUniqueInputSchema;
