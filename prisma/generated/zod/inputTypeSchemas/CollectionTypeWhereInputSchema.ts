import type { Prisma } from "@prisma/client";

import { z } from "zod";
import { StringFilterSchema } from "./StringFilterSchema";
import { BoolFilterSchema } from "./BoolFilterSchema";
import { StringNullableFilterSchema } from "./StringNullableFilterSchema";
import { JsonNullableFilterSchema } from "./JsonNullableFilterSchema";
import { IntFilterSchema } from "./IntFilterSchema";
import { OrganizationScalarRelationFilterSchema } from "./OrganizationScalarRelationFilterSchema";
import { OrganizationWhereInputSchema } from "./OrganizationWhereInputSchema";
import { CollectionListRelationFilterSchema } from "./CollectionListRelationFilterSchema";

export const CollectionTypeWhereInputSchema: z.ZodType<Prisma.CollectionTypeWhereInput> =
  z
    .object({
      AND: z
        .union([
          z.lazy(() => CollectionTypeWhereInputSchema),
          z.lazy(() => CollectionTypeWhereInputSchema).array(),
        ])
        .optional(),
      OR: z
        .lazy(() => CollectionTypeWhereInputSchema)
        .array()
        .optional(),
      NOT: z
        .union([
          z.lazy(() => CollectionTypeWhereInputSchema),
          z.lazy(() => CollectionTypeWhereInputSchema).array(),
        ])
        .optional(),
      id: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
      name: z.union([z.lazy(() => StringFilterSchema), z.string()]).optional(),
      organizationId: z
        .union([z.lazy(() => StringFilterSchema), z.string()])
        .optional(),
      isAutoGenerated: z
        .union([z.lazy(() => BoolFilterSchema), z.boolean()])
        .optional(),
      isEnabled: z
        .union([z.lazy(() => BoolFilterSchema), z.boolean()])
        .optional(),
      sourceField: z
        .union([z.lazy(() => StringNullableFilterSchema), z.string()])
        .optional()
        .nullable(),
      generationRules: z.lazy(() => JsonNullableFilterSchema).optional(),
      displayName: z
        .union([z.lazy(() => StringNullableFilterSchema), z.string()])
        .optional()
        .nullable(),
      description: z
        .union([z.lazy(() => StringNullableFilterSchema), z.string()])
        .optional()
        .nullable(),
      sortOrder: z
        .union([z.lazy(() => IntFilterSchema), z.number()])
        .optional(),
      organization: z
        .union([
          z.lazy(() => OrganizationScalarRelationFilterSchema),
          z.lazy(() => OrganizationWhereInputSchema),
        ])
        .optional(),
      collections: z.lazy(() => CollectionListRelationFilterSchema).optional(),
    })
    .strict() as z.ZodType<Prisma.CollectionTypeWhereInput>;

export default CollectionTypeWhereInputSchema;
