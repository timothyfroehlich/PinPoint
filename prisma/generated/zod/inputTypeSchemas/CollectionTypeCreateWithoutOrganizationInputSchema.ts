import type { Prisma } from '@prisma/client';

import { z } from 'zod';
import { NullableJsonNullValueInputSchema } from './NullableJsonNullValueInputSchema';
import { InputJsonValueSchema } from './InputJsonValueSchema';
import { CollectionCreateNestedManyWithoutTypeInputSchema } from './CollectionCreateNestedManyWithoutTypeInputSchema';

export const CollectionTypeCreateWithoutOrganizationInputSchema: z.ZodType<Prisma.CollectionTypeCreateWithoutOrganizationInput> = z.object({
  id: z.string().cuid().optional(),
  name: z.string(),
  isAutoGenerated: z.boolean().optional(),
  isEnabled: z.boolean().optional(),
  sourceField: z.string().optional().nullable(),
  generationRules: z.union([ z.lazy(() => NullableJsonNullValueInputSchema),InputJsonValueSchema ]).optional(),
  displayName: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  sortOrder: z.number().int().optional(),
  collections: z.lazy(() => CollectionCreateNestedManyWithoutTypeInputSchema).optional()
}).strict();

export default CollectionTypeCreateWithoutOrganizationInputSchema;
