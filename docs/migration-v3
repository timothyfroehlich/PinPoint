# Migration v3

## RLS Hardening (Simple Description)

We’re moving from a hybrid model (manual organizationId filters in queries + partially permissive local RLS) to a single authoritative security layer: database Row Level Security enforced uniformly in every environment. Supabase will supply the tenant boundary through `auth.jwt()` app_metadata (organizationId). Both local and production SQL policy files will be unified so local development no longer relies on application predicates for isolation.

Concretely, we will (1) harden the local RLS scripts to match production (replace permissive `USING (true)` policies with real org‑scoped predicates and proper insertion triggers), (2) guarantee every authenticated user session has `organizationId` in app_metadata (adding a helper to set/verify it), and (3) remove all manual `organizationId` WHERE clauses and service constructor parameters that exist solely for scoping. After this, queries express only business logic; the database enforces tenant isolation transparently.

Validation shifts to RLS-focused tests: cross‑org negative access checks, pgTAP / SQL policy assertions, and a leak test confirming no rows from another org are visible even when IDs are guessed. A small CI guard will fail if new manual org filters reappear. The outcome is simpler code, reduced risk of hidden policy gaps, and a single, auditable security boundary.
