{
  "inventoryDate": "2025-01-04",
  "totalFunctions": 12,
  "patterns": {
    "context": [
      "getRequestAuthContext",
      "getOrganizationContext",
      "getDALAuthContext",
      "getUploadAuthContext"
    ],
    "requirement": [
      "requireAuthorized",
      "requireMemberAccess",
      "requireOrganizationContext"
    ],
    "action": [
      "getActionAuthContext",
      "getServerAuthContext",
      "requireActionAuthContextWithPermission"
    ],
    "supabase": [
      "requireSupabaseUserContext"
    ],
    "rls": [
      "getUserWithOrganization"
    ]
  },
  "functions": [
    {
      "name": "getRequestAuthContext",
      "location": "src/server/auth/context.ts:64",
      "pattern": "context",
      "usageCount": 95,
      "description": "Canonical authentication resolver - returns discriminated union, never throws"
    },
    {
      "name": "requireAuthorized",
      "location": "src/server/auth/context.ts:146",
      "pattern": "requirement",
      "usageCount": 3,
      "description": "Legacy enforcement helper - throws if not authorized"
    },
    {
      "name": "requireMemberAccess",
      "location": "src/lib/organization-context.ts:88",
      "pattern": "requirement",
      "usageCount": 1,
      "description": "Legacy wrapper around canonical resolver - heavily used historically"
    },
    {
      "name": "getOrganizationContext",
      "location": "src/lib/organization-context.ts:44",
      "pattern": "context",
      "usageCount": 1,
      "description": "Legacy wrapper around canonical resolver - returns null if no context"
    },
    {
      "name": "requireOrganizationContext",
      "location": "src/lib/organization-context.ts:68",
      "pattern": "requirement",
      "usageCount": 2,
      "description": "Legacy wrapper around canonical resolver - throws if no context"
    },
    {
      "name": "getActionAuthContext",
      "location": "src/lib/actions/shared.ts:29",
      "pattern": "action",
      "usageCount": 1,
      "description": "Server Action authentication context with redirect handling"
    },
    {
      "name": "getServerAuthContext",
      "location": "src/lib/actions/shared.ts:54",
      "pattern": "action",
      "usageCount": 0,
      "description": "Alias for getActionAuthContext - DAL compatibility"
    },
    {
      "name": "requireActionAuthContextWithPermission",
      "location": "src/lib/actions/shared.ts:60",
      "pattern": "action",
      "usageCount": 0,
      "description": "Combined auth + permission check for Server Actions"
    },
    {
      "name": "getDALAuthContext",
      "location": "src/lib/dal/shared.ts:20",
      "pattern": "context",
      "usageCount": 0,
      "description": "Pure auth context without organizational dependencies"
    },
    {
      "name": "requireSupabaseUserContext",
      "location": "src/lib/supabase/server.ts:195",
      "pattern": "supabase",
      "usageCount": 0,
      "description": "Supabase-specific user context with organizationId from app_metadata"
    },
    {
      "name": "getUserWithOrganization",
      "location": "src/lib/supabase/rls-helpers.ts:119",
      "pattern": "rls",
      "usageCount": 3,
      "description": "RLS helper for organization scoping and database session setup"
    },
    {
      "name": "getUploadAuthContext",
      "location": "src/server/auth/uploadAuth.ts:53",
      "pattern": "context",
      "usageCount": 0,
      "description": "Upload-specific authentication context for file operations"
    }
  ],
  "highUsageFunctions": [
    {
      "name": "getRequestAuthContext",
      "usageCount": 95
    }
  ],
  "duplicateNames": []
}
