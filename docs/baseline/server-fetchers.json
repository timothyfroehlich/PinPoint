{
  "inventoryDate": "2025-01-04",
  "totalFetchers": 35,
  "cacheWrapped": 35,
  "uncachedFetchers": [],
  "fetchers": [
    {
      "name": "getRequestAuthContext",
      "location": "src/server/auth/context.ts:64",
      "isCached": true,
      "isAsync": true,
      "returnType": "Promise<AuthContext>",
      "usesAuth": false,
      "authPattern": "self",
      "callSites": ["95+ locations across codebase"]
    },
    {
      "name": "getOrganizationContext", 
      "location": "src/lib/organization-context.ts:44",
      "isCached": true,
      "isAsync": true,
      "returnType": "Promise<OrganizationContext | null>",
      "usesAuth": true,
      "authPattern": "getRequestAuthContext",
      "callSites": []
    },
    {
      "name": "requireOrganizationContext",
      "location": "src/lib/organization-context.ts:68", 
      "isCached": true,
      "isAsync": true,
      "returnType": "Promise<OrganizationContext>",
      "usesAuth": true,
      "authPattern": "requireAuthorized",
      "callSites": ["src/lib/organization-context.ts:138", "src/lib/organization-context.ts:156"]
    },
    {
      "name": "requireMemberAccess",
      "location": "src/lib/organization-context.ts:88",
      "isCached": true,
      "isAsync": true, 
      "returnType": "Promise<OrganizationContext>",
      "usesAuth": true,
      "authPattern": "requireAuthorized",
      "callSites": ["src/app/settings/layout.tsx:32"]
    },
    {
      "name": "resolveOrganization",
      "location": "src/lib/organization-context.ts:26",
      "isCached": true,
      "isAsync": true,
      "returnType": "Promise<Organization | null>",
      "usesAuth": false,
      "authPattern": "none",
      "callSites": []
    },
    {
      "name": "getUserMembership",
      "location": "src/lib/organization-context.ts:34",
      "isCached": true,
      "isAsync": true,
      "returnType": "Promise<Membership | null>",
      "usesAuth": false,
      "authPattern": "none",
      "callSites": []
    },
    {
      "name": "setupOrganizationContext",
      "location": "src/lib/organization-context.ts:136",
      "isCached": true,
      "isAsync": true,
      "returnType": "Promise<OrganizationContext>",
      "usesAuth": true,
      "authPattern": "requireOrganizationContext",
      "callSites": []
    },
    {
      "name": "getActionAuthContext",
      "location": "src/lib/actions/shared.ts:29",
      "isCached": true,
      "isAsync": true,
      "returnType": "Promise<{user: User, organizationId: string}>",
      "usesAuth": true,
      "authPattern": "getRequestAuthContext",
      "callSites": []
    },
    {
      "name": "getDALAuthContext",
      "location": "src/lib/dal/shared.ts:20",
      "isCached": true,
      "isAsync": true,
      "returnType": "Promise<{user: User | null}>",
      "usesAuth": true,
      "authPattern": "supabaseClient",
      "callSites": []
    },
    {
      "name": "performUniversalSearch",
      "location": "src/lib/services/search-service.ts:67",
      "isCached": true,
      "isAsync": true,
      "returnType": "Promise<UniversalSearchResults>",
      "usesAuth": true,
      "authPattern": "organizationId",
      "callSites": []
    },
    {
      "name": "getSearchSuggestions",
      "location": "src/lib/services/search-service.ts:584",
      "isCached": true,
      "isAsync": true,
      "returnType": "Promise<SearchSuggestion[]>",
      "usesAuth": true,
      "authPattern": "organizationId",
      "callSites": []
    },
    {
      "name": "getDefaultStatus",
      "location": "src/lib/actions/issue-actions.ts:82",
      "isCached": true,
      "isAsync": true,
      "returnType": "Promise<IssueStatus | undefined>",
      "usesAuth": true,
      "authPattern": "organizationId",
      "callSites": []
    },
    {
      "name": "getDefaultPriority",
      "location": "src/lib/actions/issue-actions.ts:91",
      "isCached": true,
      "isAsync": true,
      "returnType": "Promise<Priority | undefined>",
      "usesAuth": true,
      "authPattern": "organizationId",
      "callSites": []
    },
    {
      "name": "getCommentWithAccess",
      "location": "src/lib/actions/comment-actions.ts:39",
      "isCached": true,
      "isAsync": true,
      "returnType": "Promise<Comment>",
      "usesAuth": true,
      "authPattern": "organizationId",
      "callSites": []
    },
    {
      "name": "getIssueWithAccess",
      "location": "src/lib/actions/comment-actions.ts:52",
      "isCached": true,
      "isAsync": true,
      "returnType": "Promise<Issue>",
      "usesAuth": true,
      "authPattern": "organizationId",
      "callSites": []
    },
    {
      "name": "getMachinesWithFilters",
      "location": "src/lib/dal/machines.ts:65",
      "isCached": true,
      "isAsync": true,
      "returnType": "Promise<Machine[]>",
      "usesAuth": true,
      "authPattern": "organizationId",
      "callSites": []
    },
    {
      "name": "getMachinesForOrg",
      "location": "src/lib/dal/machines.ts:204",
      "isCached": true,
      "isAsync": true,
      "returnType": "Promise<Machine[]>",
      "usesAuth": true,
      "authPattern": "organizationId",
      "callSites": []
    },
    {
      "name": "getMachineById",
      "location": "src/lib/dal/machines.ts:213",
      "isCached": true,
      "isAsync": true,
      "returnType": "Promise<Machine | null>",
      "usesAuth": true,
      "authPattern": "organizationId",
      "callSites": []
    },
    {
      "name": "getMachineStats",
      "location": "src/lib/dal/machines.ts:257",
      "isCached": true,
      "isAsync": true,
      "returnType": "Promise<MachineStats>",
      "usesAuth": true,
      "authPattern": "organizationId",
      "callSites": []
    },
    {
      "name": "getLocationsForOrg",
      "location": "src/lib/dal/machines.ts:327",
      "isCached": true,
      "isAsync": true,
      "returnType": "Promise<Location[]>",
      "usesAuth": true,
      "authPattern": "organizationId",
      "callSites": []
    },
    {
      "name": "getModelsForOrg",
      "location": "src/lib/dal/machines.ts:342",
      "isCached": true,
      "isAsync": true,
      "returnType": "Promise<Model[]>",
      "usesAuth": true,
      "authPattern": "organizationId",
      "callSites": []
    },
    {
      "name": "getOrganizationById",
      "location": "src/lib/dal/organizations.ts:27",
      "isCached": true,
      "isAsync": true,
      "returnType": "Promise<Organization | null>",
      "usesAuth": true,
      "authPattern": "organizationId",
      "callSites": []
    },
    {
      "name": "getCurrentOrganization",
      "location": "src/lib/dal/organizations.ts:60",
      "isCached": true,
      "isAsync": true,
      "returnType": "Promise<Organization>",
      "usesAuth": true,
      "authPattern": "organizationId",
      "callSites": []
    },
    {
      "name": "getOrganizationStats",
      "location": "src/lib/dal/organizations.ts:88",
      "isCached": true,
      "isAsync": true,
      "returnType": "Promise<OrganizationStats>",
      "usesAuth": true,
      "authPattern": "organizationId",
      "callSites": []
    },
    {
      "name": "getOrganizationMembers",
      "location": "src/lib/dal/organizations.ts:182",
      "isCached": true,
      "isAsync": true,
      "returnType": "Promise<Member[]>",
      "usesAuth": true,
      "authPattern": "organizationId",
      "callSites": []
    },
    {
      "name": "getOrganizationRoles",
      "location": "src/lib/dal/organizations.ts:232",
      "isCached": true,
      "isAsync": true,
      "returnType": "Promise<Role[]>",
      "usesAuth": true,
      "authPattern": "organizationId",
      "callSites": []
    },
    {
      "name": "validateUserMembership",
      "location": "src/lib/dal/organizations.ts:252",
      "isCached": true,
      "isAsync": true,
      "returnType": "Promise<Membership | null>",
      "usesAuth": true,
      "authPattern": "organizationId",
      "callSites": []
    },
    {
      "name": "getCurrentUserProfile",
      "location": "src/lib/dal/users.ts:18",
      "isCached": true,
      "isAsync": true,
      "returnType": "Promise<UserProfile>",
      "usesAuth": true,
      "authPattern": "organizationId",
      "callSites": []
    },
    {
      "name": "getUserById",
      "location": "src/lib/dal/users.ts:50",
      "isCached": true,
      "isAsync": true,
      "returnType": "Promise<User | null>",
      "usesAuth": true,
      "authPattern": "organizationId",
      "callSites": []
    },
    {
      "name": "getCurrentUserMembership",
      "location": "src/lib/dal/users.ts:84",
      "isCached": true,
      "isAsync": true,
      "returnType": "Promise<Membership>",
      "usesAuth": true,
      "authPattern": "organizationId",
      "callSites": []
    },
    {
      "name": "getIssuesForOrg",
      "location": "src/lib/dal/issues.ts:18",
      "isCached": true,
      "isAsync": true,
      "returnType": "Promise<Issue[]>",
      "usesAuth": true,
      "authPattern": "organizationId",
      "callSites": []
    },
    {
      "name": "getIssuesWithFilters",
      "location": "src/lib/dal/issues.ts:59",
      "isCached": true,
      "isAsync": true,
      "returnType": "Promise<Issue[]>",
      "usesAuth": true,
      "authPattern": "organizationId",
      "callSites": []
    },
    {
      "name": "getIssueById",
      "location": "src/lib/dal/issues.ts:213",
      "isCached": true,
      "isAsync": true,
      "returnType": "Promise<Issue | null>",
      "usesAuth": true,
      "authPattern": "organizationId",
      "callSites": []
    },
    {
      "name": "getUserNotifications",
      "location": "src/lib/dal/notifications.ts:19",
      "isCached": true,
      "isAsync": true,
      "returnType": "Promise<Notification[]>",
      "usesAuth": true,
      "authPattern": "organizationId",
      "callSites": []
    },
    {
      "name": "checkSystemHealth",
      "location": "src/lib/dal/system-health.ts:19",
      "isCached": true,
      "isAsync": true,
      "returnType": "Promise<HealthStatus>",
      "usesAuth": false,
      "authPattern": "none",
      "callSites": []
    }
  ],
  "patterns": {
    "ensureOrgContextAndBindRLS": 0,
    "withOrgRLS": 0,
    "directDbAccess": 0,
    "supabaseClient": 1,
    "organizationId": 30,
    "getRequestAuthContext": 4
  },
  "cacheOptimizations": {
    "react19CacheUsage": 35,
    "requestLevelMemoization": true,
    "duplicateFetchPrevention": true,
    "uncachedFunctions": [],
    "migrationNeeds": []
  },
  "authenticationIntegration": {
    "canonicalResolver": "getRequestAuthContext",
    "orgScopedPattern": "organizationId parameter",
    "authlessPatterns": ["none", "public"],
    "securityCompliance": "All org-scoped functions require organizationId parameter"
  }
}