{
  "inventoryDate": "2025-01-04",
  "totalConditionals": 18,
  "conditionals": [
    {
      "location": "src/app/sign-in/page.tsx:104",
      "condition": "testUser?.role?.name",
      "context": "Sign-in Page Component",
      "function": "testUser role assignment",
      "lineNumber": 104,
      "classification": "ui-display",
      "migrationPriority": "low"
    },
    {
      "location": "src/app/sign-in/page.tsx:133",
      "condition": "role.name.toLowerCase()",
      "context": "Badge variant selection",
      "function": "getBadgeVariant",
      "lineNumber": 133,
      "classification": "ui-display",
      "migrationPriority": "low"
    },
    {
      "location": "src/app/sign-in/page.tsx:221",
      "condition": "testUser.role.name.toUpperCase()",
      "context": "Badge display",
      "function": "role name display",
      "lineNumber": 221,
      "classification": "ui-display",
      "migrationPriority": "low"
    },
    {
      "location": "src/server/context/request-context.ts:79",
      "condition": "auth.membership.role.id",
      "context": "Request context mapping",
      "function": "mapAuthToRequestContext",
      "lineNumber": 79,
      "classification": "context-building",
      "migrationPriority": "none"
    },
    {
      "location": "src/server/context/request-context.ts:80",
      "condition": "auth.membership.role.name",
      "context": "Request context mapping", 
      "function": "mapAuthToRequestContext",
      "lineNumber": 80,
      "classification": "context-building",
      "migrationPriority": "none"
    },
    {
      "location": "src/lib/organization-context.ts:105",
      "condition": "ctx.membership.role",
      "context": "Legacy organization context",
      "function": "requireMemberAccess",
      "lineNumber": 105,
      "classification": "legacy-wrapper",
      "migrationPriority": "medium"
    },
    {
      "location": "src/server/services/roleService.ts:296",
      "condition": "role.name === SYSTEM_ROLES.ADMIN",
      "context": "System role validation",
      "function": "validateSystemRoleConstraints",
      "lineNumber": 296,
      "classification": "domain-rule",
      "migrationPriority": "high"
    },
    {
      "location": "src/server/services/permissionService.ts:63",
      "condition": "membership.role.name === SYSTEM_ROLES.ADMIN",
      "context": "Permission check",
      "function": "hasPermission",
      "lineNumber": 63,
      "classification": "permission-evaluation",
      "migrationPriority": "high"
    },
    {
      "location": "src/server/services/permissionService.ts:68",
      "condition": "membership.role",
      "context": "Permission check delegation",
      "function": "roleHasPermission",
      "lineNumber": 68,
      "classification": "permission-evaluation",
      "migrationPriority": "low"
    },
    {
      "location": "src/server/services/permissionService.ts:116",
      "condition": "membership.role.name === SYSTEM_ROLES.ADMIN",
      "context": "Get user permissions",
      "function": "getUserPermissions",
      "lineNumber": 116,
      "classification": "permission-evaluation",
      "migrationPriority": "high"
    },
    {
      "location": "src/server/services/permissionService.ts:122",
      "condition": "membership.role.permissions.map",
      "context": "Role permissions extraction",
      "function": "getUserPermissions",
      "lineNumber": 122,
      "classification": "permission-evaluation",
      "migrationPriority": "low"
    },
    {
      "location": "src/server/services/permissionService.ts:150",
      "condition": "membership.role.name === SYSTEM_ROLES.ADMIN",
      "context": "Get effective permissions",
      "function": "getEffectivePermissions",
      "lineNumber": 150,
      "classification": "permission-evaluation",
      "migrationPriority": "high"
    },
    {
      "location": "src/server/services/permissionService.ts:155",
      "condition": "membership.role.permissions.map",
      "context": "Role permissions extraction",
      "function": "getEffectivePermissions", 
      "lineNumber": 155,
      "classification": "permission-evaluation",
      "migrationPriority": "low"
    },
    {
      "location": "src/server/services/permissionService.ts:242",
      "condition": "membership.role.name",
      "context": "Permission context creation",
      "function": "createPermissionContext",
      "lineNumber": 242,
      "classification": "permission-evaluation",
      "migrationPriority": "low"
    },
    {
      "location": "src/server/auth/context.ts:127",
      "condition": "membership.role.id",
      "context": "Canonical auth context",
      "function": "getRequestAuthContext",
      "lineNumber": 127,
      "classification": "context-building",
      "migrationPriority": "none"
    },
    {
      "location": "src/server/auth/context.ts:128",
      "condition": "membership.role.name",
      "context": "Canonical auth context",
      "function": "getRequestAuthContext",
      "lineNumber": 128,
      "classification": "context-building",
      "migrationPriority": "none"
    },
    {
      "location": "src/server/auth/permissions.ts:56",
      "condition": "role.name === SYSTEM_ROLES.ADMIN",
      "context": "Permission check",
      "function": "hasPermission",
      "lineNumber": 56,
      "classification": "permission-evaluation",
      "migrationPriority": "high"
    },
    {
      "location": "src/server/auth/permissions.ts:121",
      "condition": "role.name === SYSTEM_ROLES.ADMIN", 
      "context": "Get user permissions",
      "function": "getUserPermissions",
      "lineNumber": 121,
      "classification": "permission-evaluation",
      "migrationPriority": "high"
    }
  ],
  "roleChecks": {
    "admin": 6,
    "manager": 0,
    "member": 0,
    "viewer": 0
  },
  "patterns": {
    "hardcodedRoleNames": 7,
    "roleIdComparisons": 4,
    "permissionChecks": 7
  },
  "systemRoles": {
    "ADMIN": "System administrator role with all permissions",
    "usageLocations": [
      "src/server/services/roleService.ts:296",
      "src/server/services/permissionService.ts:63",
      "src/server/services/permissionService.ts:116",
      "src/server/services/permissionService.ts:150",
      "src/server/auth/permissions.ts:56",
      "src/server/auth/permissions.ts:121"
    ]
  },
  "securityPatterns": {
    "permissionBasedChecks": [
      "src/server/services/permissionService.ts:63",
      "src/server/services/permissionService.ts:116", 
      "src/server/services/permissionService.ts:150",
      "src/server/auth/permissions.ts:56",
      "src/server/auth/permissions.ts:121"
    ],
    "directRoleChecks": [
      "src/app/sign-in/page.tsx:133",
      "src/server/services/roleService.ts:296"
    ],
    "contextualRoleAccess": [
      "src/server/context/request-context.ts:79",
      "src/server/context/request-context.ts:80",
      "src/lib/organization-context.ts:105",
      "src/server/auth/context.ts:127",
      "src/server/auth/context.ts:128"
    ]
  },
  "migrationOpportunities": [
    {
      "pattern": "hardcodedRoleNames",
      "description": "Replace hardcoded role name checks with permission-based checks",
      "locations": [
        "src/app/sign-in/page.tsx:133",
        "src/server/services/roleService.ts:296"
      ],
      "recommendation": "Use permission system instead of direct role name comparisons"
    },
    {
      "pattern": "roleIdComparisons", 
      "description": "Role ID access is appropriate for system context",
      "locations": [
        "src/server/context/request-context.ts:79",
        "src/server/auth/context.ts:127"
      ],
      "recommendation": "No changes needed - structural access for context building"
    }
  ],
  "permissionSystemIntegration": {
    "corePermissionFiles": [
      "src/server/auth/permissions.ts",
      "src/server/services/permissionService.ts"
    ],
    "permissionConstants": "src/server/auth/permissions.constants.ts",
    "systemRolesConstant": "SYSTEM_ROLES.ADMIN",
    "recommendedPattern": "Permission-based checks over direct role name comparisons"
  }
}